Class PM_EntropicAvatarSpawner : Actor
{
	Default
	{
	Speed 50;
	Radius 20;
    Height 56;
	Mass 40;
	MONSTER;
	+THRUACTORS
	-SOLID
	-SHOOTABLE
	-CANUSEWALLS
	-CANPUSHWALLS
	+THRUGHOST
	+GHOST
	-ACTIVATEMCROSS
	+INVULNERABLE
	+LOOKALLAROUND
	+NOTARGET
	-COUNTKILL
	MaxStepHeight 64;
	MaxDropOffHeight 64;
	TeleFogSourceType "RailNullPuff";
    TeleFogDestType "RailNullPuff";
  }
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 1 A_Wander();
		TNT1 A 5 A_Look();
		Loop;
	See:
		TNT1 A 0;
		TNT1 A 5 A_Chase();
		TNT1 A 0 A_JumpIfTargetinLOS("Start",150,JLOSF_DEADNOJUMP);
		TNT1 A 0 A_Jump(1,"Spawn");
		Loop;
	Start:
		TNT1 A 0 {bNOCLIP = true;}
		TNT1 A 0 A_SetAngle(random(-360,360));
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_Wander();
		TNT1 A 0 A_StartSound("PM/AvatarIntro",34,CHANF_UI,1,ATTN_NONE);
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_Wander();
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_Wander();
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_Wander();
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_Wander();
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_Wander();
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_Wander();
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_Wander();
		TNT1 A 0 A_StartSound("PM/AvatarIntroGiggle",35,CHANF_DEFAULT,1,0.5);
		TNT1 A 0 A_SpawnItemEx("PM_EntropicAvatarIntro",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
		Stop;
	Die:
		Stop;
	}
}

Class PM_EntropicAvatarIntro : PMBossMonsterBase
{
	Default
	{
		Health 800;
		Radius 28;
		Height 90;
		Mass 2000;
		Speed 5;
		Monster;
		MeleeRange 90;
		MaxStepHeight 80;
		MaxDropOffHeight 80;
		Species "VoidElder";
		Tag "...";
		+NORADIUSDMG;
		+FLOORCLIP;
		+BOSS;
		+NOINFIGHTING;
		+DONTHARMSPECIES;
		+LOOKALLAROUND;
		+BRIGHT;
		+SLIDESONWALLS;
		+NOEXTREMEDEATH;
		+THRUSPECIES;
		+DONTHARMCLASS;
		+DONTFALL;
		+NOICEDEATH;
		+DROPOFF;
		+NOBLOCKMONST;
		+NOBLOOD;
		+MISSILEevenMORE;
		+NEVERFAST
		+LOOKALLAROUND
		+BRIGHT;
		+NOCLIP
		-COUNTKILL
		+NOPAIN
		Obituary "%o was hunted.";
		HitObituary "%o was eviscerated.";
		TeleFogSourceType "RailNullPuff";
		TeleFogDestType "RailNullPuff";
	}
	
	protected TextureId tex[8];
	
	void EAvatarEffects()
	{
		A_SetScale(frandom(.97,1.03),frandom(.99,1.01));
	}
	
	static const string TagNames[] =
	{
		"RUN", "RUN", "Run.", "L?GHTBR?NGER", "!", "@", "#", "$", "???", "?", "%*$()", "@#$(", "$@(#)%*", "^", "*", "LIGHTBRINGER", "EN?ROP?C AV??AR", "VOID VOID VOID", "ENTROPIC AVATAR", "You will be beautiful.",
		"RNU", "HELP.", "void", "($#%#@*%)(#@*$()*@#", "()%*&@#(&)%!&%*_&!%)*(@)$*", "^)%__+_#", "!_@#+!_", "Unknown", "", " ", "suffer", "CUT THE FLESH", "PEEL THE SKIN", "BREAK THE BONE", "THE VOICES",
		"RRUUNN", "DEPR?V??Y ?F HUM??I?Y", "YOU ARE SEEING IT, AND IT IS BEAUTIFUL", "FACILIS DECENSUS AVERNO", "AVERNO", "HELL", "______________________________"
	};
	
	override void PostBeginPlay()
	{
	 sightcheck = random(150, 400);
	 tex[0] = TexMan.CheckForTexture("RUNGA0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("RUNGB0",TexMan.Type_Sprite);
	 tex[2] = TexMan.CheckForTexture("RUNGC0",TexMan.Type_Sprite);
	 tex[3] = TexMan.CheckForTexture("RUNGD0",TexMan.Type_Sprite);
	 tex[4] = TexMan.CheckForTexture("RUNGE0",TexMan.Type_Sprite);
	 tex[5] = TexMan.CheckForTexture("RUNGF0",TexMan.Type_Sprite);
	 tex[6] = TexMan.CheckForTexture("RUNGG0",TexMan.Type_Sprite);
	 tex[7] = TexMan.CheckForTexture("RUNGH0",TexMan.Type_Sprite);
	}
	
	override void Tick()
	{
		if (level.isFrozen()) return;
		super.Tick();
		
		if ((level.maptime % 2) == 0)
		{
		for (int i = 2; i > 0; i--)
		{
			A_SpawnParticleEx
			(   
			 "000000",
			 TexMan.CheckForTexture("GNSMK0"),
			 style: STYLE_Normal,
			 flags: SPF_ROLL|SPF_RELATIVE,
			 lifetime: random(3,80),
			 size: frandom(30,200),
			 angle: 0,
			 xoff: frandom(-20,20),
			 yoff: frandom(-20,20),
			 zoff: frandom(0,115),
			 velx: frandom(-1,1),
			 vely: frandom(-1,1),
			 velz: frandom(-1,1),
			 accelx: 0,
			 accely: 0,
			 accelz: 0,
			 startalphaf: frandom(0.1,0.6),
			 fadestepf: -1,
			 sizestep: frandom(0.2,5),
			 startroll: random(-180,180),
			 rollvel: frandom(-0.5,0.5),
			 rollacc: 0
			);
			A_SpawnParticleEx
			(
			"000000",
			TexMan.CheckForTexture("SPKOA0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
			lifetime: random(200,500),
			size: frandom(0.8,30),
			xoff: random(-2000,2000),
			yoff: random(-2000,2000),
			zoff: random(-300,300),
			velx: frandom(-1,1),
			vely: frandom(-1,1),
			velz: frandom(-1,1),
			accelx: frandom(-0.1,0.1),
			accely: frandom(-0.1,0.1),
			accelz: frandom(-0.1,0.1),
			startalphaf: 1.0,
			fadestepf: 0,
			sizestep: -0.2,
			startroll: random(-180,180)
			);
		}

		A_SpawnParticleEx
		(
		"000000",
		TexMan.CheckForTexture("PURLA0"),
		style: STYLE_Normal,
		flags: SPF_ROLL|SPF_RELATIVE,
		lifetime: random(1,25),
		size: frandom(1,300),
		xoff: frandom(-10,10),
		yoff: frandom(-10,10),
		zoff: frandom(0,110),
		velx: random(-1,1),
		vely: random(-1,1),
		velz: random(-1,1),
		startalphaf:frandom(0.1, 0.5),
		fadestepf: -1,
		sizestep: frandom(-5,5),
		startroll: random(-180,180),
		rollvel: frandom(-2,2)
		);
		}
		EAvatarEffects();
		
		if (run)
		{
			if (!(GetAge() % 2))
			{
				A_SetScale(frandom(.97,1.03),frandom(.99,1.01));
				A_AvatarGlitch();
			}
		}
		
		A_AvatarGlitch();
		
		//Tag
		SetTag(TagNames[random(0, TagNames.size() - 1)]..TagNames[random(0, TagNames.size() - 1)]..TagNames[random(0, TagNames.size() - 1)]..TagNames[random(0, TagNames.size() - 1)]);
	}
	
	void A_AvatarGlitch(vector3 pvel = (0, 0, 0))
	{
		A_SpawnParticleEx
		(
		"000000",
		tex[random(0, 7)],
		style: STYLE_Normal,
		flags: SPF_RELATIVE,
		lifetime: random(2, 5),
		size: 50,
		xoff: frandom(-radius,radius),
		yoff: frandom(-radius,radius),
		zoff: frandom(0,height * 1.65),
		velx: pvel.x,
		vely: pvel.y,
		velz: pvel.z,
		startalphaf: 1,
		fadestepf: 0,
		sizestep: 0
		);
	}
	
	bool run;
	int sightcheck;
	
	States
	{
	Spawn:
		TNT1 A 0 A_StopSound(CHAN_ITEM);
		TNT1 A 0 A_StopSound(CHAN_VOICE);
		TNT1 A 0 A_AttachLightDef("ENTITY-Aurora","ENTITYAurora");
	Floaty:
		TNT1 A 0;
		TNT1 A 0 A_QuakeEx(1,1,1,3,0,750,"*");
		TNT1 A 0 {bFLOATBOB = true;}
		TNT1 A 0 {bNOPAIN = true;}
		RUNR A 1 A_Look();
		TNT1 A 0
		{
			int start = Random(0, MAXPLAYERS-1);
			for (int k = 0; k < MAXPLAYERS; k++)
			{
			int i = (start + k) % MAXPLAYERS;
			if (!PlayerInGame[i]) continue;
			PlayerPawn pp = players[i].mo;
			if (pp && pp.health > 0) { target = pp; SetStateLabel("See"); break; }
			}
		}
		loop;
	See:
		TNT1 A 0 A_StartSound("EntAva/Giggle",CHAN_VOICE,CHANF_LOOP);
		TNT1 A 0 A_StartSound(random(0, 1) ? "EntAva/ScreamLoop2" : "EntAva/ScreamLoop1",CHAN_ITEM,CHANF_LOOP,0.5,0.6);
		TNT1 A 0 A_AttachLightDef("ENTITY-Aurora","ENTITYAurora");
	SeeWatch:
		TNT1 A 0 A_SetSpeed(14);
		RUNR AAAAAA 1
			{
			A_AvatarGlitch();
			A_FaceTarget();
			A_SetScale(frandom(.97,1.03),frandom(.99,1.01));
			{bFLOATBOB = true;}
			A_Chase(null,null);
			}
		TNT1 A 0 A_CheckSight("SeeWatch");
	FloatyLooky:
		TNT1 A 0;
		TNT1 A 0 A_SetSpeed(3);
		RUNR AAAAAA 2
			{
			A_AvatarGlitch();
			A_FaceTarget();
			A_SetScale(frandom(.97,1.03),frandom(.99,1.01));
			{bFLOATBOB = true;}
			A_Chase(null,null);
			}
		TNT1 A 0 A_Jump(25,"ShadowBallTry");
		TNT1 A 0 A_CheckSight("SeeWatch");
		Goto FloatyLooky;
	ShadowBallTry:
		TNT1 A 0 A_CheckSight("SeeWatch");
	ShadowBall:
		TNT1 A 0;
		TNT1 A 0 A_SetSpeed(2);
		RUNR AAAAAAAAAAAA 3
			{
			A_SpawnProjectile("PM_PotsBall",random(30,180),random(-90,90),frandom(-8,8),CMF_OFFSETPITCH,frandom(-5,5));
			A_AvatarGlitch();
			A_FaceTarget();
			A_SetScale(frandom(.97,1.03),frandom(.99,1.01));
			A_Chase(null,null);
			{bFLOATBOB = true;}
			}
		Goto FloatyLooky;
	Melee:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_EntropicAvatar",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
		Stop;
	Death:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_EntropicAvatar",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
		Stop;
	}
}


Class PM_EntropicAvatar : PMBossMonsterBase
{

	int MeleeSwings;

	Default
	{
		PMMonsterBase.CodexLore
	    "The Abyss is a chaotic, but patient nadir.
		
		 They'd usually dwell within it, waiting tirelessly for the next soul to fall inside. There are rarer times where they might call to the most damned soul to walk right in, inviting them to a place where they can call home.
		 For those unwilling, the Abyss would send unto them its puppets. The thralls would follow each other's cries, dragging them into the night below, to cause them an eternity of suffering most incomprehensible until they swear loyalty to the light below.
		 
		 The \cr?????? \cbis but a countermeasure for those who would be brave or foolish enough to resist completely.";
		Health 3000;
		Radius 28;
		Height 90;
		Mass 2000;
		Speed 24;
		PainChance 50;
		Monster;
		MeleeThreshold 300;
		MeleeRange 90;
		MaxStepHeight 80;
		MaxDropOffHeight 80;
		Species "VoidElder";
		Tag "...";
		+NORADIUSDMG;
		+FLOORCLIP;
		+BOSS;
		+NOINFIGHTING;
		+DONTHARMSPECIES;
		+LOOKALLAROUND;
		+BRIGHT;
		+SLIDESONWALLS;
		+NOEXTREMEDEATH;
		+THRUSPECIES;
		+DONTHARMCLASS;
		+DONTFALL;
		+NOICEDEATH;
		+DROPOFF;
		+NOBLOCKMONST;
		+NOBLOOD;
		+MISSILEevenMORE;
		+NEVERFAST
		+LOOKALLAROUND
		+BRIGHT;
		+NOCLIP
		+NOPAIN
		Obituary "%o was hunted.";
		HitObituary "%o was eviscerated.";
		TeleFogSourceType "PM_SmallDemonicTeleportFog";
		TeleFogDestType "PM_SmallDemonicTeleportFog";
	}
	
	protected TextureId tex[8];
	
	void EAvatarEffects()
	{
		A_SetScale(frandom(.97,1.03),frandom(.99,1.01));
	}
	
	static const string TagNames[] =
	{
		"RUN", "RUN", "Run.", "L?GHTBR?NGER", "!", "@", "#", "$", "???", "?", "%*$()", "@#$(", "$@(#)%*", "^", "*", "LIGHTBRINGER", "EN?ROP?C AV??AR", "VOID VOID VOID", "ENTROPIC AVATAR", "You will be beautiful.",
		"RNU", "HELP.", "void", "($#%#@*%)(#@*$()*@#", "()%*&@#(&)%!&%*_&!%)*(@)$*", "^)%__+_#", "!_@#+!_", "Unknown", "", " ", "suffer", "CUT THE FLESH", "PEEL THE SKIN", "BREAK THE BONE", "THE VOICES",
		"RRUUNN", "DEPR?V??Y ?F HUM??I?Y", "YOU ARE SEEING IT, AND IT IS BEAUTIFUL", "FACILIS DECENSUS AVERNO", "AVERNO", "HELL", "______________________________"
	};
	
	override void PostBeginPlay()
	{
	 sightcheck = random(150, 400);
	 tex[0] = TexMan.CheckForTexture("RUNGA0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("RUNGB0",TexMan.Type_Sprite);
	 tex[2] = TexMan.CheckForTexture("RUNGC0",TexMan.Type_Sprite);
	 tex[3] = TexMan.CheckForTexture("RUNGD0",TexMan.Type_Sprite);
	 tex[4] = TexMan.CheckForTexture("RUNGE0",TexMan.Type_Sprite);
	 tex[5] = TexMan.CheckForTexture("RUNGF0",TexMan.Type_Sprite);
	 tex[6] = TexMan.CheckForTexture("RUNGG0",TexMan.Type_Sprite);
	 tex[7] = TexMan.CheckForTexture("RUNGH0",TexMan.Type_Sprite);
	}
	
	override void Tick()
	{
		if (level.isFrozen()) return;
		super.Tick();
		
		if ((level.maptime % 2) == 0)
		{
		for (int i = 2; i > 0; i--)
		{
			A_SpawnParticleEx
			(   
			 "000000",
			 TexMan.CheckForTexture("GNSMK0"),
			 style: STYLE_Normal,
			 flags: SPF_ROLL|SPF_RELATIVE,
			 lifetime: random(3,80),
			 size: frandom(30,200),
			 angle: 0,
			 xoff: frandom(-20,20),
			 yoff: frandom(-20,20),
			 zoff: frandom(0,115),
			 velx: frandom(-1,1),
			 vely: frandom(-1,1),
			 velz: frandom(-1,1),
			 accelx: 0,
			 accely: 0,
			 accelz: 0,
			 startalphaf: frandom(0.1,0.6),
			 fadestepf: -1,
			 sizestep: frandom(0.2,5),
			 startroll: random(-180,180),
			 rollvel: frandom(-0.5,0.5),
			 rollacc: 0
			);
			A_SpawnParticleEx
			(
			"000000",
			TexMan.CheckForTexture("SPKOA0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
			lifetime: random(200,500),
			size: frandom(0.8,30),
			xoff: random(-2000,2000),
			yoff: random(-2000,2000),
			zoff: random(-300,300),
			velx: frandom(-1,1),
			vely: frandom(-1,1),
			velz: frandom(-1,1),
			accelx: frandom(-0.1,0.1),
			accely: frandom(-0.1,0.1),
			accelz: frandom(-0.1,0.1),
			startalphaf: 1.0,
			fadestepf: 0,
			sizestep: -0.2,
			startroll: random(-180,180)
			);
		}

		A_SpawnParticleEx
		(
		"000000",
		TexMan.CheckForTexture("PURLA0"),
		style: STYLE_Normal,
		flags: SPF_ROLL|SPF_RELATIVE,
		lifetime: random(1,25),
		size: frandom(1,300),
		xoff: frandom(-10,10),
		yoff: frandom(-10,10),
		zoff: frandom(0,110),
		velx: random(-1,1),
		vely: random(-1,1),
		velz: random(-1,1),
		startalphaf:frandom(0.1, 0.5),
		fadestepf: -1,
		sizestep: frandom(-5,5),
		startroll: random(-180,180),
		rollvel: frandom(-2,2)
		);
		}
		EAvatarEffects();
		
		if (run)
		{
			if (!(GetAge() % 2))
			{
				A_SetScale(frandom(.97,1.03),frandom(.99,1.01));
				A_AvatarGlitch();
			}
		}
		
		A_AvatarGlitch();
		
		//Tag
		SetTag(TagNames[random(0, TagNames.size() - 1)]..TagNames[random(0, TagNames.size() - 1)]..TagNames[random(0, TagNames.size() - 1)]..TagNames[random(0, TagNames.size() - 1)]);
	}
	
	void A_AvatarGlitch(vector3 pvel = (0, 0, 0))
	{
		A_SpawnParticleEx
		(
		"000000",
		tex[random(0, 7)],
		style: STYLE_Normal,
		flags: SPF_RELATIVE,
		lifetime: random(2, 5),
		size: 50,
		xoff: frandom(-radius,radius),
		yoff: frandom(-radius,radius),
		zoff: frandom(0,height * 1.65),
		velx: pvel.x,
		vely: pvel.y,
		velz: pvel.z,
		startalphaf: 1,
		fadestepf: 0,
		sizestep: 0
		);
	}
	
	bool run;
	int sightcheck;
	
	States
	{

//////////////////////////////////////////////////////////////JOJO POSE
	
	Spawn:
		TNT1 A 0 A_StopSound(CHAN_ITEM);
		TNT1 A 0 A_StopSound(CHAN_VOICE);
		TNT1 A 0 A_AttachLightDef("ENTITY-Aurora","ENTITYAurora");
	Floaty:
		TNT1 A 0;
		TNT1 A 0 A_QuakeEx(1,1,1,3,0,750,"*");
		TNT1 A 0 {bFLOATBOB = true;}
		TNT1 A 0 {bNOPAIN = true;}
		RUNR A 1 A_Look();
		TNT1 A 0
		{
			int start = Random(0, MAXPLAYERS-1);
			for (int k = 0; k < MAXPLAYERS; k++)
			{
			int i = (start + k) % MAXPLAYERS;
			if (!PlayerInGame[i]) continue;
			PlayerPawn pp = players[i].mo;
			if (pp && pp.health > 0) { target = pp; SetStateLabel("See"); break; }
			}
		}
		loop;
		
//////////////////////////////////////////////////////////////STILL JOJO
		
	See:
		TNT1 A 0 A_StartSound("EntAva/Giggle",CHAN_VOICE,CHANF_LOOP);
		TNT1 A 0 A_StartSound(random(0, 1) ? "EntAva/ScreamLoop2" : "EntAva/ScreamLoop1",CHAN_ITEM,CHANF_LOOP,0.8);
		TNT1 A 0 A_AttachLightDef("ENTITY-Aurora","ENTITYAurora");
	SeeWatch:
		RUNR AAAAAA 1
			{
			A_AvatarGlitch();
			A_FaceTarget();
			A_SetScale(frandom(.97,1.03),frandom(.99,1.01));
			{bFLOATBOB = true;}
			}
		TNT1 A 0 A_Chase(null,null);
		TNT1 A 0 A_CheckSight("SeeWatch");
	FloatyLooky:
		TNT1 A 0;
		TNT1 A 0 {bNOCLIP = true;}
		RUNR A 1
			{
			A_AvatarGlitch();
			A_FaceTarget();
			A_SetScale(frandom(.97,1.03),frandom(.99,1.01));
			{bFLOATBOB = true;}
			if (target && distance3D(target) < 300) SetStateLabel("ROAR");
			if (health < GetMaxHealth() && target && CheckSight(target)) SetStateLabel("ROAR");
			if (sightcheck <= 0) SetStateLabel("ROAR");
			}
		TNT1 A 0 A_JumpIfInTargetLOS("ROAR",30,JLOSF_DEADNOJUMP,800);
//////////////////////////////////////////////////////////////YELL AT YOU
		
	ROAR:
		TNT1 A 0 A_StopSound(CHAN_ITEM);
		TNT1 A 0 A_StopSound(CHAN_VOICE);
		TNT1 A 0 {bFLOATBOB = false;}
		TNT1 A 0 A_RemoveLight("ENTITY-Aurora");
		
		TNT1 A 0 A_StartSound("EntAva/Slam",CHAN_VOICE,0,1);
		TNT1 A 0 A_QuakeEx(2,2,2,10,0,750,"*");
		RUNR D 16;	
		TNT1 A 0 A_StartSound("EntAva/Roar",CHAN_ITEM,0,1);
		
		TNT1 A 0 A_QuakeEx(2,2,2,30,0,1000,"*");
		RUNR EHEGGEHHEHEGGFFEEEFFFFEEFGGEFFFEGEGEFEGGGGGEFGGEEEHHEEGHGHEEH 1 Light("PM_HugeFastHorrorBlackflash")
		{
		 run = true;
		 for (int i = 3; i > 0; i--) A_AvatarGlitch((frandom(-2, 2), frandom(-2, 2), frandom(0, 3)));
		 A_SetScale(frandom(.97,1.03),frandom(.99,1.01));
		 A_FaceTarget();
		}
		RUNR D 5 A_FaceTarget();
		TNT1 A 0 {bNOPAIN = false; if (!random(0, 2)) SetStateLabel("StartMoving"); }
		Goto StartingCharge;
	StartingCharge:
		TNT1 A 0 A_StopSound(CHAN_7);
		TNT1 A 0 A_StartSound("EntAva/IdleScreaming",CHAN_ITEM,CHANF_LOOP,1,ATTN_NORM,frandom(0.8,1.2),frandom(0,1));
		TNT1 A 0 A_StartSound("EntAva/Giggle",CHAN_VOICE,CHANF_LOOP);
		Goto Charging;
//////////////////////////////////////////////////////////////START LOOPS
	StartMoving:
		TNT1 A 0 A_StopSound(CHAN_7);
		TNT1 A 0 A_StartSound("EntAva/IdleScreaming",CHAN_ITEM,CHANF_LOOP,1,ATTN_NORM,frandom(0.8,1.2),frandom(0,1));
		TNT1 A 0 A_StartSound("EntAva/Giggle",CHAN_VOICE,CHANF_LOOP);
	NewWalkCycle:
		TNT1 A 0 {bNOPAIN = false; A_StopSound(25);}
		TNT1 A 0 A_AttachLightDef("ENTITY-Aurora","ENTITYAurora");
		TNT1 A 0 A_jump(256,"WalkForward","WalkRight","WalkLeft");
//////////////////////////////////////////////////////////////WALK STRAIGHT
	WalkForward:
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW2 AABBCC random(0,4)
		{
		A_AvatarGlitch();
		A_Chase();
		}
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW2 DDEEFF random(0,4)
		{
		A_AvatarGlitch();
		A_Chase();
		}
		Goto NewWalkCycle;
		
	SlowWalk:
		TNT1 A 0 {bNOPAIN = true;}
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW2 AABBCC random(2, 10)
		{
		A_AvatarGlitch();
		A_Chase();
		}
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW2 DDEEFF random(2, 10)
		{
		A_AvatarGlitch();
		A_Chase();
		}
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW2 AABBCC random(2, 10)
		{
		A_AvatarGlitch();
		A_Chase();
		}
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW2 DDEEFF random(2, 10)
		{
		A_AvatarGlitch();
		A_Chase();
		}
		TNT1 A 0 {bNOPAIN = false;}
		Goto NewWalkCycle;
		
//////////////////////////////////////////////////////////////PHASE WALK
	RushWalk:
		TNT1 A 0 {bNOPAIN = true;}
		RUW2 AA 1;
		TNT1 AAA 0 A_Chase("Melee",null);		
		RUW2 BB 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 CC 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		TNT1 A 0 A_jump(128,"NewWalkCycle");
		RUW2 DD 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 FF 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 FF 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW2 AA 1;
		TNT1 AAA 0 A_Chase("Melee",null);		
		RUW2 BB 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 CC 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		TNT1 A 0 A_jump(128,"NewWalkCycle");
		RUW2 DD 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 FF 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 FF 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW2 AA 1;
		TNT1 AAA 0 A_Chase("Melee",null);		
		RUW2 BB 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 CC 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		TNT1 A 0 A_jump(128,"NewWalkCycle");
		RUW2 DD 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 FF 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 FF 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW2 AA 1;
		TNT1 AAA 0 A_Chase("Melee",null);		
		RUW2 BB 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 CC 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		TNT1 A 0 A_jump(128,"NewWalkCycle");
		RUW2 DD 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 FF 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 FF 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW2 AA 1;
		TNT1 AAA 0 A_Chase("Melee",null);		
		RUW2 BB 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 CC 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		TNT1 A 0 A_jump(128,"NewWalkCycle");
		RUW2 DD 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 FF 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 FF 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW2 AA 1 ;
		TNT1 AAA 0 A_Chase("Melee",null);		
		RUW2 BB 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 CC 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		TNT1 A 0 A_jump(128,"NewWalkCycle");
		RUW2 DD 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 FF 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		RUW2 FF 1;
		TNT1 AAA 0 A_Chase("Melee",null);	
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		TNT1 A 0 {bNOPAIN = false;}
		Goto NewWalkCycle;
//////////////////////////////////////////////////////////////WALK RIGHT	
	WalkRight:
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW3 AABBCC random(0,5)
		{
		A_AvatarGlitch();
		A_Chase();
		}
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW3 DDEEFF random(0,5)
		{
		A_AvatarGlitch();
		A_Chase();
		}
		Goto NewWalkCycle;
//////////////////////////////////////////////////////////////WALK LEFT
		
	WalkLeft:
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW1 AABBCC random(0,5)
		{
		A_AvatarGlitch();
		A_Chase();
		}
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_StartSound("EntAva/Footstep",CHAN_7,0,1);
		RUW1 DDEEFF random(0,5)
		{
		A_AvatarGlitch();
		A_Chase();
		}
		Goto NewWalkCycle;
//////////////////////////////////////////////////////////////TELEPORT
	Spaz:
		TNT1 A 0 {bNOPAIN = true;}
	    TNT1 A 0 A_StopSound(CHAN_6);
		TNT1 A 0 A_StopSound(CHAN_5);
		RUNR D 20;
		TNT1 A 0 A_SetSpeed(random(100, 150));
		TNT1 A 0 A_StopSound(25);
		TNT1 A 0 A_StartSound("EntAva/Laugh",CHAN_ITEM,0,1);
		RUW2 ABCDABCDABCD random(1,4) A_Wander();
		TNT1 A 0 A_SetSpeed(20);
		TNT1 A 0 {bNOPAIN = false;}
		Goto NewWalkCycle;
		
//////////////////////////////////////////////////////////////GLIDE
		
	Missile:
		TNT1 A 0 { pm_attackloop = random(1,3); A_StopSound(25); }
		TNT1 A 0 A_Jump(148, "BallThrow","SoulVomitQuick","VoidspawnSummon");
		TNT1 A 0 A_jump(128,"spaz","NewWalkCycle","IceBreath","RushWalk");
		TNT1 A 0 A_Jump(158,"RushWalk");
	Charging:
		TNT1 A 0 {bNOPAIN = true;}
		TNT1 A 0 A_FaceTarget();
		TNT1 A 0 A_StartSound("EntAva/ChargeRoar",CHAN_ITEM);
		TNT1 A 0 A_JumpIfCloser(150,"Melee");
		TNT1 A 0 A_Recoil(-14);
		RUNC AAAA 1;
		TNT1 A 0 A_JumpIfCloser(150,"Melee");
		TNT1 A 0 A_Recoil(-14);
		RUNC AAAA 1;
		TNT1 A 0 A_JumpIfCloser(150,"Melee");
		TNT1 A 0 A_Recoil(-14);
		RUNC AAAAA 1;
		TNT1 A 0 A_JumpIfCloser(150,"Melee");
		TNT1 A 0 A_Recoil(-14);
		RUNC AAAAA 1;
		TNT1 A 0 A_JumpIfCloser(150,"Melee");
		TNT1 A 0 A_Recoil(-14);
		RUNC AAAAA 1;
		TNT1 A 0 A_JumpIfCloser(150,"Melee");
		TNT1 A 0 A_Recoil(-14);
		RUNC AAAAA 1;
		TNT1 A 0 A_JumpIfCloser(150,"Melee");
		TNT1 A 0 A_Recoil(-14);
		RUNC AAAAA 1;
		TNT1 A 0 A_JumpIfCloser(150,"Melee");
		TNT1 A 0 A_Recoil(-14);
		RUNC AAAAA 1;
		TNT1 A 0 A_JumpIfCloser(150,"Melee");
		RUNC BBBBB 1;
		TNT1 A 0 A_JumpIfCloser(150,"Melee");
		RUNC BBBBB 1;
		TNT1 A 0 A_JumpIfCloser(150,"Melee");
		TNT1 A 0 {bNOPAIN = false;}
		Goto StartMoving;
	IceBreath:
		RUW1 FFF 4 A_FaceTarget();
		TNT1 A 0 A_StartSound("PM/AvatarBreathe",CHAN_7,CHANF_LOOPING);
		RUNR EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 1
			{
			A_FaceTarget();
			A_CheckSight("StartMoving");
			A_SpawnProjectile("PM_AvatarFreezeBreath",80);
			A_SpawnParticleEx
				(
				"000000",
				TexMan.CheckForTexture("DB26L0"),
				style: STYLE_Stencil,
				flags: SPF_RELATIVE|SPF_ROLL,
				lifetime: random(50,350),
				size: frandom(5,22),
				angle: 0,
				xoff: 5,
				yoff: random(-3,3),
				zoff: 86,
				velx: frandom(10,30),
				vely: frandom(-3,3),
				velz: frandom(-3,3),
				accelx: 0,
				accely: 0,
				accelz: 0,
				startalphaf: 1.0,
				fadestepf: -1,
				sizestep: -0.1,
				startroll: random(-180,180),
				rollvel: random(-30,30),
				rollacc: 0
				);
				A_SpawnParticleEx
				(
				"000000",
				TexMan.CheckForTexture("DB26L0"),
				style: STYLE_Stencil,
				flags: SPF_RELATIVE|SPF_ROLL,
				lifetime: random(50,350),
				size: frandom(5,22),
				angle: 0,
				xoff: 5,
				yoff: random(-3,3),
				zoff: 86,
				velx: frandom(10,30),
				vely: frandom(-3,3),
				velz: frandom(-3,3),
				accelx: 0,
				accely: 0,
				accelz: 0,
				startalphaf: 1.0,
				fadestepf: -1,
				sizestep: -0.1,
				startroll: random(-180,180),
				rollvel: random(-30,30),
				rollacc: 0
				);
			}
		TNT1 A 0 A_StopSound(CHAN_7);
		RUNR EFGDDD 4 A_FaceTarget();
		Goto StartMoving;
		
	SoulVomitQuick:
		TNT1 A 0
		{
		if(pm_attackloop <= 0)
		{ SetStateLabel("StartMoving"); }
		}
		RUW1 FFF 4 A_FaceTarget();
		TNT1 A 0 A_StartSound("EntAva/Sing",50,CHANF_OVERLAP);
		RUNR EFHGEF random(0,1)
			{
			A_FaceTarget();
			A_CheckSight("StartMoving");
			A_SpawnProjectile("PM_EAvatarSoulVomit",80,0,random(-6,6));
			A_SpawnProjectile("PM_EAvatarSoulVomit",80,0,random(-6,6));
			A_SpawnProjectile("PM_EAvatarSoulVomit",80,0,random(-6,6));
			A_SpawnProjectile("PM_EAvatarSoulVomit",80,0,random(-6,6));
			A_SpawnProjectile("PM_EAvatarSoulVomit",80,0,random(-6,6));
			A_SpawnParticleEx
				(
				"000000",
				TexMan.CheckForTexture("DB26L0"),
				style: STYLE_Stencil,
				flags: SPF_RELATIVE|SPF_ROLL,
				lifetime: random(50,350),
				size: frandom(5,22),
				angle: 0,
				xoff: 5,
				yoff: random(-3,3),
				zoff: 86,
				velx: frandom(10,30),
				vely: frandom(-3,3),
				velz: frandom(-3,3),
				accelx: 0,
				accely: 0,
				accelz: 0,
				startalphaf: 1.0,
				fadestepf: -1,
				sizestep: -0.1,
				startroll: random(-180,180),
				rollvel: random(-30,30),
				rollacc: 0
				);
				A_SpawnParticleEx
				(
				"000000",
				TexMan.CheckForTexture("DB26L0"),
				style: STYLE_Stencil,
				flags: SPF_RELATIVE|SPF_ROLL,
				lifetime: random(50,350),
				size: frandom(5,22),
				angle: 0,
				xoff: 5,
				yoff: random(-3,3),
				zoff: 86,
				velx: frandom(10,30),
				vely: frandom(-3,3),
				velz: frandom(-3,3),
				accelx: 0,
				accely: 0,
				accelz: 0,
				startalphaf: 1.0,
				fadestepf: -1,
				sizestep: -0.1,
				startroll: random(-180,180),
				rollvel: random(-30,30),
				rollacc: 0
				);
			}
		TNT1 A 0
		{
		pm_attackloop--;
		}
		RUNR EFGDDD 2 A_FaceTarget();
		Loop;
	VoidspawnSummon:
		RUNR D 5 A_FaceTarget();
		RUNC DDDDDD random(0,20) A_SpawnProjectile("PM_EAvatarVoidSeeker",5,random(-20,20),random(-60,60));
		RUNR D 20 A_FaceTarget();
		Goto StartMoving;
	BallThrow:
		RUNC A 9 A_FaceTarget();
		RUNC B 5 A_SpawnProjectile("PM_EAvatarBall",80);
		RUNC C 5 A_FaceTarget();
		RUNC D 5 A_SpawnProjectile("PM_EAvatarBall",80);
		Goto StartMoving;
	Melee:
		TNT1 A 0 A_StopSound(CHAN_ITEM);
		TNT1 A 0 A_jump(64,"MULCHSTART");
		
		TNT1 A 0 A_FaceTarget;
		TNT1 A 0 A_Recoil(-3);
		RUNC A 9;
		TNT1 A 0 A_FaceTarget;
		TNT1 A 0 A_StartSound("EntAva/Yell",25,0,1);
		TNT1 A 0 A_Recoil(-3);
		RUNC B 5;
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_CustomMeleeAttack(35,"EntAva/Drag","","Melee");
		TNT1 A 0 A_FaceTarget;
		RUNC C 5;
		TNT1 A 0 A_FaceTarget;
		TNT1 A 0 A_StartSound("EntAva/Yell",25,0,1);
		TNT1 A 0 A_Recoil(-3);
		RUNC D 5;
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_CustomMeleeAttack(35,"EntAva/Drag","","Melee");
		TNT1 A 0 A_jump(100,"Spaz");
		Goto StartMoving;
	Pain:
		TNT1 A 0 A_StopSound(CHAN_7);
		TNT1 A 0 A_StopSound(CHAN_6);
		TNT1 A 0 A_Jump(150,"Spaz","RushWalk","SlowWalk");
		RUNR D 10;
		Goto StartMoving;
		
//////////////////////////////////////////////////////////////FAST MELEE
		
	MULCHSTART:
	    TNT1 A 0 A_StartSound("EntAva/MulchLoop",CHAN_6,CHANF_LOOP,1);
		TNT1 A 0 A_StartSound("EntAva/ScreamLoop",CHAN_5,0,0.5);
		RUNC AAAA 4 A_FaceTarget;
	MULCH:
		TNT1 A 0 A_Recoil(-2);
		RUNC AAA 1;
		TNT1 A 0 A_Recoil(-2);
		RUNC BB 1;
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_CustomMeleeAttack(35,"EntAva/Drag","","Melee");
		RUNC CC 1;
		TNT1 A 0 A_Recoil(-2);
		RUNC DD 1;
		TNT1 A 0 A_QuakeEx(2,2,2,5,0,500,"*");
		TNT1 A 0 A_CustomMeleeAttack(35,"EntAva/Drag","","Melee");
		TNT1 A 0 A_jump(220,"MULCH");
		Goto Spaz;
		
//////////////////////////////////////////////////////////////DEATHYELL
		
	Death:
		TNT1 A 0 A_StopSound(CHAN_7);
		TNT1 A 0 A_StartSound("EntAva/Roar",CHAN_ITEM,0,1);		
		TNT1 A 0 A_SetScale(frandom(.97,1.03),frandom(.99,1.01));
		RUNR D 30;
		
		TNT1 A 0 A_SetSpeed(200);
		
		//TNT1 A 0 A_StartSound("ENTITY/LAUGH",CHAN_ITEM,0,1);
		
		RUW2 ABCDABCDABCD 2 A_wander();

		Stop;
	}
}


Class PM_AvatarFreezeBreath : Actor
{
	Default
	{
		Radius 4;
		Height 8;
		Speed 24;
		DamageFunction (0);
		DamageType "Ice";
		Alpha 0.65;
		Scale 0.1;
		SeeSound "";
		DeathSound "";
		PROJECTILE;
		Translation "0:255=%[0,0,0]:[0.0,0.0,0.0]";
		+THRUGHOST
		+FORCEXYBILLBOARD
		+ROLLSPRITE
		+ROLLCENTER
		+RIPPER
	}

	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("Avatar/WindPull",Chan_6,CHANF_LOOPING);
			TNT1 A 0 A_SetScale(frandom(0.05,0.15));
			TNT1 A 0 A_SetRoll(frandom(-180,180));
		Looper:
			GNSM K 5
				{
				A_FadeOut(0.005);
				A_Explode(8,70,0,false,1,0,0,"","Ice");
				A_SetScale(scale.x+0.024);
				A_SpawnParticleEx
				(
				"000000",
				TexMan.CheckForTexture("GNSMK0"),
				style: STYLE_Normal,
				flags: SPF_ROLL|SPF_RELATIVE,
				lifetime: random(10,130),
				size: frandom(3,70),
				angle: 0,
				xoff: random(-30,50),
				yoff: random(-20,20),
				zoff: random(-10,10),
				velx: frandom(-1,5),
				vely: frandom(-5,5),
				velz: frandom(-1,1),
				accelx: frandom(-0.05,0.05),
				accely: frandom(-0.1,0.1),
				accelz: frandom(-0.05,0.05),
				startalphaf: frandom(0.1,0.7),
				fadestepf: -1,
				sizestep: frandom(1,7),
				startroll: random(-180,180),
				rollvel: frandom(-5,5),
				rollacc: 0
				);
				A_SpawnParticleEx
				(
				"000000",
				TexMan.CheckForTexture("GNSMK0"),
				style: STYLE_Normal,
				flags: SPF_ROLL|SPF_RELATIVE,
				lifetime: random(50,130),
				size: frandom(3,40),
				angle: 0,
				xoff: random(-30,0),
				yoff: random(-1,1),
				zoff: random(-1,1),
				velx: frandom(5,20),
				vely: frandom(-1,1),
				velz: frandom(-1,1),
				accelx: frandom(-0.05,0.05),
				accely: frandom(-0.05,0.05),
				accelz: frandom(-0.05,0.05),
				startalphaf: frandom(0.1,0.7),
				fadestepf: -1,
				sizestep: frandom(1,3),
				startroll: random(-180,180),
				rollvel: frandom(-6,6),
				rollacc: 0
				);
				}
				Loop;
		Death:
			TNT1 A 0;
			Stop;
	}
}

class PM_EAvatarBall : Actor
{
Default
{
  Speed 28;
  FastSpeed 34;
  DamageFunction 45;
  DamageType "Void";
  Radius 8;
  Height 8;
  -THRUSPECIES
  -Clientsideonly
  -DONTHARMSPECIES
  -THRUACTORS
  RenderStyle "Normal";
  BounceType "None";
  DeathSound "EntAva/VoidBall";
  SeeSound "HPriest/VoidShot";
  PROJECTILE;
   }
   void AvatarBallSpriteSmoke()
	{
		for (int i = random(6, 13); i > 0; i--)
		{
			A_SpawnParticleEx
			(   
			 0x000000,
			 TexMan.CheckForTexture(random(0, 1) ? "GE1_A0" : "GE1_B0"),
			 style: STYLE_Normal,
			 flags: SPF_RELATIVE,
			 lifetime: random(2, 4),
			 size: frandom(30,70),
			 xoff: frandom(-10,10),
			 yoff: frandom(-10,10),
			 zoff: frandom(-10,10),
			 fadestepf: 0,
			 sizestep: 0
			);
		}
		
		A_SpawnParticleEx
	    (   
		 "000000",
		 TexMan.CheckForTexture("GNSMK0"),
		 style: STYLE_Normal,
		 flags: SPF_ROLL|SPF_RELATIVE,
		 lifetime: random(5,45),
		 size: frandom(20,100),
		 xoff: frandom(8,-8),
		 zoff: 2,
		 velx: frandom(-0.2,0.2),
		 vely: frandom(-0.2,0.2),
		 velz: frandom(-0.2,0.2),
		 startalphaf: 0.5,
		 fadestepf: -1,
		 sizestep: frandom(-0.1,-1.5),
		 startroll: random(-180,180)
	    );
		A_SpawnParticleEx
	    (   
		 "000000",
		 TexMan.CheckForTexture("GNSMK0"),
		 style: STYLE_Normal,
		 flags: SPF_ROLL|SPF_RELATIVE,
		 lifetime: random(5,45),
		 size: frandom(20,100),
		 xoff: frandom(8,-8),
		 zoff: 2,
		 velx: frandom(-0.2,0.2),
		 vely: frandom(-0.2,0.2),
		 velz: frandom(-0.2,0.2),
		 startalphaf: 0.5,
		 fadestepf: -1,
		 sizestep: frandom(-0.1,-1.5),
		 startroll: random(-180,180)
	    );
  }
  States
	{
	Spawn:
		TNT1 AAA 1
	    {
	    AvatarBallSpriteSmoke();
		A_Weave(random(-3,3), random(-3,3), random(0,3), random(0,2));
	    }
		Loop;
	Death:
		TNT1 AAAAAAA 0
		{
		A_SpawnParticleEx
			(
			"#000000",
			TexMan.CheckForTexture("GNSMK0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(50,650),
			size: frandom(60,300),
			angle: 0,
			xoff: 0,
			yoff: 0,
			zoff: 0,
			velx: frandom(-1,1),
			vely: frandom(-1,1),
			velz: frandom(-0.1,0.2),
			startalphaf: frandom(0.5,1.0),
			fadestepf: -1,
			sizestep: frandom(0.1,3),
			startroll: random(-180,180),
			rollvel: frandom(-0.5,0.5)
			);
		}
		TNT1 AAAA 2 Light("SmallBlacklight") A_SpawnItemEx("PM_VoidSmoke",0,0,20,random(-1,1),random(-1,1),random(-1,1),random(1,360));
		Stop;
	}
}

Class PM_EAvatarSoulVomit : Actor
{
	int soulhspeed;
	int soulvspeed;
	int soulhdist;
	int soulvdist;
    Default
	{
    Radius 5;
    Height 5;
    Scale 0.6;
    Speed 8;
    DamageFunction 12;
	DamageType "Void";
    Renderstyle "Stencil";
	StencilColor "Black";
    Alpha 0.75;
    DeathSound "Abhor/SoulExp";
    PROJECTILE;
    +SEEKERMISSILE
	}
	
	override void PostBeginPlay()
	{
	 tex[0] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("SPKOS0",TexMan.Type_Sprite);
	}
	
	TextureID tex[2];

  States
  {
  Spawn:
	 TNT1 A 0 NoDelay
	 {
	 soulhspeed = random(-2,2);
	 soulvspeed = random(-2,2);
	 soulhdist = random(-3,3);
	 soulvdist = random(-3,3);
	 }
	 TNT1 A 0 
	 {
	  A_ScaleVelocity(frandom(0.6,2.3));
	 }
	 TNT1 A 0 A_StartSound("EntAva/Soul",28,pitch:frandom(0.8,1.2));
     TNT1 A 0
	 {
	  for(int i=random(2,4);i>0;i--)
	    A_SpawnParticleEx
	    (
	    "000000",
	    tex[0],
	    style: STYLE_Normal,
		flags: SPF_RELATIVE|SPF_ROLL,
	    lifetime: random(15,40),
	    size: random(25,65),
	    xoff: -5,
	    velx: frandom(-0.45,0.45),
	    vely: frandom(-0.45,0.45),
	    velz: frandom(-0.45,0.45),
	    accelx: frandom(0.25,0.95),
	    accely: frandom(-0.15,0.15),
	    accelz: frandom(-0.35,0.35),
	    startalphaf: frandom(0.25,0.65),
	    fadestepf: -1,
	    sizestep: 2,
	    startroll: random(-180,180),
	    rollvel: random(-3,3)
	    );
	  	for(int i=random(1,3);i>0;i--)
		A_SpawnParticleEx
		(
		"000000",
		tex[1],
		style: STYLE_Normal,
		flags: SPF_RELATIVE|SPF_ROLL,
		lifetime: random(1,35),
		size: frandom(1,10),
		xoff: frandom(-1,1),
		yoff: frandom(-1,1),
		zoff: frandom(-1,1),
		velx: frandom(1,10),
		vely: frandom(-2,2),
		velz: frandom(-0.6,3),
		accelx: frandom(-0.005,0.005),
		accely: frandom(-0.005,0.005),
		accelz: frandom(-0.0,-0.8),
		startalphaf: 1.0,
		fadestepf: -1,
		sizestep: -0.2,
		startroll: random(-180,180)
		);
	 }
  Go:
    SHBA AABB 1
	{
	if(random(1,20) == 1)
	SetStateLabel("WeaveReset");
	A_SpawnParticleEx
	 (
	 "000000",
	 tex[0],
	 style: STYLE_Normal,
	 flags: SPF_RELATIVE|SPF_ROLL,
	 lifetime: random(15,40),
	 size: 20.0,
	 xoff: -5,
	 startalphaf: frandom(0.25,0.65),
	 fadestepf: -1,
	 startroll: random(-180,180)
	 );
	 A_SpawnParticleEx
	 (
	 "000000",
	 tex[0],
	 style: STYLE_Normal,
	 flags: SPF_ROLL|SPF_RELATIVE,
	 lifetime: random(6,20),
	 size: 35.0,
	 xoff: -5,
	 startalphaf: frandom(0.5,0.8),
	 fadestepf: -1,
	 startroll: random(-180,180)
	 );
	 A_Weave(soulhspeed,soulvspeed,soulhdist,soulvdist);
	}
    Loop;
  WeaveReset:
    TNT1 A 0
	{
	 soulhspeed = random(-2,2);
	 soulvspeed = random(-2,2);
	 soulhdist = random(-3,3);
	 soulvdist = random(-3,3);
	}
  Goto Go;
  Death:
    SHBA CDEFGHIJKL 4;
    Stop;
  }
}

Class PM_EAvatarVoidSeeker : Actor
{
  Default
  {
   Radius 12;
   Height 64;
   Speed 12;
   DamageFunction (45);
   Scale 1.2;
   RenderStyle "Stencil";
   DamageType "Ice";
   StencilColor "Black";
   Alpha 1;
   PROJECTILE;
   +FLOORHUGGER
   +THRUGHOST
   -NOGRAVITY
   +DONTSPLASH
   +SEEKERMISSILE
	DeathSound "Abhor/SoulExp";
   }
   
   protected TextureId tex[8];
	
	override void PostBeginPlay()
	{
	 tex[0] = TexMan.CheckForTexture("RUNGA0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("RUNGB0",TexMan.Type_Sprite);
	 tex[2] = TexMan.CheckForTexture("RUNGC0",TexMan.Type_Sprite);
	 tex[3] = TexMan.CheckForTexture("RUNGD0",TexMan.Type_Sprite);
	 tex[4] = TexMan.CheckForTexture("RUNGE0",TexMan.Type_Sprite);
	 tex[5] = TexMan.CheckForTexture("RUNGF0",TexMan.Type_Sprite);
	 tex[6] = TexMan.CheckForTexture("RUNGG0",TexMan.Type_Sprite);
	 tex[7] = TexMan.CheckForTexture("RUNGH0",TexMan.Type_Sprite);
	}
	
   States
   {
   Spawn: 
	TNT1 A 1;
	TNT1 A 0 A_Jump(100,"Nullify");
	TNT1 A 0 A_StartSound("Voidspawn/Fatal",20,CHANF_DEFAULT,1,ATTN_NORM,frandom(0.2,1.2));
	Go:
		VFOD AABBCCDD 1
		{
		A_SetScale(frandom(1.15, 1.25), frandom(1.15, 1.25));
		A_SpawnParticleEx
		(
		"000000",
		tex[random(0, 7)],
		style: STYLE_Normal,
		flags: SPF_RELATIVE,
		lifetime: random(2, 5),
		size: 50,
		xoff: frandom(-radius,radius),
		yoff: frandom(-radius,radius),
		zoff: frandom(0,height),
		startalphaf: 1,
		fadestepf: 0,
		sizestep: 0
		);
		A_SpawnParticleEx
	    (   
		 "000000",
		 TexMan.CheckForTexture("GNSMK0"),
		 style: STYLE_Normal,
		 flags: SPF_ROLL|SPF_RELATIVE,
		 lifetime: random(30,80),
		 size: frandom(10,110),
		 angle: 0,
		 xoff: frandom(-2,2),
		 yoff: frandom(-2,2),
		 zoff: frandom(10,50),
		 velx: frandom(-2,2),
		 vely: frandom(-2,2),
		 velz: frandom(-2,2),
		 startalphaf: frandom(0.1,0.3),
		 fadestepf: -1,
		 sizestep: frandom(-1,-5),
		 startroll: random(-180,180),
		 rollvel: frandom(-2,2),
		 rollacc: 0
	    );
		A_SeekerMissile(1,1);
		}
		Loop;
   Nullify:
	TNT1 A 0 A_StopSound(20);
	Stop;
   Death:
	TNT1 A 0
	{
		A_StopSound(20);
		if (random(0, 1)) SetStateLabel("AltDeath");
	}
	TNT1 AAAAAA 0
		{
		A_SpawnParticleEx
	    (   
		 "000000",
		 TexMan.CheckForTexture("GNSMK0"),
		 style: STYLE_Normal,
		 flags: SPF_ROLL|SPF_RELATIVE,
		 lifetime: random(30,80),
		 size: frandom(15,95),
		 angle: 0,
		 xoff: frandom(-8,8),
		 yoff: frandom(-8,8),
		 zoff: frandom(10,50),
		 velx: frandom(-3,3),
		 vely: frandom(-3,3),
		 velz: frandom(-3,3),
		 startalphaf: frandom(0.1,0.9),
		 fadestepf: -1,
		 sizestep: frandom(1,4.5),
		 startroll: random(-180,180),
		 rollvel: frandom(-2,2),
		 rollacc: 0
	    );
		}
      stop;
   AltDeath:
	VFOD M 0 A_StartSound("Voidspawn/Death",20);
	VFOD MIKJKLMLJM 2;
	TNT1 AAAAAA 0
		{
		A_SpawnParticleEx
	    (   
		 "000000",
		 TexMan.CheckForTexture("GNSMK0"),
		 style: STYLE_Normal,
		 flags: SPF_ROLL|SPF_RELATIVE,
		 lifetime: random(30,80),
		 size: frandom(15,95),
		 angle: 0,
		 xoff: frandom(-8,8),
		 yoff: frandom(-8,8),
		 zoff: frandom(10,50),
		 velx: frandom(-3,3),
		 vely: frandom(-3,3),
		 velz: frandom(-3,3),
		 startalphaf: frandom(0.1,0.9),
		 fadestepf: -1,
		 sizestep: frandom(1,4.5),
		 startroll: random(-180,180),
		 rollvel: frandom(-2,2),
		 rollacc: 0
	    );
		}
	Stop;
   }
}