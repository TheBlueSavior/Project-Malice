Class PM_ShieldImpactRed : Actor
{
    Default
	{
	+FORCEXYBILLBOARD
	+ROLLSPRITE
    +NOBLOCKMAP
    +NOTELEPORT
    -ALLOWPARTICLES
    +PUFFGETSOWNER
	RenderStyle "Add";
	Scale 0.65;
	Height 1;
	Radius 1;
	Mass 1;
	-NOGRAVITY
	Gravity 0.25;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		TNT1 A 0
		{
		A_StartSound("SlothBall/Impact",32,pitch:frandom(1.2,1.4));
		A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("DTPRR0"),
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: random(2,8),
		size: random(70,150),
		angle: 0,
		xoff: 0,
		yoff: 0,
		zoff: 0,
		startalphaf: 1,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
		}
		Stop;
	}
}

Class PM_ShieldImpactSloth : Actor
{
    Default
	{
	+FORCEXYBILLBOARD
	+ROLLSPRITE
    +NOBLOCKMAP
    +NOTELEPORT
    -ALLOWPARTICLES
    +PUFFGETSOWNER
	RenderStyle "Add";
	Scale 0.65;
	Height 1;
	Radius 1;
	Mass 1;
	-NOGRAVITY
	Gravity 0.25;
	}
	States
	{
	Spawn:
		TNT1 A 1;
		TNT1 A 0
		{
		A_StartSound("SlothBall/Impact",32,pitch:frandom(1.2,1.4));
		A_SpawnParticleEx
		(
		"00ff64",
		TexMan.CheckForTexture("DTPRB0"),
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: random(2,8),
		size: random(70,150),
		angle: 0,
		xoff: 0,
		yoff: 0,
		zoff: 0,
		startalphaf: 1,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
		}
		Stop;
	}
}


Class PM_Blood : Actor replaces Blood
{
  Default
  {
  Mass 5;
  +NOBLOCKMAP
  +NOTELEPORT
  +ALLOWPARTICLES
  }
  States
  {
  Spawn:
  Spray:
    SPRY G 0;
    SPRY G 0 A_FaceTarget();
	BLOD C 0 A_SpawnItemEx ("PM_NormalBlood3", 0,0,0, 0,0,0, 0, SXF_NOCHECKPOSITION|SXF_CLIENTSIDE|SXF_TRANSFERTRANSLATION|SXF_TRANSFERPOINTERS, 0);
    Stop;
  }
}


//BLOOD CLOUDS
Class PM_NormalBloodyCloud : Actor
{
    Default
	{
	+NOINTERACTION
	+CLIENTSIDEONLY
	+NOTONAUTOMAP
	+ROLLSPRITE
	Scale 0.45;
	}
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 A 0 A_Jump(255,"T1","T2","T3","T4","T5","T6","T7","T8");
	T1:
		X050 G 0;	
		Goto PlayOut;
	T2:
		X050 H 0;	
		Goto PlayOut;
	T3:
		X050 C 0;	
		Goto PlayOut;
	T4:
		X050 D 0;	
		Goto PlayOut;
	T5:
		X050 E 0;	
		Goto PlayOut;
	T6:
		X050 F 0;	
		Goto PlayOut;
	T7:
		X050 E 0;	
		Goto PlayOut;
	T8:
		X050 F 0;	
		Goto PlayOut;
	PlayOut:
		"####" "#" 1 A_SetScale(scale.x+0.025);
		"####" "#" 0 A_FadeOut(0.015);
		Loop;
	}
}
Class PM_NormalBloodyCloudMedium : PM_NormalBloodyCloud
{	Default { Scale 0.6; }	}

Class PM_NormalBloodyCloudBig : PM_NormalBloodyCloud
{	Default { Scale 0.8; }	}

Class PM_NormalInstestinGib : Actor
{
    int timer;

    Default
    {
        Radius 8;
        Height 12;
        Speed 7;
        Mass 1;
        BounceFactor 0.4;
        Renderstyle "Translucent";
        Alpha 0.9;
        +MISSILE
        +DOOMBOUNCE
        +NOBLOCKMAP
        +NOTELEPORT
        +MOVEWITHSECTOR
        +CLIENTSIDEONLY
        +FORCEXYBILLBOARD
        -EXPLODEONWATER
        +THRUACTORS
        DeathSound "PM/BigGoreSplat";
        Decal "BloodSplat";
        Scale 1.1;
    }
    States
    {
    Spawn:
        TNT1 A 0 NoDelay { timer = random(70,110); }
        TNT1 A 0 A_SetScale(frandom(1.0,1.8));
        GUTS ABCD 8 A_SpawnItemEx("PM_NormalBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
        TNT1 A 0
        {
            timer--;
            if (timer < 0) SetStateLabel("Death");
        }
        Loop;

    Death:
        TNT1 A 0 A_QueueCorpse;
        GUTS E 1 A_SpawnItemEx("PM_NormalBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
        TNT1 A 0 A_JumpIf(waterlevel > 1, "Water");
        Goto Rest;

    Rest:
        TNT1 A 0;
        TNT1 A 0 A_Jump(255, "Rest1", "Rest2");
    Rest1:
        GUTS E 200;
        GUTS E 5 A_FadeOut(0.05);
        Wait;
    Rest2:
        GUTS F 200;
        GUTS F 5 A_FadeOut(0.05);
        Wait;

    Water:
        TNT1 A 0 A_Jump(128, "Water2");
        Goto Water1;
    Water1:
        GUTS G 10;
        GUTS H 5 A_FadeOut(0.05);
        Wait;
    Water2:
        GUTS I 10;
        GUTS J 5 A_FadeOut(0.05);
        Wait;
    }
}

Class PM_BlackInstestinGib : PM_NormalInstestinGib
{
    Default { Translation "0:255=%[0,0,0]:[0.3,0.3,0.3]"; }
    States
    {
    Spawn:
        TNT1 A 0 NoDelay { timer = random(70,110); }
        TNT1 A 0 A_SetScale(frandom(1.0,1.8));
        GUTS ABCD 8 A_SpawnItemEx("PM_BlackBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
        TNT1 A 0
        {
            timer--;
            if (timer < 0) SetStateLabel("Death");
        }
        Loop;

    Death:
        TNT1 A 0 A_QueueCorpse;
        GUTS E 1 A_SpawnItemEx("PM_BlackBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
        TNT1 A 0 A_JumpIf(waterlevel > 1, "Water");
        Goto Rest;

    Rest:
        TNT1 A 0;
        TNT1 A 0 A_Jump(255, "Rest1", "Rest2");
    Rest1:
        GUTS E 200;
        GUTS E 5 A_FadeOut(0.05);
        Wait;
    Rest2:
        GUTS F 200;
        GUTS F 5 A_FadeOut(0.05);
        Wait;

    Water:
        TNT1 A 0 A_Jump(128, "Water2");
        Goto Water1;
    Water1:
        GUTS G 10;
        GUTS H 5 A_FadeOut(0.05);
        Wait;
    Water2:
        GUTS I 10;
        GUTS J 5 A_FadeOut(0.05);
        Wait;
    }
}

Class PM_GreenInstestinGib : PM_NormalInstestinGib
{
    Default { Translation "0:255=%[0,0,0]:[0.6,2,0.5]"; }
    States
    {
    Spawn:
        TNT1 A 0 NoDelay { timer = random(70,110); }
        TNT1 A 0 A_SetScale(frandom(1.0,1.8));
        GUTS ABCD 8 A_SpawnItemEx("PM_GreenBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
        TNT1 A 0
        {
            timer--;
            if (timer < 0) SetStateLabel("Death");
        }
        Loop;

    Death:
        TNT1 A 0 A_QueueCorpse;
        GUTS E 1 A_SpawnItemEx("PM_GreenBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
        TNT1 A 0 A_JumpIf(waterlevel > 1, "Water");
        Goto Rest;

    Rest:
        TNT1 A 0;
        TNT1 A 0 A_Jump(255, "Rest1", "Rest2");
    Rest1:
        GUTS E 200;
        GUTS E 5 A_FadeOut(0.05);
        Wait;
    Rest2:
        GUTS F 200;
        GUTS F 5 A_FadeOut(0.05);
        Wait;

    Water:
        TNT1 A 0 A_Jump(128, "Water2");
        Goto Water1;
    Water1:
        GUTS G 10;
        GUTS H 5 A_FadeOut(0.05);
        Wait;
    Water2:
        GUTS I 10;
        GUTS J 5 A_FadeOut(0.05);
        Wait;
    }
}


//NORMAL BLOOD

Class PM_NormalBloodBase : Actor
{
    Default
	{
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+ROLLSPRITE
	+NOTELEPORT
	PROJECTILE;
	Scale 0.65;
	-NOGRAVITY
	Gravity 0.85;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_NormalBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_NormalCyberBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_NormalCyberBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}


Class PM_NormalTyrantBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_NormalTyrantBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}


Class PM_NormalBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_NormalBlood1", 255, 2;
	DropItem "PM_NormalBlood2", 255, 2;
	DropItem "PM_NormalBlood3", 255, 2;
	DropItem "PM_NormalBloodMulti", 255, 2;
	DropItem "PM_NormalBloodMist", 255, 2;
	DropItem "PM_NormalMeatChunkLauncher", 255, 1;
	}
}


Class PM_NormalCyberBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_NormalBlood1", 255, 2;
	DropItem "PM_NormalBlood2", 255, 2;
	DropItem "PM_NormalBlood3", 255, 2;
	DropItem "PM_NormalBloodMulti", 255, 2;
	DropItem "PM_NormalBloodMist", 255, 2;
	DropItem "PM_NormalMeatChunkLauncher", 255, 1;
	DropItem "PM_NormalHitSpark", 255, 4;
	}
}

Class PM_NormalTyrantBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_NormalBlood1", 255, 1;
	DropItem "PM_NormalBlood2", 255, 1;
	DropItem "PM_NormalBlood3", 255, 1;
	DropItem "PM_NormalHitSpark", 255, 10;
	}
}

Class PM_NormalBloodEx : RandomSpawner
{
    Default
	{
	DropItem "PM_NormalBlood1", 255, 2;
	DropItem "PM_NormalBlood2", 255, 2;
	}
}

//CODE FROM DEATH FORETOLD

Class PM_NormalMeatChunk : Actor
{
	int user_time;
	int user_t;

	Default
	{
	+CLIENTSIDEONLY
	+THRUACTORS
	-NOLIFTDROP
	+DROPOFF
	+NOTELEPORT
	+NOTONAUTOMAP
	-NOGRAVITY
	+NOBLOCKMONST
	+BOUNCEONWALLS
	+BOUNCEONFLOORS
	+ROLLSPRITE
	Radius 6;
	Height 5;
	Gravity 0.65;
	}
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_QueueCorpse;
		TNT1 A 0 A_SpawnItemEx("PM_NormalBloodMulti");
		TNT1 A 0 A_StartSound("PM/GibSplat");
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1,"Play");
	Play:
		"####" "#" 4 A_SpawnItemEx("PM_NormalBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+12);
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0 A_StartSound("PM/GibLand");
		"####" "#" 0 A_SpawnItemEx("PM_NormalBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION);
		"####" "#" 0 A_QueueCorpse;
		"####" "#" 200 A_JumpIf(user_t != 0,1);
		"####" "#" 1 A_FadeOut;
		Wait;
	}
}

Class PM_NormalMeatChunkBig : Actor
{
	int user_time;
	int user_t;

	Default
	{
	+CLIENTSIDEONLY
	+THRUACTORS
	-NOLIFTDROP
	+DROPOFF
	+NOTELEPORT
	+NOTONAUTOMAP
	-NOGRAVITY
	+NOBLOCKMONST
	+BOUNCEONWALLS
	+BOUNCEONFLOORS
	+ROLLSPRITE
	Radius 6;
	Height 5;
	Gravity 0.65;
	Scale 1.6;
	}
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_QueueCorpse;
		TNT1 A 0 A_SpawnItemEx("PM_NormalBloodMulti");
		TNT1 A 0 A_StartSound("PM/GibSplat");
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1,"Play");
	Play:
		"####" "#" 4 A_SpawnItemEx("PM_NormalBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+12);
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0 A_StartSound("PM/BigGoreSplat");
		"####" "#" 0 A_SpawnItemEx("PM_NormalBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION);
		"####" "#" 0 A_QueueCorpse;
		"####" "#" 200 A_JumpIf(user_t != 0,1);
		"####" "#" 1 A_FadeOut;
		Wait;
	}
}

Class PM_NormalMeatChunkLauncher : Actor
{
    Default
	{
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+ROLLSPRITE
	+NOTELEPORT
	+PUFFGETSOWNER
	Scale 0.65;
	Height 1;
	Radius 1;
	Mass 1;
	-NOGRAVITY
	Gravity 0.85;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_NormalMeatChunk",0,0,0,frandom(4,-4),frandom(4,-4),frandom(3,10),random(1,359));
		Stop;
	}
}

Class PM_NormalBigMeatChunkLauncher : Actor
{
    Default
	{
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+ROLLSPRITE
	+NOTELEPORT
	+PUFFGETSOWNER
	Scale 0.65;
	Height 1;
	Radius 1;
	Mass 1;
	-NOGRAVITY
	Gravity 0.85;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_NormalMeatChunkBig",0,0,0,frandom(8,-8),frandom(8,-8),frandom(5,15),random(1,359));
		Stop;
	}
}

Class PM_NormalBlood1 : Actor
{
    Default
	{
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+ROLLSPRITE
    +NOBLOCKMAP
    +NOTELEPORT
    -ALLOWPARTICLES
    +PUFFGETSOWNER
	RenderStyle "Normal";
	Scale 0.65;
	Height 1;
	Radius 1;
	Mass 1;
	-NOGRAVITY
	Gravity 0.25;
	}
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		//TNT1 A 0 A_SpawnItemEx("PM_NormalBlood3",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION)
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.15,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X057 ABCDEF 2; //A_FadeOut(0.05)
		X057 GHIJK 1; //A_FadeOut(0.05)
		X057 LMNOPQRS 1; //A_FadeOut(0.03)
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X058 ABCDEF 2; //A_FadeOut(0.05)
		X058 GHIJK 1; //A_FadeOut(0.05)
		X058 LMNOPQR 1; //A_FadeOut(0.03)
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X059 ABCD 2; //A_FadeOut(0.03)
		X059 EFGHIJ 1; //A_FadeOut(0.04)
		X059 KLM 1; //A_FadeOut(0.05)
		Stop;
	}
}


Class PM_NormalHitSpark : Actor
{
    Default
	{
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+ROLLSPRITE
    +NOBLOCKMAP
    +NOTELEPORT
    -ALLOWPARTICLES
    +PUFFGETSOWNER
	RenderStyle "Normal";
	Scale 0.65;
	Height 1;
	Radius 1;
	Mass 1;
	-NOGRAVITY
	Gravity 0.25;
	}
	States
	{
	Spawn:
		TNT1 A 0;
	    TNT1 A 0 {
		for(int i=random(0,3);i>0;i--)
		 A_SpawnParticleEx
		 ( "#d2d2d2", TexMan.CheckForTexture("GNSMK0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(15,55),
		 size: frandom(15,46), velx: frandom(-3,3), vely: frandom(-3,3), velz: frandom(-3,3), startalphaf: frandom(0.15,0.55),
		 fadestepf: 1/*-1*/, sizestep: frandom(0.0,0.90), startroll: random(-180,180), rollvel: frandom(-1,1));
		for(int i=random(0,3);i>0;i--)
		 A_SpawnParticleEx
		 ( "", TexMan.CheckForTexture("GNSML0"), style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(25,85),
		 size: frandom(28,86), velx: frandom(-0.15,0.15), vely: frandom(-0.15,0.15), velz: frandom(-0.50,0.50), startalphaf: frandom(0.15,0.95),
		 fadestepf: 1/*-1*/, sizestep: frandom(0.0,1.90), startroll: random(-180,180), rollvel: frandom(-1,1));
		for(int i=random(1,8);i>0;i--)
		 A_SpawnParticleEx(
		 "", TexMan.CheckForTexture("DUSTC0"), style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(20,60), size: frandom(1,20),
		 velx: frandom(-5,5), vely: frandom(-5,5), velz: frandom(-5,6), accelz: frandom(-0.3,-0.8), startalphaf: 1.0, sizestep: -0.2, startroll: random(-180,180), rollvel: random(0,4));
		}
		TNT1 A 0 A_SpawnItemEx("PM_HitPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
	    TRCR A 0 A_StartSound("PM/BloodCyberHit",100,CHANF_OVERLAP);
		Stop;
	}
}

Class PM_NormalBlood2 : PM_NormalBlood1
{
}

Class PM_NormalBlood3 : PM_NormalBlood1
{
    Default
	{ Scale 0.8; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		BL0D ABBBBBCCCCCC 1 A_Fadeout(0.06);
		Stop;
	}
}

Class PM_NormalBloodMulti : Actor
{
    Default
	{
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+ROLLSPRITE
	+NOTELEPORT
	+NOBLOCKMAP
    -ALLOWPARTICLES
    +PUFFGETSOWNER
	Scale 0.65;
	Height 1;
	Radius 1;
	Mass 1;
	-NOGRAVITY
	Gravity 0.85;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/GibLand");
		TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_NormalBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		Stop;
	}
}

Class PM_NormalBloodMist : Actor
{
    Default
	{
    Decal "BloodSplat";
    Alpha 0.93;
    +FORCEXYBILLBOARD
    +GHOST
    +NOBLOCKMAP
    +ROLLSPRITE
    +NOINTERACTION
    +DontSplash
    -EXPLODEONWATER
    +CLIENTSIDEONLY
    +THRUACTORS
    +NOTELEPORT
    Scale 2.0;
    Gravity 0.0;
	}
 states
 {
  Spawn:
		
        TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
		TNT1 AAA 0 A_SpawnItemEx("PM_NormalBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		TNT1 A 0 A_SetScale(frandom(0.1,0.8));
        BLER GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1
		{
		A_FadeOut(0.03);
		A_SetScale(Scale.X+0.02);
		}
		stop;
	}
}

//GREEN BLOOD
Class PM_GreenBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_GreenBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_GreenBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_GreenBlood1", 255, 2;
	DropItem "PM_GreenBlood2", 255, 2;
	DropItem "PM_GreenBlood3", 255, 2;
	DropItem "PM_GreenBloodMulti", 255, 2;
	DropItem "PM_GreenBloodMist", 255, 2;
	DropItem "PM_GreenMeatChunkLauncher", 255, 1;
	}
}

Class PM_GreenBloodEx : RandomSpawner
{
    Default
	{
	DropItem "PM_GreenBlood1", 255, 2;
	DropItem "PM_GreenBlood2", 255, 2;
	}
}

//CODE FROM DEATH FORETOLD

Class PM_GreenMeatChunk : PM_NormalMeatChunk
{
 Default { Translation "0:255=%[0,0,0]:[0.6,2,0.5]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_QueueCorpse;
		TNT1 A 0 A_SpawnItemEx("PM_GreenBloodMulti");
		TNT1 A 0 A_StartSound("PM/GibSplat");
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1,"Play");
	Play:
		"####" "#" 4 A_SpawnItemEx("PM_GreenBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+12);
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0 A_StartSound("PM/GibLand");
		"####" "#" 0 A_SpawnItemEx("PM_GreenBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION);
		"####" "#" 0 A_QueueCorpse;
		"####" "#" 200 A_JumpIf(user_t != 0,1);
		"####" "#" 1 A_FadeOut;
		Wait;
	}
}

Class PM_GreenMeatChunkLauncher : PM_NormalMeatChunkLauncher
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_GreenMeatChunk",0,0,0,frandom(4,-4),frandom(4,-4),frandom(3,10),random(1,359));
		Stop;
	}
}

Class PM_GreenBlood1 : PM_NormalBlood1
{
	Default { Translation "0:255=%[0,0,0]:[0.6,2,0.5]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		//TNT1 A 0 A_SpawnItemEx("PM_GreenBlood3",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION)
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.15,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X057 ABCDEF 2;//A_FadeOut(0.05)
		X057 GHIJK 1; //A_FadeOut(0.05)
		X057 LMNOPQRS 1; //A_FadeOut(0.03)
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X058 ABCDEF 2; //A_FadeOut(0.05)
		X058 GHIJK 1; //A_FadeOut(0.05)
		X058 LMNOPQR 1; //A_FadeOut(0.03)
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X059 ABCD 2; //A_FadeOut(0.03)
		X059 EFGHIJ 1; //A_FadeOut(0.04)
		X059 KLM 1; //A_FadeOut(0.05)
		Stop;
	}
}


Class PM_GreenBlood2 : PM_GreenBlood1
{
	Default { Translation "0:255=%[0,0,0]:[0.6,2,0.5]"; }
}

Class PM_GreenBlood3 : PM_NormalBlood3
{
	Default { Translation "0:255=%[0,0,0]:[0.6,2,0.5]"; }
}

Class PM_GreenBloodMulti : PM_NormalBloodMulti
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/GibLand");
		TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_GreenBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		Stop;
	}
}

Class PM_GreenBloodMist : PM_NormalBloodMist
{
	Default { Translation "0:255=%[0,0,0]:[0.6,2,0.5]"; }
 States
 {
  Spawn:
		
        TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
		TNT1 AAA 0 A_SpawnItemEx("PM_GreenBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		TNT1 A 0 A_SetScale(frandom(0.1,0.8));
        BLER GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1
		{
		A_FadeOut(0.03);
		A_SetScale(Scale.X+0.02);
		}
		Stop;
	}
}

Class PM_GreenCyberBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_GreenCyberBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_GreenCyberBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_GreenBlood1", 255, 2;
	DropItem "PM_GreenBlood2", 255, 2;
	DropItem "PM_GreenBlood3", 255, 2;
	DropItem "PM_GreenBloodMulti", 255, 2;
	DropItem "PM_GreenBloodMist", 255, 2;
	DropItem "PM_GreenMeatChunkLauncher", 255, 1;
	DropItem "PM_NormalHitSpark", 255, 4;
	}
}

//DARK GREEN BLOOD
Class PM_DarkGreenBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_DarkGreenBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_DarkGreenBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_DarkGreenBlood1", 255, 2;
	DropItem "PM_DarkGreenBlood2", 255, 2;
	DropItem "PM_DarkGreenBlood3", 255, 2;
	DropItem "PM_DarkGreenBloodMulti", 255, 2;
	DropItem "PM_DarkGreenBloodMist", 255, 2;
	DropItem "PM_DarkGreenMeatChunkLauncher", 255, 1;
	}
}

Class PM_DarkGreenBloodEx : RandomSpawner
{
    Default
	{
	DropItem "PM_DarkGreenBlood1", 255, 2;
	DropItem "PM_DarkGreenBlood2", 255, 2;
	}
}

Class PM_DarkGreenCyberBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_DarkGreenCyberBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_DarkGreenCyberBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_DarkGreenBlood1", 255, 2;
	DropItem "PM_DarkGreenBlood2", 255, 2;
	DropItem "PM_DarkGreenBlood3", 255, 2;
	DropItem "PM_DarkGreenBloodMulti", 255, 2;
	DropItem "PM_DarkGreenBloodMist", 255, 2;
	DropItem "PM_DarkGreenMeatChunkLauncher", 255, 1;
	DropItem "PM_NormalHitSpark", 255, 4;
	}
}
//CODE FROM DEATH FORETOLD

Class PM_DarkGreenMeatChunk : PM_NormalMeatChunk
{
  Default { Translation "0:255=%[0,0,0]:[0.0,0.6,0.0]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_QueueCorpse;
		TNT1 A 0 A_SpawnItemEx("PM_DarkGreenBloodMulti");
		TNT1 A 0 A_StartSound("PM/GibSplat");
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1,"Play");
	Play:
		"####" "#" 4 A_SpawnItemEx("PM_DarkGreenBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+12);
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0 A_StartSound("PM/GibLand");
		"####" "#" 0 A_SpawnItemEx("PM_DarkGreenBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION);
		"####" "#" 0 A_QueueCorpse;
		"####" "#" 200 A_JumpIf(user_t != 0,1);
		"####" "#" 1 A_FadeOut;
		Wait;
	}
}

Class PM_DarkGreenMeatChunkLauncher : PM_NormalMeatChunkLauncher
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_DarkGreenMeatChunk",0,0,0,frandom(4,-4),frandom(4,-4),frandom(3,10),random(1,359));
		Stop;
	}
}

Class PM_DarkGreenBlood1 : PM_NormalBlood1
{
	Default { Translation "0:255=%[0,0,0]:[0.0,0.6,0.0]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		//TNT1 A 0 A_SpawnItemEx("PM_GreenBlood3",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION)
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.15,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X057 ABCDEF 2; //A_FadeOut(0.05)
		X057 GHIJK 1; //A_FadeOut(0.05)
		X057 LMNOPQRS 1; //A_FadeOut(0.03)
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X058 ABCDEF 2; //A_FadeOut(0.05)
		X058 GHIJK 1; //A_FadeOut(0.05)
		X058 LMNOPQR 1; //A_FadeOut(0.03)
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X059 ABCD 2; //A_FadeOut(0.03)
		X059 EFGHIJ 1; //A_FadeOut(0.04)
		X059 KLM 1; //A_FadeOut(0.05)
		Stop;
	}
}


Class PM_DarkGreenBlood2 : PM_DarkGreenBlood1
{
	Default { Translation "0:255=%[0,0,0]:[0.0,0.8,0.0]"; }
}

Class PM_DarkGreenBlood3 : PM_NormalBlood3
{
	Default { Translation "0:255=%[0,0,0]:[0.0,0.6,0.0]"; }
}

Class PM_DarkGreenBloodMulti : PM_NormalBloodMulti
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/GibLand");
		TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_DarkGreenBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		Stop;
	}
}

Class PM_DarkGreenBloodMist : PM_NormalBloodMist
{
	Default { Translation "0:255=%[0,0,0]:[0.0,0.6,0.0]"; }
 States
 {
  Spawn:
		
        TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
		TNT1 AAA 0 A_SpawnItemEx("PM_DarkGreenBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		TNT1 A 0 A_SetScale(frandom(0.1,0.8));
        BLER GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1
		{
		A_FadeOut(0.03);
		A_SetScale(Scale.X+0.02);
		}
		Stop;
	}
}



//BLUE BLOOD
Class PM_BlueBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_BlueBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_BlueBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_BlueBlood1", 255, 2;
	DropItem "PM_BlueBlood2", 255, 2;
	DropItem "PM_BlueBlood3", 255, 2;
	DropItem "PM_BlueBlood4", 255, 1;
	DropItem "PM_BlueBloodMulti", 255, 2;
	DropItem "PM_BlueBloodMist", 255, 2;
	DropItem "PM_BlueMeatChunkLauncher", 255, 1;
	}
}

Class PM_BlueBloodEx : RandomSpawner
{
    Default
	{
	DropItem "PM_BlueBlood1", 255, 2;
	DropItem "PM_BlueBlood2", 255, 2;
	}
}

//CODE FROM DEATH FORETOLD

Class PM_BlueMeatChunk : PM_NormalMeatChunk
{
	Default { Translation "0:255=%[0,0,0]:[0.1,0.2,1.5]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_QueueCorpse;
		TNT1 A 0 A_SpawnItemEx("PM_BlueBloodMulti");
		TNT1 A 0 A_StartSound("PM/GibSplat");
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1,"Play");
	Play:
		"####" "#" 4 A_SpawnItemEx("PM_BlueBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+12);
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0 A_StartSound("PM/GibLand");
		"####" "#" 0 A_SpawnItemEx("PM_BlueBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION);
		"####" "#" 0 A_QueueCorpse;
		"####" "#" 200 A_JumpIf(user_t != 0,1);
		"####" "#" 1 A_FadeOut;
		Wait;
	}
}

Class PM_BlueMeatChunkLauncher : PM_NormalMeatChunkLauncher
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_BlueMeatChunk",0,0,0,frandom(4,-4),frandom(4,-4),frandom(3,10),random(1,359));
		Stop;
	}
}

Class PM_BlueBlood1 : PM_NormalBlood1
{
	Default { Translation "0:255=%[0,0,0]:[0.1,0.2,1.5]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		//TNT1 A 0 A_SpawnItemEx("PM_BlueBlood3",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION)
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.15,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X057 ABCDEF 2; //A_FadeOut(0.05)
		X057 GHIJK 1; //A_FadeOut(0.05)
		X057 LMNOPQRS 1; //A_FadeOut(0.03)
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X058 ABCDEF 2; //A_FadeOut(0.05)
		X058 GHIJK 1; //A_FadeOut(0.05)
		X058 LMNOPQR 1; //A_FadeOut(0.03)
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X059 ABCD 2; //A_FadeOut(0.03)
		X059 EFGHIJ 1; //A_FadeOut(0.04)
		X059 KLM 1; //A_FadeOut(0.05)
		Stop;
	}
}


Class PM_BlueBlood2 : PM_BlueBlood1
{
	Default { Translation "0:255=%[0,0,0]:[0.1,0.2,1.5]"; }
}

Class PM_BlueBlood3 : PM_NormalBlood3
{
	Default { Translation "0:255=%[0,0,0]:[0.1,0.2,1.5]"; }
}

Class PM_BlueBlood4 : PM_NormalBlood1
{
    Default
	{
	Translation "0:255=%[0,0,0]:[0.3,1.0,2.0]";
	+BRIGHT
	}
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 A 0 A_StartSound("NetherConduit/SmallZap",CHAN_6);
		TNT1 AAA 0 A_SpawnItemEx("PM_BlueLightningVFX",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,SXF_NOCHECKPOSITION,128);
		TNT1 A 0 A_SpawnItemEx("PM_BlueBlood3",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.45,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X057 ABCDEF 2; //A_FadeOut(0.05)
		X057 GHIJK 1; //A_FadeOut(0.05)
		X057 LMNOPQRS 1; //A_FadeOut(0.03)
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X058 ABCDEF 2; //A_FadeOut(0.05)
		X058 GHIJK 1; //A_FadeOut(0.05)
		X058 LMNOPQR 1; //A_FadeOut(0.03)
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X059 ABCD 2; //A_FadeOut(0.03)
		X059 EFGHIJ 1; //A_FadeOut(0.04)
		X059 KLM 1; //A_FadeOut(0.05)
		Stop;
	}
}

Class PM_BlueBloodMulti : PM_NormalBloodMulti
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/GibLand");
		TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_BlueBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		Stop;
	}
}

Class PM_BlueBloodMist : PM_NormalBloodMist
{
 Default { Translation "0:255=%[0,0,0]:[0.1,0.2,1.5]"; }
 States
 {
  Spawn:
		
        TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
		TNT1 AAA 0 A_SpawnItemEx("PM_BlueBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		TNT1 A 0 A_SetScale(frandom(0.1,0.8));
        BLER GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1
		{
		A_FadeOut(0.03);
		A_SetScale(Scale.X+0.02);
		}
		Stop;
	}
}



//PURPLE BLOOD
Class PM_PurpleBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_PurpleBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_PurpleBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_PurpleBlood1", 255, 2;
	DropItem "PM_PurpleBlood2", 255, 2;
	DropItem "PM_PurpleBlood3", 255, 2;
	DropItem "PM_PurpleBlood4", 255, 1;
	DropItem "PM_PurpleBloodMulti", 255, 2;
	DropItem "PM_PurpleBloodMist", 255, 2;
	DropItem "PM_PurpleMeatChunkLauncher", 255, 1;
	}
}

Class PM_PurpleBloodEx : RandomSpawner
{
    Default
	{
	DropItem "PM_PurpleBlood1", 255, 2;
	DropItem "PM_PurpleBlood2", 255, 2;
	}
}

//CODE FROM DEATH FORETOLD

Class PM_PurpleMeatChunk : PM_NormalMeatChunk
{
	Default { Translation "0:255=%[0,0,0]:[1.5,0.2,1.5]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_QueueCorpse;
		TNT1 A 0 A_SpawnItemEx("PM_PurpleBloodMulti");
		TNT1 A 0 A_StartSound("PM/GibSplat");
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1,"Play");
	Play:
		"####" "#" 4 A_SpawnItemEx("PM_PurpleBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+12);
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0 A_StartSound("PM/GibLand");
		"####" "#" 0 A_SpawnItemEx("PM_PurpleBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION);
		"####" "#" 0 A_QueueCorpse;
		"####" "#" 200 A_JumpIf(user_t != 0,1);
		"####" "#" 1 A_FadeOut;
		Wait;
	}
}

Class PM_PurpleMeatChunkLauncher : PM_NormalMeatChunkLauncher
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_PurpleMeatChunk",0,0,0,frandom(4,-4),frandom(4,-4),frandom(3,10),random(1,359));
		Stop;
	}
}

Class PM_PurpleBlood1 : PM_NormalBlood1
{
	Default { Translation "0:255=%[0,0,0]:[1.5,0.2,1.5]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		//TNT1 A 0 A_SpawnItemEx("PM_BlueBlood3",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION)
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.15,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X057 ABCDEF 2; //A_FadeOut(0.05)
		X057 GHIJK 1; //A_FadeOut(0.05)
		X057 LMNOPQRS 1; //A_FadeOut(0.03)
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X058 ABCDEF 2; //A_FadeOut(0.05)
		X058 GHIJK 1; //A_FadeOut(0.05)
		X058 LMNOPQR 1; //A_FadeOut(0.03)
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X059 ABCD 2; //A_FadeOut(0.03)
		X059 EFGHIJ 1; //A_FadeOut(0.04)
		X059 KLM 1; //A_FadeOut(0.05)
		Stop;
	}
}


Class PM_PurpleBlood2 : PM_PurpleBlood1
{
	Default { Translation "0:255=%[0,0,0]:[1.5,0.2,1.5]"; }
}

Class PM_PurpleBlood3 : PM_NormalBlood3
{
	Default { Translation "0:255=%[0,0,0]:[1.5,0.2,1.5]"; }
}

Class PM_PurpleBlood4 : PM_NormalBlood1
{
    Default
	{
	Translation "0:255=%[0,0,0]:[2.0,1.0,2.0]";
	+BRIGHT
	}
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 A 0 A_StartSound("NetherConduit/SmallZap",CHAN_6);
		TNT1 AA 0 A_SpawnItemEx("PM_RedLightningVFX",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,SXF_NOCHECKPOSITION,200);
		TNT1 AA 0 A_SpawnItemEx("PM_PurpleLightningVFX",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,SXF_NOCHECKPOSITION,180);
		TNT1 A 0 A_SpawnItemEx("PM_PurpleBlood3",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.45,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X057 ABCDEF 2; //A_FadeOut(0.05)
		X057 GHIJK 1; //A_FadeOut(0.05)
		X057 LMNOPQRS 1; //A_FadeOut(0.03)
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X058 ABCDEF 2; //A_FadeOut(0.05)
		X058 GHIJK 1; //A_FadeOut(0.05)
		X058 LMNOPQR 1; //A_FadeOut(0.03)
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X059 ABCD 2; //A_FadeOut(0.03)
		X059 EFGHIJ 1; //A_FadeOut(0.04)
		X059 KLM 1; //A_FadeOut(0.05)
		Stop;
	}
}

Class PM_PurpleBloodMulti : PM_NormalBloodMulti
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/GibLand");
		TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_PurpleBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		Stop;
	}
}

Class PM_PurpleBloodMist : PM_NormalBloodMist
{
	Default { Translation "0:255=%[0,0,0]:[1.5,0.2,1.5]"; }
 States
 {
  Spawn:
		
        TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
		TNT1 AAA 0 A_SpawnItemEx("PM_PurpleBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		TNT1 A 0 A_SetScale(frandom(0.1,0.8));
        BLER GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1
		{
		A_FadeOut(0.03);
		A_SetScale(Scale.X+0.02);
		}
		Stop;
	}
}


//BLACK BLOOD
Class PM_BlackBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_BlackBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_BlackBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_BlackBlood1", 255, 2;
	DropItem "PM_BlackBlood2", 255, 2;
	DropItem "PM_BlackBlood3", 255, 2;
	DropItem "PM_BlackBloodMulti", 255, 2;
	DropItem "PM_BlackBloodMist", 255, 2;
	DropItem "PM_BlackMeatChunkLauncher", 255, 1;
	}
}

Class PM_BlackBloodEx : RandomSpawner
{
    Default
	{
	DropItem "PM_BlackBlood1", 255, 2;
	DropItem "PM_BlackBlood2", 255, 2;
	}
}

//CODE FROM DEATH FORETOLD

Class PM_BlackMeatChunk : PM_NormalMeatChunk
{
	Default { Translation "0:255=%[0,0,0]:[0.3,0.3,0.3]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_QueueCorpse;
		TNT1 A 0 A_SpawnItemEx("PM_BlackBloodMulti");
		TNT1 A 0 A_StartSound("PM/GibSplat");
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1,"Play");
	Play:
		"####" "#" 4 A_SpawnItemEx("PM_BlackBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+12);
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0 A_StartSound("PM/GibLand");
		"####" "#" 0 A_SpawnItemEx("PM_BlackBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION);
		"####" "#" 0 A_QueueCorpse;
		"####" "#" 200 A_JumpIf(user_t != 0,1);
		"####" "#" 1 A_FadeOut;
		Wait;
	}
}

Class PM_BlackMeatChunkLauncher : PM_NormalMeatChunkLauncher
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_BlackMeatChunk",0,0,0,frandom(4,-4),frandom(4,-4),frandom(3,10),random(1,359));
		Stop;
	}
}

Class PM_BlackBlood1 : PM_NormalBlood1
{
    Default
	{ Translation "0:255=%[0,0,0]:[0.3,0.3,0.3]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		//TNT1 A 0 A_SpawnItemEx("PM_BlackBlood3",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION)
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.15,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X057 ABCDEF 2; //A_FadeOut(0.05)
		X057 GHIJK 1; //A_FadeOut(0.05)
		X057 LMNOPQRS 1; //A_FadeOut(0.03)
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X058 ABCDEF 2; //A_FadeOut(0.05)
		X058 GHIJK 1; //A_FadeOut(0.05)
		X058 LMNOPQR 1; //A_FadeOut(0.03)
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X059 ABCD 2; //A_FadeOut(0.03)
		X059 EFGHIJ 1; //A_FadeOut(0.04)
		X059 KLM 1; //A_FadeOut(0.05)
		Stop;
	}
}


Class PM_BlackBlood2 : PM_BlackBlood1
{
	Default { Translation "0:255=%[0,0,0]:[0.3,0.3,0.3]"; }
}

Class PM_BlackBlood3 : PM_NormalBlood3
{
	Default { Translation "0:255=%[0,0,0]:[0.3,0.3,0.3]"; }
}

Class PM_BlackBloodMulti : PM_NormalBloodMulti
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/GibLand");
		TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_BlackBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		Stop;
	}
}

Class PM_BlackBloodMist : PM_NormalBloodMist
{
	Default { Translation "0:255=%[0,0,0]:[0.3,0.3,0.3]"; }
 States
 {
  Spawn:
		
        TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
		TNT1 AAA 0 A_SpawnItemEx("PM_BlackBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		TNT1 A 0 A_SetScale(frandom(0.1,0.8));
        BLER GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1
		{
		A_FadeOut(0.03);
		A_SetScale(Scale.X+0.02);
		}
		Stop;
	}
}

Class PM_BlackCyberBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_BlackCyberBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_BlackCyberBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_BlackBlood1", 255, 2;
	DropItem "PM_BlackBlood2", 255, 2;
	DropItem "PM_BlackBlood3", 255, 2;
	DropItem "PM_BlackBloodMulti", 255, 2;
	DropItem "PM_BlackBloodMist", 255, 2;
	DropItem "PM_BlackMeatChunkLauncher", 255, 1;
	DropItem "PM_NormalHitSpark", 255, 4;
	}
}

Class PM_BlackTyrantBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_BlackTyrantBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_BlackTyrantBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_BlackBlood1", 255, 1;
	DropItem "PM_BlackBlood2", 255, 1;
	DropItem "PM_BlackBlood3", 255, 1;
	DropItem "PM_NormalHitSpark", 255, 10;
	}
}

//DARK RED BLOOD
Class PM_DarkRedBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_DarkRedBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_DarkRedCyberBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_DarkRedCyberBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_DarkRedBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_DarkRedBlood1", 255, 3;
	DropItem "PM_DarkRedBlood2", 255, 2;
	DropItem "PM_DarkRedBlood3", 255, 3;
	DropItem "PM_DarkRedBloodMulti", 255, 2;
	DropItem "PM_DarkRedMeatChunkLauncher", 255, 1;
	}
}

Class PM_DarkRedBloodEx : RandomSpawner
{
    Default
	{
	DropItem "PM_DarkRedBlood1", 255, 2;
	DropItem "PM_DarkRedBlood2", 255, 2;
	}
}

Class PM_DarkRedCyberBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_DarkRedBlood1", 255, 2;
	DropItem "PM_DarkRedBlood2", 255, 2;
	DropItem "PM_DarkRedBlood3", 255, 2;
	DropItem "PM_DarkRedBloodMulti", 255, 2;
	DropItem "PM_DarkRedMeatChunkLauncher", 255, 1;
	DropItem "PM_NormalHitSpark", 255, 4;
	}
}

//CODE FROM DEATH FORETOLD

Class PM_DarkRedMeatChunk : PM_NormalMeatChunk
{
	Default { Translation "0:255=%[0,0,0]:[1.5,0.3,0.3]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_QueueCorpse;
		TNT1 A 0 A_SpawnItemEx("PM_DarkRedBloodMulti");
		TNT1 A 0 A_StartSound("PM/GibSplat");
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1,"Play");
	Play:
		"####" "#" 4 A_SpawnItemEx("PM_DarkRedBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+12);
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0 A_StartSound("PM/GibLand");
		"####" "#" 0 A_SpawnItemEx("PM_DarkRedBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION);
		"####" "#" 0 A_QueueCorpse;
		"####" "#" 200 A_JumpIf(user_t != 0,1);
		"####" "#" 1 A_FadeOut;
		Wait;
	}
}

Class PM_DarkRedMeatChunkLauncher : PM_NormalMeatChunkLauncher
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_DarkRedMeatChunk",0,0,0,frandom(4,-4),frandom(4,-4),frandom(3,10),random(1,359));
		Stop;
	}
}

Class PM_DarkRedMiniMeatChunk : PM_NormalMeatChunk
{
    Default
	{
	Translation "0:255=%[0,0,0]:[1.5,0.3,0.3]";
	Scale 0.3;
	Gravity 0.50;
	}
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_QueueCorpse;
		TNT1 A 0 A_SetScale(frandom(0.20,0.48));
		TNT1 A 0; //A_SpawnItemEx("PM_DarkRedBloodMulti")
		TNT1 A 0; //A_StartSound("PM/GibSplat")
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1,"Play");
	Play:
		"####" "#" 4; //A_SpawnItemEx("PM_DarkRedBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100)
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+random(6,64));
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0; //A_StartSound("PM/GibLand")
		"####" "#" 0; //A_SpawnItemEx("PM_DarkRedBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION)
		"####" "#" 0 A_QueueCorpse;
		"####" "#" 1 A_JumpIf(user_t != 0,1);
		"####" "#" 1;
		Stop;
	}
}

Class PM_DarkRedMiniMeatChunkLauncher : PM_NormalMeatChunkLauncher
{
	Default { +THRUACTORS }
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_DarkRedMiniMeatChunk",0,0,0,frandom(4,-4),frandom(4,-4),frandom(0,6),random(1,359));
		Stop;
	}
}

Class PM_DarkRedBlood1 : PM_NormalBlood1
{
	Default { Translation "0:255=%[0,0,0]:[1.5,0.3,0.3]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		//TNT1 A 0 A_SpawnItemEx("PM_DarkRedBlood3",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,125)
		TNT1 AAAA 0 A_SpawnItemEx("PM_DarkRedMiniMeatChunkLauncher",random(-2,2),random(-2,2),random(-2,2),random(-1,1),random(-1,1),random(0,1),0,SXF_NOCHECKPOSITION,230);
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.15,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X057 ABCDEF 2; //A_FadeOut(0.05)
		X057 GHIJK 1; //A_FadeOut(0.05)
		X057 LMNOPQRS 1; //A_FadeOut(0.03)
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X058 ABCDEF 2; //A_FadeOut(0.05)
		X058 GHIJK 1; //A_FadeOut(0.05)
		X058 LMNOPQR 1; //A_FadeOut(0.03)
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X059 ABCD 2; //A_FadeOut(0.03)
		X059 EFGHIJ 1; //A_FadeOut(0.04)
		X059 KLM 1; //A_FadeOut(0.05)
		Stop;
	}
}


Class PM_DarkRedBlood2 : PM_DarkRedBlood1
{
	Default { Translation "0:255=%[0,0,0]:[0.8,0.3,0.3]"; }
}

Class PM_DarkRedBlood3 : PM_NormalBlood3
{
	Default { Translation "0:255=%[0,0,0]:[1.5,0.3,0.3]"; }
}

Class PM_DarkRedBloodMulti : PM_NormalBloodMulti
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/GibLand");
		TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_DarkRedBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		Stop;
	}
}

Class PM_DarkRedBloodMist : PM_NormalBloodMist
{
	Default { Translation "0:255=%[0,0,0]:[1.0,0.3,0.3]"; }
 States
 {
  Spawn:
		
        TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
		TNT1 AAA 0 A_SpawnItemEx("PM_DarkRedBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		TNT1 A 0 A_SetScale(frandom(0.1,0.8));
        BLER GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1
		{
		A_FadeOut(0.03);
		A_SetScale(Scale.X+0.02);
		}
		Stop;
	}
}


//PESTILENCE BLOOD

Class PM_PestilenceBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_PestilenceBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}


Class PM_PestilenceZombieBloodBase : Actor
{
    Default
	{
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+ROLLSPRITE
	+NOTELEPORT
    +NOBLOCKMAP
    -ALLOWPARTICLES
    +PUFFGETSOWNER
	Scale 0.65;
	-NOGRAVITY
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_PestilenceZombieBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}


Class PM_PestilenceBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_PestilenceBlood1", 255, 2;
	DropItem "PM_PestilenceBlood2", 255, 2;
	DropItem "PM_PestilenceBlood3", 255, 2;
	DropItem "PM_PestilenceBloodMulti", 255, 2;
	DropItem "PM_PestilenceBloodMist", 255, 2;
	DropItem "PM_PestilenceMeatChunkLauncher", 255, 1;
	}
}

Class PM_PestilenceZombieBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_PestilenceBlood1", 255, 1;
	DropItem "PM_PestilenceBlood2", 255, 1;
	DropItem "PM_PestilenceBlood3", 255, 1;
	DropItem "PM_PestilenceBloodMulti", 255, 1;
	DropItem "PM_PestilenceBloodMist", 255, 1;
	DropItem "PM_PestilenceMeatChunkLauncher", 255, 1;
	DropItem "PM_DarkRedBlood1", 255, 3;
	DropItem "PM_DarkRedBlood2", 255, 2;
	DropItem "PM_DarkRedBlood3", 255, 3;
	DropItem "PM_DarkRedBloodMulti", 255, 2;
	DropItem "PM_DarkRedMeatChunkLauncher", 255, 1;
	}
}

Class PM_PestilenceBloodEx : RandomSpawner
{
    Default
	{
	DropItem "PM_PestilenceBlood1", 255, 2;
	DropItem "PM_PestilenceBlood2", 255, 2;
	}
}

//CODE FROM DEATH FORETOLD

Class PM_PestilenceMeatChunk : PM_NormalMeatChunk
{
	Default { Translation "0:255=%[0,0,0]:[2,1,0.3]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_QueueCorpse;
		TNT1 A 0 A_SpawnItemEx("PM_PestilenceBloodMulti");
		TNT1 A 0 A_StartSound("PM/GibSplat");
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1,"Play");
	Play:
		"####" "#" 4 A_SpawnItemEx("PM_PestilenceBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+12);
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0 A_StartSound("PM/GibLand");
		"####" "#" 0 A_SpawnItemEx("PM_PestilenceBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION);
		"####" "#" 0 A_QueueCorpse;
		"####" "#" 200 A_JumpIf(user_t != 0,1);
		"####" "#" 1 A_FadeOut;
		Wait;
	}
}

Class PM_PestilenceMeatChunkLauncher : PM_NormalMeatChunkLauncher
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_PestilenceMeatChunk",0,0,0,frandom(4,-4),frandom(4,-4),frandom(3,10),random(1,359));
		Stop;
	}
}

Class PM_PestilenceMaggotFall : Actor
{
  Default
  {
  Damage 0;
  Height 1;
  Radius 1;
  Speed 3;
  Mass 1;
  Scale 0.75;
  +FORCEXYBILLBOARD
  Gravity 0.3;
  +MISSILE
  +NOBLOCKMAP
  -ALLOWPARTICLES
  +PUFFGETSOWNER
  -NOGRAVITY
  +ROLLSPRITE
  }
  States
  {
  Spawn:
	TNT1 A 0 NODELAY A_SetRoll(random(0,360));
	MRMG EFGHIJKLKJIHGFEFGHIJKLKJIHGF 4;
  Death:
	TNT1 A 0;
    Stop;
  }
}

Class PM_PestilenceBlood1 : PM_NormalBlood1
{
   Default { Translation "0:255=%[0,0,0]:[1,1.2,0.1]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		//TNT1 A 0 A_SpawnItemEx("PM_PestilenceBlood3",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION)
		TNT1 AAA 0 A_SpawnItemEx("PM_PestilenceMaggotFall",0,0,0,random(-3,3),random(-3,3),random(0,3),0,SXF_NOCHECKPOSITION,190);
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.15,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X057 ABCDEF 2; //A_FadeOut(0.05)
		X057 GHIJK 1; //A_FadeOut(0.05)
		X057 LMNOPQRS 1; //A_FadeOut(0.03)
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X058 ABCDEF 2; //A_FadeOut(0.05)
		X058 GHIJK 1; //A_FadeOut(0.05)
		X058 LMNOPQR 1; //A_FadeOut(0.03)
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X059 ABCD 2; //A_FadeOut(0.03)
		X059 EFGHIJ 1; //A_FadeOut(0.04)
		X059 KLM 1; //A_FadeOut(0.05)
		Stop;
	}
}


Class PM_PestilenceBlood2 : PM_PestilenceBlood1
{
	Default { Translation "0:255=%[0,0,0]:[2,1,0.3]"; }
}

Class PM_PestilenceBlood3 : PM_PestilenceBlood1
{
	Default { Scale 0.8; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 AAA 0 A_SpawnItemEx("PM_PestilenceMaggotFall",0,0,0,random(-3,3),random(-3,3),random(0,3),0,SXF_NOCHECKPOSITION,220);
		BL0D ABBBBBCCCCCC 1 A_Fadeout(0.06);
		Stop;
	}
}

Class PM_PestilenceBloodMulti : PM_NormalBloodMulti
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/GibLand");
		TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_PestilenceBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		Stop;
	}
}

Class PM_PestilenceBloodMist : Actor
{
      Default
	  {
      Decal "BloodSplat";
      Alpha 0.93;
      +FORCEXYBILLBOARD
      +GHOST
      +NOBLOCKMAP
      +ROLLSPRITE
      +NOINTERACTION
      +DontSplash
      -EXPLODEONWATER
      +CLIENTSIDEONLY
      +THRUACTORS
      +NOTELEPORT
      Translation "0:255=%[0,0,0]:[2,1,0.3]";
      Scale 2.0;
      Gravity 0.0;
	  }
 states
 {
  Spawn:
        TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
		TNT1 AAA 0 A_SpawnItemEx("PM_PestilenceMaggotFall",0,0,0,random(-3,3),random(-3,3),random(0,5),0,SXF_NOCHECKPOSITION,100);
		TNT1 AAA 0 A_SpawnItemEx("PM_PestilenceBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		TNT1 A 0 A_SetScale(frandom(0.1,0.8));
        BLER GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1
		{
		A_FadeOut(0.03);
		A_SetScale(Scale.X+0.02);
		}
		stop;
 }
}

Class PM_PestilenceBloodyCloud : PM_NormalBloodyCloud
{
  Default { Translation "0:255=%[0,0,0]:[2,1,0.3]"; }
}

Class PM_PestilenceBloodyCloudMedium : PM_NormalBloodyCloudMedium
{
 Default { Translation "0:255=%[0,0,0]:[2,1,0.3]"; }
}

Class PM_PestilenceBloodyCloudBig : PM_NormalBloodyCloudBig
{
 Default { Translation "0:255=%[0,0,0]:[2,1,0.3]"; }
}

//Wrath Lava Blood

Class PM_LavaBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodStoneHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_LavaBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_LavaBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_LavaBlood1", 255, 4;
	DropItem "PM_LavaBlood2", 255, 4;
	DropItem "PM_LavaBlood3", 255, 4;
	DropItem "PM_LavaBloodMulti", 255, 2;
	DropItem "PM_LavaBloodMist", 255, 3;
	DropItem "PM_LavaMeatChunkLauncher", 255, 1;
	}
}

Class PM_LavaBloodEx : RandomSpawner
{
    Default
	{
	DropItem "PM_LavaBlood1", 255, 2;
	DropItem "PM_LavaBlood2", 255, 2;
	}
}

Class PM_LavaMeatChunk : PM_NormalMeatChunk
{
	Default { Translation "0:255=%[0,0,0]:[2.0,0.6,0.2]"; +BRIGHT }
	States
	{
	Spawn:
		"####" "#" 0 NODELAY A_QueueCorpse;
		"####" "#" 0 {
		 A_SpawnItemEx("PM_LavaBloodMulti");
	    for(int i=random(1,4);i>0;i--)
	     A_SpawnParticleEx(
	      "ffb521", TexMan.CheckForTexture("GNSMK0"), style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(10,90),
	      size: frandom(10,50), velx: frandom(-3,3), vely: frandom(-3,3), velz: frandom(-3,3),
	      startalphaf: frandom(0.1,0.5), fadestepf: 0.01/*-0.5*/, sizestep: frandom(0.0,1.4), startroll: random(-180,180), 
	      rollvel: frandom(-1,1));
	    A_SpawnParticleEx(
	      "", TexMan.CheckForTexture("SPKOC0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,20),
	      size: 90, startalphaf: 0.9, sizestep: 12, startroll: random(-180,180));
	    A_SpawnParticleEx(
	      "", TexMan.CheckForTexture("SPKOB0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,10),
	      size: 150, startalphaf: 0.9, sizestep: 5, startroll: random(-180,180));
		}
		"####" "#" 0 A_StartSound("PM/LavaDebris",15,volume:0.8,pitch:frandom(0.80,1.05));
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1, "Play");
	Play:
	    "####" "#" 1 A_SpawnItemEx("PM_LavaBlood1",random(3,-3),random(3,-3),random(3,1),0,0,0,0,SXF_NOCHECKPOSITION);
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+12);
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0
		{
		A_SpawnItemEx("PM_LavaBloodEx",random(3,-3),random(3,-3),random(3,1),0,0,0,0,SXF_NOCHECKPOSITION);
		A_SpawnItemEx("PM_LavaBloodEx",random(3,-3),random(3,-3),random(3,1),0,0,0,0,SXF_NOCHECKPOSITION);
		A_SpawnItemEx("PM_LavaBloodEx",random(3,-3),random(3,-3),random(3,1),0,0,0,0,SXF_NOCHECKPOSITION);
		}
		"####" "#" 0 A_SpawnItemEx("ZombieDropFire",random(3,-3),random(3,-3),random(3,1),0,0,0,0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_LavaMeatChunkLauncher : PM_NormalMeatChunkLauncher
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_LavaMeatChunk",0,0,0,frandom(4,-4),frandom(4,-4),frandom(3,10),random(1,359));
		Stop;
	}
}

Class PM_LavaBlood1 : PM_NormalBlood1
{
    Default { +BRIGHT }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		//TNT1 A 0 A_SpawnItemEx("PM_BlackBlood3",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION)
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.15,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X0_7 ABCDEF 2;
		X0_7 GHIJK 1;
		X0_7 LMNOPQRS 1; 
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X0_8 ABCDEF 2;
		X0_8 GHIJK 1;
		X0_8 LMNOPQR 1;
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X0_9 ABCD 2; 
		X0_9 EFGHIJ 1; 
		X0_9 KLM 1; 
		Stop;
	}
}


Class PM_LavaBlood2 : PM_LavaBlood1
{
	Default { +BRIGHT }
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 AAAAAA 0
		{
		A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("SPKOA0"),
			style: STYLE_Add,
			flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
			lifetime: random(6,40),
			size: frandom(0.1,10),
			velx: frandom(-5,5),
			vely: frandom(-5,5),
			velz: frandom(-5,7),
			accelz: frandom(-0.0,-0.8),
			startalphaf: 1.0,
			fadestepf: 0.5, //-0.5
			sizestep: -0.2,
			startroll: random(-180,180)
			);
		}
		TNT1 A 0
		{
		A_SpawnParticleEx
			(
			"#d2d2d2",
			TexMan.CheckForTexture("GNSML0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(10,20),
			size: frandom(10,50),
			velx: frandom(-0.2,0.2),
			vely: frandom(-0.2,0.2),
			velz: frandom(-0.2,0.2),
			startalphaf: frandom(0.8,1.0),
			fadestepf: 1,
			sizestep: frandom(0.8,2),
			startroll: random(-180,180),
			rollvel: frandom(-1,1)
			);
		}
		TNT1 A 0 A_SetRoll(random(0,360));
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.15,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X0_7 ABCDEF 2;
		X0_7 GHIJK 1;
		X0_7 LMNOPQRS 1; 
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X0_8 ABCDEF 2;
		X0_8 GHIJK 1;
		X0_8 LMNOPQR 1;
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X0_9 ABCD 2; 
		X0_9 EFGHIJ 1; 
		X0_9 KLM 1; 
		Stop;
	}
}

Class PM_LavaBlood3 : PM_NormalBlood3
{
	Default { +BRIGHT }
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 AAA 0
		{
		A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("SPKOA0"),
			style: STYLE_Add,
			flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
			lifetime: random(1,40),
			size: frandom(0.1,10),
			velx: frandom(-5,5),
			vely: frandom(-5,5),
			velz: frandom(-5,7),
			accelz: frandom(-0.0,-0.8),
			startalphaf: 1.0,
			fadestepf: 0.5, //-0.5
			sizestep: -0.2,
			startroll: random(-180,180)
			);
		}
		TNT1 AAAAAAAA 0
		{
		A_SpawnParticleEx
			(
			"545454",
			TexMan.CheckForTexture("DUSTC0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(20,60),
			size: frandom(1,9),
			velx: frandom(-5,5),
			vely: frandom(-5,5),
			velz: frandom(-5,6),
			accelz: frandom(-0.3,-0.8),
			startalphaf: 1.0,
			sizestep: -0.2,
			startroll: random(-180,180),
			rollvel: random(0,4)
			);
		}
		TNT1 A 0
		{
		A_SpawnParticleEx
			(
			"#d2d2d2",
			TexMan.CheckForTexture("GNSML0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(10,20),
			size: frandom(10,50),
			velx: frandom(-0.2,0.2),
			vely: frandom(-0.2,0.2),
			velz: frandom(-0.2,0.2),
			startalphaf: frandom(0.8,1.0),
			fadestepf: 1, //-1
			sizestep: frandom(0.8,2),
			startroll: random(-180,180),
			rollvel: frandom(-1,1)
			);
		}
		TNT1 A 0 A_SetRoll(random(0,360));
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.15,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X0_7 ABCDEF 2;
		X0_7 GHIJK 1;
		X0_7 LMNOPQRS 1; 
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X0_8 ABCDEF 2;
		X0_8 GHIJK 1;
		X0_8 LMNOPQR 1;
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X0_9 ABCD 2; 
		X0_9 EFGHIJ 1; 
		X0_9 KLM 1; 
		Stop;
	}
}

Class PM_LavaBloodMulti : PM_NormalBloodMulti
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/GibLand");
		TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_LavaBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		Stop;
	}
}

Class PM_LavaBloodMist : PM_NormalBloodMist
{
	Default { +BRIGHT }
 States
 {
  Spawn:
		TNT1 A 0;
		TNT1 AAA 0 A_SpawnItemEx("PM_LavaBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		TNT1 A 0
		{
		A_SpawnParticleEx
			(
			"#d2d2d2",
			TexMan.CheckForTexture("GNSML0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(10,100),
			size: frandom(10,50),
			velx: frandom(-0.2,0.2),
			vely: frandom(-0.2,0.2),
			velz: frandom(-0.2,0.2),
			startalphaf: frandom(0.8,1.0),
			fadestepf: 1, //-1
			sizestep: frandom(0.5,1.8),
			startroll: random(-180,180),
			rollvel: frandom(-1,1)
			);
		}
		Stop;
 }
}

Class PM_DeathBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodStoneHit",CHAN_6);
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_DeathBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_DeathBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_DeathBlood1", 255, 11;
	DropItem "PM_DeathBlood2", 255, 9;
	DropItem "PM_BlackBlood1", 255, 3;
	DropItem "PM_DeathBlood3", 255, 3;
	DropItem "PM_DeathBloodMulti", 255, 5;
	DropItem "PM_DeathBloodMist", 255, 6;
	DropItem "PM_BlackMeatChunkLauncher", 255, 1;
	}
}

Class PM_DeathBloodEx : RandomSpawner
{
    Default
	{
	DropItem "PM_DeathBlood1", 255, 2;
	DropItem "PM_DeathBlood2", 255, 2;
	}
}

Class PM_DeathBlood1 : PM_NormalBlood1
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0
		{
		for(int i=random(2,4);i>0;i--)
		A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("SPKOS0"),
			style: STYLE_Add,
			flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
			lifetime: random(6,40),
			size: frandom(0.1,5),
			velx: frandom(-5,5),
			vely: frandom(-5,5),
			velz: frandom(-5,7),
			accelz: frandom(-0.0,-0.8),
			startalphaf: 1.0,
			fadestepf: 0.5, //-0.5
			sizestep: -0.2,
			startroll: random(-180,180)
			);
		}
		TNT1 A 0
		{
		for(int i=random(1,3);i>0;i--)
		A_SpawnParticleEx
			(
			"#d2d2d2",
			TexMan.CheckForTexture("GNSML0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(5,65),
			size: frandom(0.1,40),
			velx: frandom(-0.2,0.2),
			vely: frandom(-0.2,0.2),
			velz: frandom(-0.2,0.2),
			startalphaf: frandom(0.15,0.75),
			fadestepf: 1, //-1
			sizestep: frandom(0.2,4),
			startroll: random(-180,180),
			rollvel: frandom(-1,1)
			);
		}
		Stop;
	}
}

Class PM_DeathBlood2 : PM_NormalBlood1
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0
		{
		for(int i=random(2,4);i>0;i--)
		A_SpawnParticleEx
			(
			"",
			TexMan.CheckForTexture("SPKOS0"),
			style: STYLE_Add,
			flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
			lifetime: random(6,40),
			size: frandom(0.1,5),
			velx: frandom(-5,5),
			vely: frandom(-5,5),
			velz: frandom(-5,7),
			accelz: frandom(-0.0,-0.8),
			startalphaf: 1.0,
			fadestepf: 0.5, //-0.5
			sizestep: -0.2,
			startroll: random(-180,180)
			);
		for(int i=random(5,7);i>0;i--)
		A_SpawnParticleEx
			(
			"545454",
			TexMan.CheckForTexture("DUSTC0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(40,60),
			size: frandom(1,11),
			velx: frandom(-4,4),
			vely: frandom(-4,4),
			velz: frandom(-4,6),
			accelz: frandom(-0.3,-0.8),
			startalphaf: 1.0,
			sizestep: -0.2,
			startroll: random(-180,180),
			rollvel: random(0,4)
			);
		for(int i=random(1,3);i>0;i--)
		A_SpawnParticleEx
			(
			"#d2d2d2",
			TexMan.CheckForTexture("GNSML0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(5,65),
			size: frandom(0.1,40),
			velx: frandom(-0.2,0.2),
			vely: frandom(-0.2,0.2),
			velz: frandom(-0.2,0.2),
			startalphaf: frandom(0.15,0.75),
			fadestepf: 1, //-1
			sizestep: frandom(0.2,4),
			startroll: random(-180,180),
			rollvel: frandom(-1,1)
			);
		}
		Stop;
	}
}

Class PM_DeathBlood3 : PM_NormalBlood1
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0
		{
		for(int i=random(2,4);i>0;i--)
		A_SpawnItemEx
		(
		"PM_DeathBloodSoul",
		xvel: frandom(-0.6,0.6),
		yvel: frandom(-0.6,0.6),
		zvel: frandom(-0.6,0.6),
		angle: random(0,360),
		flags: SXF_NOCHECKPOSITION
		);
		for(int i=random(5,7);i>0;i--)
		A_SpawnParticleEx
			(
			"545454",
			TexMan.CheckForTexture("DUSTC0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(20,60),
			size: frandom(1,9),
			velx: frandom(-5,5),
			vely: frandom(-5,5),
			velz: frandom(-5,6),
			accelz: frandom(-0.3,-0.8),
			startalphaf: 1.0,
			sizestep: -0.2,
			startroll: random(-180,180),
			rollvel: random(0,4)
			);
		for(int i=random(1,3);i>0;i--)
		A_SpawnParticleEx
			(
			"#d2d2d2",
			TexMan.CheckForTexture("GNSML0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(5,65),
			size: frandom(0.1,40),
			velx: frandom(-0.2,0.2),
			vely: frandom(-0.2,0.2),
			velz: frandom(-0.2,0.2),
			startalphaf: frandom(0.15,0.75),
			fadestepf: 1, //-1
			sizestep: frandom(0.2,4),
			startroll: random(-180,180),
			rollvel: frandom(-1,1)
			);
		}
		Stop;
	}
}

Class PM_DeathBloodMulti : PM_NormalBloodMulti
{
	States
	{
	Spawn:
		TNT1 A 0;
		//TNT1 A 0 A_StartSound("PM/GibLand");
		TNT1 AAAA 0 A_SpawnItemEx("PM_DeathBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		Stop;
	}
}

Class PM_DeathBloodMist : PM_NormalBloodMist
{
	Default { +BRIGHT }
 States
 {
  Spawn:
		TNT1 A 0;
		TNT1 AAA 0 A_SpawnItemEx("PM_DeathBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		TNT1 A 0
		{
		A_SpawnParticleEx
			(
			"#d2d2d2",
			TexMan.CheckForTexture("GNSML0"),
			style: STYLE_Normal,
			flags: SPF_RELATIVE|SPF_ROLL,
			lifetime: random(10,100),
			size: frandom(10,50),
			velx: frandom(-0.2,0.2),
			vely: frandom(-0.2,0.2),
			velz: frandom(-0.2,0.2),
			startalphaf: frandom(0.8,1.0),
			fadestepf: -1,
			sizestep: frandom(0.5,3),
			startroll: random(-180,180),
			rollvel: frandom(-1,1)
			);
		}
		Stop;
 }
}

Class PM_DeathBloodSoul : Actor
{
    int timer;
    Default
	{
	Speed 2;
    Scale 0.45;
	Alpha 0.0;
	Gravity 0;
	RenderStyle "Add";
    +NOBLOCKMAP
    +NOTELEPORT
    +DONTSPLASH
	+FORCEXYBILLBOARD
    +CLIENTSIDEONLY
	+ROLLSPRITE
	+BRIGHT
	}
	States
	{
    Spawn:
        TNT1 A 0 NoDelay 
		{
		A_QueueCorpse();
		timer = random(15,45);
		}
		TNT1 A 0 A_SetScale(frandom(0.15,0.20));
		TNT1 A 0 A_CheckSight("SightNull");
		SHBA AABB 1
		{
		if(alpha > 1)
		SetStateLabel("WanderingSoul");
		A_FadeIn(0.05);
		}
		Wait;
	WanderingSoul:
        SHBA AABBAA 2
		{
		if(timer < 0)
		SetStateLabel("SightNull");
		vel.x += frandom(-0.85,0.85);
		vel.y += frandom(-0.85,0.85);
		vel.z += frandom(-0.85,0.85);
		timer--;
		}
		Loop;
	SightNull:
		SHBA A 1 A_FadeOut(0.095);
		Loop;
	}
}

Class PM_WarGreenBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_WarGreenBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_WarGreenBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_GreenBlood1", 255, 4;
	DropItem "PM_GreenBlood2", 255, 4;
	DropItem "PM_NormalHitSpark", 255, 4;
	DropItem "PM_WarMeatChunkLauncher", 255, 1;
	}
}

Class PM_WarBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_WarBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_WarBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_NormalBlood1", 255, 1;
	DropItem "PM_NormalBlood2", 255, 1;
	DropItem "PM_NormalHitSpark", 255, 6;
	DropItem "PM_WarMeatChunkLauncher", 255, 2;
	}
}

Class PM_WarMeatChunk : PM_NormalMeatChunk
{
	Default { Translation "0:255=%[0,0,0]:[0.3,0.3,0.3]"; }
	States
	{
	Spawn:
		"####" "#" 0 NODELAY A_QueueCorpse;
		"####" "#" 0 {
	    for(int i=random(1,5);i>0;i--)
	     A_SpawnParticleEx(
	      "ffb521", TexMan.CheckForTexture("SPKRA0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(10,90),
	      size: frandom(1,20), velx: frandom(-3,3), vely: frandom(-3,3), velz: frandom(-3,3),
	      startalphaf: frandom(0.1,0.5), fadestepf: 0.5 /*-0.5*/ , sizestep: frandom(0.0,1.4), startroll: random(-180,180), 
	      rollvel: frandom(-1,1));
	    A_SpawnParticleEx(
	      "", TexMan.CheckForTexture("SPKOC0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,20),
	      size: 90, startalphaf: 0.9, sizestep: 12, startroll: random(-180,180));
	    A_SpawnParticleEx(
	      "", TexMan.CheckForTexture("SPKOB0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,10),
	      size: 150, startalphaf: 0.9, sizestep: 5, startroll: random(-180,180));
		}
		"####" "#" 0 A_StartSound("PM/WarDebrisDisable",14,pitch:frandom(0.95,1.10));
		"####" "#" 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1,"Play");
	Play:
		"####" "#" 4 {
	   A_SpawnParticleEx(
	    "", TexMan.CheckForTexture("DTPRB0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
	    lifetime: 20, size: 100.0, startalphaf: 0.35, fadestepf: 1 /*-1*/ , startroll: random(-180,180));
	   A_SpawnParticleEx
		 ( "", TexMan.CheckForTexture("GNSML0"), style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(25,85),
		 size: 30, velx: frandom(-0.15,0.15), vely: frandom(-0.15,0.15), velz: frandom(-0.50,0.50), startalphaf: frandom(0.65,1),
		 fadestepf: 1/*-1*/, sizestep: frandom(0.0,1.30), startroll: random(-180,180), rollvel: frandom(-1,1));
	  if(random(1,2) == 1)
	   A_SpawnParticleEx(
	    "", TexMan.CheckForTexture("BLULA0"), style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(2,10), size: random(60,95), xoff: -10, velx: frandom(-0.5,0.5), vely: frandom(-0.5,0.5), velz: frandom(-0.5,0.5), startalphaf: 0.75, startroll: random(-180,180));
		 }
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+12);
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0 A_SpawnItemEx("PM_BlackBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION);
		"####" "#" 0 A_QueueCorpse;
		"####" "#" 200 A_JumpIf(user_t != 0,1);
		"####" "#" 1 A_FadeOut;
		Wait;
	}
}

Class PM_WarMeatChunkLauncher : PM_NormalMeatChunkLauncher
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/WarDebrisLaunch");
		TNT1 A 0 A_SpawnItemEx("PM_WarMeatChunk",0,0,0,frandom(4,-4),frandom(4,-4),frandom(3,10),random(1,359));
		Stop;
	}
}

Class PM_LavaWarBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodStoneHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_LavaWarBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_LavaWarBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_LavaBlood1", 255, 1;
	DropItem "PM_LavaBlood2", 255, 1;
	DropItem "PM_LavaBlood3", 255, 1;
	DropItem "PM_NormalHitSpark", 255, 6;
	DropItem "PM_WarMeatChunkLauncher", 255, 2;
	}
}

//SLOTH BLOOD
Class PM_SlothBloodBase : PM_NormalBloodBase
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/BloodHit",CHAN_7);
		TNT1 A 0 A_SpawnItemEx("PM_SlothBlood",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class PM_SlothBlood : RandomSpawner
{
    Default
	{
	DropItem "PM_SlothBlood1", 255, 2;
	DropItem "PM_SlothBlood2", 255, 2;
	DropItem "PM_SlothBlood3", 255, 2;
	DropItem "PM_SlothBloodMulti", 255, 2;
	DropItem "PM_SlothBloodMist", 255, 2;
	DropItem "PM_SlothMeatChunkLauncher", 255, 1;
	}
}

Class PM_SlothBloodEx : RandomSpawner
{
    Default
	{
	DropItem "PM_SlothBlood1", 255, 2;
	DropItem "PM_SlothBlood2", 255, 2;
	}
}

//CODE FROM DEATH FORETOLD

Class PM_SlothMeatChunk : PM_NormalMeatChunk
{
 Default { Translation "0:255=%[0,0,0]:[0.1,0.1,0.7]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_QueueCorpse;
		TNT1 A 0 A_SpawnItemEx("PM_SlothBloodMulti");
		TNT1 A 0 A_StartSound("PM/GibSplat");
		TNT1 A 0 A_Jump(256,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20);
		MEAT ABCDEFGHIJLKMNOPQRST 0 A_JumpIf(1 == 1,"Play");
	Play:
		"####" "#" 4 A_SpawnItemEx("PM_SlothBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION,100);
		"####" "#" 0 A_CheckFloor("md1");
		"####" "#" 0 A_SetRoll(roll+12);
		Loop;
		
	// when the gib crashes:
	md1: 
	Death:
		"####" "#" 0 A_SetRoll(0);
		"####" "#" 0 A_StartSound("PM/GibLand");
		"####" "#" 0 A_SpawnItemEx("PM_SlothBloodEx",random(3,-3),random(3,-3),random(3,-3),0,0,0,0,SXF_NOCHECKPOSITION);
		"####" "#" 0 A_QueueCorpse;
		"####" "#" 200 A_JumpIf(user_t != 0,1);
		"####" "#" 1 A_FadeOut;
		Wait;
	}
}

Class PM_SlothMeatChunkLauncher : PM_NormalMeatChunkLauncher
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("PM_SlothMeatChunk",0,0,0,frandom(4,-4),frandom(4,-4),frandom(3,10),random(1,359));
		Stop;
	}
}

Class PM_SlothBlood1 : PM_NormalBlood1
{
	Default { Translation "0:255=%[0,0,0]:[0.1,0.1,0.7]"; }
	States
	{
	Spawn:
		TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		//TNT1 A 0 A_SpawnItemEx("PM_GreenBlood3",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION)
		TNT1 A 0 A_ChangeVelocity(random(-1,1),random(-1,1),random(-1,2),CVF_REPLACE);
		TNT1 A 0 A_SetGravity(frandom(0.00,0.60));
		TNT1 A 0 A_SetScale(frandom(0.15,1.20));
		TNT1 A 0 A_Jump(256,"Splash1","Splash2","Splash3");
	Splash1:
		TNT1 A 0 A_SetRoll(random(0,360));
		X057 ABCDEF 2;//A_FadeOut(0.05)
		X057 GHIJK 1; //A_FadeOut(0.05)
		X057 LMNOPQRS 1; //A_FadeOut(0.03)
		Stop;
	Splash2:
		TNT1 A 0 A_SetRoll(random(0,360));
		X058 ABCDEF 2; //A_FadeOut(0.05)
		X058 GHIJK 1; //A_FadeOut(0.05)
		X058 LMNOPQR 1; //A_FadeOut(0.03)
		Stop;
	Splash3:
		TNT1 A 0 A_SetRoll(random(0,360));
		X059 ABCD 2; //A_FadeOut(0.03)
		X059 EFGHIJ 1; //A_FadeOut(0.04)
		X059 KLM 1; //A_FadeOut(0.05)
		Stop;
	}
}


Class PM_SlothBlood2 : PM_SlothBlood1
{
	Default { Translation "0:255=%[0,0,0]:[0.1,0.1,0.7]"; }
}

Class PM_SlothBlood3 : PM_NormalBlood3
{
	Default { Translation "0:255=%[0,0,0]:[0.1,0.1,0.7]"; }
}

Class PM_SlothBloodMulti : PM_NormalBloodMulti
{
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_StartSound("PM/GibLand");
		TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_SlothBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		Stop;
	}
}

Class PM_SlothBloodMist : PM_NormalBloodMist
{
	Default { Translation "0:255=%[0,0,0]:[0.1,0.1,0.7]"; }
 States
 {
  Spawn:
		
        TNT1 A 0 NODELAY A_SetRoll(random(0,360));
		TNT1 A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE);
		TNT1 AAA 0 A_SpawnItemEx("PM_SlothBloodEX",0,0,0,0,0,random(0,3),0,SXF_NOCHECKPOSITION,30);
		TNT1 A 0 A_SetScale(frandom(0.1,0.8));
        BLER GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG 1
		{
		A_FadeOut(0.03);
		A_SetScale(Scale.X+0.02);
		}
		Stop;
	}
}