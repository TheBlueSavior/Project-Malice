Class Horrorspawn : RandomSpawner
{
    Default
	{
	DropItem "PM_Horrorspawn", 255, 105;
	//DropItem "HorrorspawnScreamer", 255, 1
	DropItem "PM_FreshHorrorspawn", 255, 4;
	DropItem "PM_Afflicted", 255, 3;
	DropItem "PM_Voidspawn", 255, 1;
	DropItem "PM_UmbralHorrorspawn", 255, 1;
	DropItem "PM_HorrorspawnBurster", 255, 2;
	DropItem "PM_HorrorspawnSpitter", 255, 5;
	DropItem "PM_HorrorspawnChunkThrower", 255, 5;
	}
}

Class PM_NormalHorrorspawn : RandomSpawner
{
	Default { DropItem "PM_Horrorspawn", 255, 1; }
}

Class Horrorspawnmap : RandomSpawner
{
    Default
	{
	DropItem "PM_Horrorspawn", 255, 105;
	DropItem "PM_Afflicted", 255, 8;
	DropItem "PM_SleepingHorrorspawn1", 255, 6;
	DropItem "PM_SleepingHorrorspawn2", 255, 6;
	DropItem "PM_SleepingHorrorspawn3", 255, 6;
	DropItem "PM_SleepingHorrorspawn4", 255, 6;
	DropItem "PM_FreshHorrorspawn", 255, 6;
	DropItem "Pustule", 255, 3;
	DropItem "PM_HorrorspawnScreamer", 255, 2;
	DropItem "HungryGroup", 255, 2;
	DropItem "PM_HorrorspawnBurster", 255, 2;
	DropItem "PM_AfflictedHordeManager", 255, 1;
	DropItem "FodderDropper", 255, 1;
	DropItem "PM_Voidspawn", 255, 1;
	DropItem "PM_UmbralHorrorspawn", 255, 1;
	DropItem "PM_FodderSleeperDropper", 255, 1;
	DropItem "PM_HeadDropper", 255, 1;
	DropItem "RatDropper", 255, 1;
	DropItem "PM_SpiderSacSpawner", 255, 8;
	DropItem "PM_PotsGroup", 255, 1;
	DropItem "PM_HorrorspawnSpitter", 255, 5;
	DropItem "PM_HorrorspawnChunkThrower", 255, 5;
	}
}

Class PM_Horrorspawn : PMFodderMonsterBase
{
    int choose;
	int wanderchoice;
    Default
	{
	PMMonsterBase.CodexLore
	"Horrorspawn are former humans that have turned into shambling creatures from hell energy exposure, victims of sacrifice, or have transitioned from Afflicted. Some of them are heavily mutated, and they share qualities of both humans and demons. They seem to mutate exponentially and become more dangerous the longer they are allowed to live. Some can be very unpredictable.
	 You may find 'fresh' horrorspawn shambling alongside the listless mutants, denoted by their yellow eyes and less decayed skin. Fresh Horrorspawns share both traits of both Afflicted and regular Horrorspawn, meaning while they still remain sluggish, they will sometimes charge right at you with wild abandon.
	 
	 Use melee weapons to conserve ammunition, and keep a close eye on Fresh Horrorspawn after they're dead.";
    Health 15;
    GibHealth 20;
    Radius 18;
    Height 56;
    Speed 6;
    PainChance 256;
    SeeSound "";
    PainSound "ZombieFodder/Pain";
    DeathSound "ZombieFodder/Death";
    ActiveSound "ZombieFodder/Active";
    Obituary "%o was consumed by a Horrorspawn.";
	DropItem "Clip", 100;
	Species "Fodder";
	Tag "Horrorspawn";
    Monster;
	BloodColor "DarkRed";
	Bloodtype "PM_NormalBloodBase";
	MeleeRange 70;
	XScale 0.84;
	YScale 0.91;
    +FLOORCLIP
	+NOINFIGHTING
	-Countkill
	+THRUSPECIES
	+SLIDESONWALLS
	+DONTHARMCLASS
	+DONTHARMSPECIES
	+NOBLOCKMONST
	-ACTIVATEMCROSS
	-CANUSEWALLS
	-CANPUSHWALLS
	TeleFogSourceType "PM_SmallDemonicTeleportFog";
	TeleFogDestType "PM_SmallDemonicTeleportFog";
	}

	void PM_HorrorspawnAssignSprite()
	{
    switch(choose)
     {
    case 0: sprite = GetSpriteIndex("ZFOD"); break;
    case 1: sprite = GetSpriteIndex("2FOD"); break;
    case 2: sprite = GetSpriteIndex("3FOD"); break;
    case 3: sprite = GetSpriteIndex("4FOD"); break;
     }
	}
	
	override void PostBeginPlay()
	{
	 Super.PostBeginPlay();
	  choose = random(0,3);
	}
	
	void PM_HorrorspawnChase()
	{
	 if(target)
	 {
	  if(CheckSight(target) && Distance3D(target) <= 1200 || wanderchoice == 1)
	  A_Chase();
	  else
	  A_Wander();
	 }
	}

	
  States
  {
  Spawn:
    ZFOD A 0 NoDelay;
  LoadSprites:
    ZFOD A 0;
	2FOD A 0;
	3FOD A 0;
	4FOD A 0;
    "####" A 0 { //[NERU] https://youtu.be/fVz1VVWcF5U?t=48
	if(CountInv("PM_HSpawnChoose1") == 1)
	  choose == 0;
	if(CountInv("PM_HSpawnChoose2") == 1)
	  choose == 1;
	if(CountInv("PM_HSpawnChoose3") == 1)
	  choose == 2;
	if(CountInv("PM_HSpawnChoose4") == 1)
	  choose == 3;
    PM_HorrorspawnAssignSprite(); }
  Idle:
	"####" AB 7 A_Wander();
	"####" AB 0 A_Look();
	"####" CD 7 A_Wander();
	"####" AB 0 A_Look();
	"####" A 0 A_Jump(5,"IdleStill");
	Loop;
  IdleStill:
	"####" A 1 A_Jump(5,"Idle");
    Loop;
  WanderTowardsSwitch:
	"####" A 0
		{
		wanderchoice = random(0,1);
		}
  See:
	"####" A 0 A_Jump(10,"See2");
	"####" A 0 A_SetSpeed(7);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
    "####" AABB 4 Fast PM_HorrorspawnChase();
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
	"####" CCDD 4 Fast PM_HorrorspawnChase();
	"####" A 0 A_Jump(3,"Lunge");
	"####" A 0 A_Jump(30,"See2","See3","See6","See8","See9","Roar");
	"####" A 1 A_Jump(100,"WanderTowardsSwitch");
	"####" A 0 
	{ if(choose == 0 && random(1,2) == 1)
	  SetStateLabel("TwitchJump"); }
    Loop;
  TwitchJump:
    "####" A 0 A_Jump(15,"TwitchSlow","TwitchFast","TwitchWalk");
	Goto See;
  See2:
	"####" A 0 A_SetSpeed(7);
	"####" A 0 A_Recoil(-3);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
	"####" AB 4 Fast PM_HorrorspawnChase();
	"####" B 20 Fast PM_HorrorspawnChase();
	"####" A 0 A_Recoil(-3);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
	"####" CD 4 Fast PM_HorrorspawnChase();
	"####" D 20 Fast PM_HorrorspawnChase();
	"####" A 0 A_Jump(4,"Lunge");
	"####" A 0 A_Jump(15,"See","Roar");
	"####" A 1 A_Jump(100,"WanderTowardsSwitch");
	"####" A 0 
	{ if(choose == 0 && random(1,4) == 1)
	  SetStateLabel("TwitchJump"); }
    Loop;
  See3:
	"####" A 0 A_SetSpeed(9);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
    "####" AA 4 Fast PM_HorrorspawnChase();
	"####" A 0 ThrustThing( int(ceil( angle * 256 / 360 + 64 )),3);
	"####" BB 4 Fast PM_HorrorspawnChase();
	"####" AAA 0 A_Recoil(-0.3);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
	"####" CC 4 Fast PM_HorrorspawnChase();
	"####" A 0 ThrustThing( int(ceil( angle * 256 / 360 + 192 )) ,3);
	"####" DD 4 Fast PM_HorrorspawnChase();
	"####" AAA 0 A_Recoil(-0.3);
	"####" A 0 A_Jump(4,"Lunge");
	"####" A 0 A_Jump(10,"See","Roar");
	"####" A 1 A_Jump(100,"WanderTowardsSwitch");
	"####" A 0 
	{ if(choose == 0 && random(1,4) == 1)
	  SetStateLabel("TwitchJump"); }
    Loop;
  TwitchSlow:
	"####" A 0 A_SetSpeed(7);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
    ZTOD AABB 4 Fast PM_HorrorspawnChase();
	"####" AAA 0 A_Recoil(-0.3);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
	ZTOD CCDD 4 Fast PM_HorrorspawnChase();
	"####" AAA 0 A_Recoil(-0.3);
	"####" A 0 A_Jump(4,"Lunge");
	"####" A 0 A_Jump(10,"See","Roar");
	"####" A 1 A_Jump(100,"WanderTowardsSwitch");
	"####" A 0 
	{ if(choose == 0 && random(1,4) == 1)
	  SetStateLabel("TwitchJump"); }
    Loop;
  TwitchFast:
	"####" A 0 A_Jump(50,"See");
	"####" A 0 A_SetSpeed(9);
    "####" C random(30,70) Fast A_FaceTarget();
	"####" A 0 A_SetSpeed(25);
	ZTOD ACACACACACACACACAC 2
	{
	A_Chase(null,null,CHF_NORANDOMTURN);
	A_StartSound("Horrorspawn/Step",6);
	}
	"####" A 0 A_SetSpeed(9);
	"####" C random(30,70) Fast A_FaceTarget();
	"####" A 0 A_SetSpeed(25);
	ZTOD ACACACACACACACACAC 2
	{
	A_Chase(null,null,CHF_NORANDOMTURN);
	A_StartSound("Horrorspawn/Step",6);
	}
	"####" A 0 A_Jump(4,"Lunge");
	"####" A 0 A_Jump(205,"See","Roar");
	"####" A 1 A_Jump(100,"WanderTowardsSwitch");
    Loop;
  See6:
	"####" A 0 A_SetSpeed(9);
	"####" A 0 A_Recoil(-3);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
	"####" AB 3 Fast PM_HorrorspawnChase();
	"####" B 8 Fast PM_HorrorspawnChase();
	"####" A 0 A_Recoil(-3);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
	"####" CD 3 Fast PM_HorrorspawnChase();
	"####" D 8 Fast PM_HorrorspawnChase();
	"####" A 0 A_Jump(4,"Lunge");
	"####" A 0 A_Jump(15,"See","Roar");
	"####" A 1 A_Jump(100,"WanderTowardsSwitch");
	"####" A 0 
	{ if(choose == 0 && random(1,4) == 1)
	  SetStateLabel("TwitchJump"); }
    Loop;
  TwitchWalk:
	"####" A 0 A_SetSpeed(9);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
    ZTOD AABB 3 Fast PM_HorrorspawnChase();
	"####" AAA 0 A_Recoil(-0.3);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
	ZTOD CCDD 3 Fast PM_HorrorspawnChase();
	"####" AAA 0 A_Recoil(-0.3);
	"####" A 0 A_Jump(4,"Lunge");
	"####" A 0 A_Jump(10,"See","Roar");
	"####" A 1 A_Jump(100,"WanderTowardsSwitch");
	"####" A 0 
	{ if(choose == 0 && random(1,4) == 1)
	  SetStateLabel("TwitchJump"); }
    Loop;
  See8:
	"####" A 0 A_SetSpeed(6);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
    "####" AABB 10 Fast PM_HorrorspawnChase();
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
	"####" CCDD 10 Fast PM_HorrorspawnChase();
	"####" A 0 A_Jump(3,"Lunge");
	"####" A 0 A_Jump(90,"See","See2","See3","See6","See9","Roar","See8","SeeAngry");
	"####" A 1 A_Jump(100,"WanderTowardsSwitch");
    Loop;
  See9:
	"####" A 0 A_SetSpeed(4,12);
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
    "####" AABB random(1, 12) Fast PM_HorrorspawnChase();
	"####" A 0 A_StartSound("Horrorspawn/Step",6);
	"####" CCDD random(1, 12) Fast PM_HorrorspawnChase();
	"####" A 0 A_Jump(4,"Lunge");
	"####" A 0 A_Jump(10,"See","Roar");
	"####" A 1 A_Jump(100,"WanderTowardsSwitch");
	"####" A 0 
	{ if(choose == 0 && random(1,4) == 1)
	  SetStateLabel("TwitchJump"); }
	Loop;
  Roar:
	"####" C 0;
	"####" C 1 A_CheckSight("See");
	"####" C 13 { PM_HorrorspawnAssignSprite(); A_FaceTarget(); }
	"####" A 0 A_StartSound("ZombieFodder/Roar",7);
	"####" B 40 A_FaceTarget();
	"####" C 4 A_FaceTarget();
	"####" A 0 A_Jump(25,"See2","See3","See6","See8","See9","Lunge");
	"####" A 0 
	{ if(choose == 0 && random(1,4) == 1)
	  SetStateLabel("TwitchJump"); }
	Goto See;
  Lunge:
	"####" C 25 Fast PM_HorrorspawnAssignSprite();
	"####" A 0 A_StartSound("ZombieFodder/Pain",7);
	"####" A 0 A_Recoil(-15);
	"####" A 0 ThrustThingZ(0,40,0,1);
	"####" B 35 Fast;
	"####" D 15 Fast;
	Goto See;
  SeeAngry:
	"####" A 0 A_SetSpeed(14);
    "####" AB 2 A_Chase();
	"####" AAA 0 A_Recoil(-0.5);
	"####" CD 2 A_Chase();
	"####" AAA 0 A_Recoil(-0.5);
	"####" A 0 A_Jump(25,"See2","See3","See6","See8","See9","Lunge");
    Loop;
  Melee:
	"####" A 0 PM_HorrorspawnAssignSprite();
	"####" A 0 A_JumpIfCloser(44,"MeleeClose");
    "####" A 0 A_Jump(140,"Bite");
    "####" EE 9 A_FaceTarget();
	"####" F 2;
	"####" F 0 A_StartSound("ZombieFodder/Pain",7);
	"####" F 0 A_Recoil(-6);
	"####" F 0 ThrustThingZ(0,16,0,1);
	"####" G 2;
    "####" G 8 A_SpawnProjectile("HorrorLunge",18,0,0,CMF_AIMDIRECTION);
	"####" G 5;
	"####" A 0 A_Jump(240,"See2","See3","See6","See8","See9");
	"####" A 0 
	{ if(choose == 0 && random(1,4) == 1)
	  SetStateLabel("TwitchJump"); }
    Goto See;
  BloodSpit:
	"####" C 0 A_CheckSight("See");
	"####" CCCCC 5 A_FaceTarget();
	"####" C 0 A_StartSound("GenericBloodPuke",5);
	"####" C 0 A_StartSound("Afflicted/Puke");
	"####" BBBBBBBBBBBBBBBBB 1 A_SpawnProjectile("HungerBloodSpray",42,0,random(-25,25),CMF_AIMDIRECTION,random(10,-20));
	"####" B 1 A_SpawnProjectile("PM_HSpawnSpitterBlood",42,0,random(-10,10),CMF_AIMDIRECTION,random(-4,6));
	"####" BBBBBBBBBBBBBBB 1 A_SpawnProjectile("HungerBloodSpray",42,0,random(-25,25),CMF_AIMDIRECTION,random(20,-10));
	"####" BBBBBDDDDC 4;
	Goto See;
  ChunkThrow:
    "####" HHH 5 A_FaceTarget();
	"####" H 1 A_FaceTarget();
	"####" H 5 A_StartSound("ZFODDGIB");
	"####" HH 1 A_SpawnItemEX("PM_NormalBloodMulti",0,0,30,random(-6,6),random(-6,6),random(-2,6),random(0,360),SXF_NOCHECKPOSITION);
	"####" H 10 A_FaceTarget();
	"####" EEEFG 5 A_FaceTarget();
	"####" G 10 A_SpawnProjectile("PM_HSpawnThrownChunk",32,0,random(-10,10),CMF_AIMDIRECTION,random(0,-70));
	"####" GFFEE 5;
	Goto See;
  MeleeClose:
    "####" EF 10 A_FaceTarget();
    "####" G 10 A_CustomMeleeAttack(random(2,16)*1,"ZombieFodder/Melee");
    Goto See;
  Bite:
	"####" B 3;
	"####" BB 3 A_FaceTarget();
	"####" B 0 A_Recoil(-10);
	"####" B 0 ThrustThingZ(0,6,0,1);
	"####" B 2;
	"####" C 0 A_StartSound("ZombieFodder/Bite");
    "####" C 8 A_SpawnProjectile("HorrorLunge",18,0,0,CMF_AIMDIRECTION);
	"####" C 3;
	"####" C 0 A_Jump(240,"See2","See3","See6","See8","See9");
	"####" C 0 
	{ if(choose == 0 && random(1,4) == 1)
	  SetStateLabel("TwitchJump"); }
    Goto See;
  Pain:
	"####" A 0;
	"####" A 0
	{
		if(choose == 0)
		SetStateLabel("Pain1");
	}
    "####" H 1;
    "####" H 1 A_Pain;
	"####" H random(2,18);
	"####" H 0 A_Jump(100,"See");
    Goto SeeAngry;
  Pain1:
    ZFOD H 1;
    "####" H 1 A_Pain;
	"####" H random(2,18);
	"####" H 0 A_Jump(100,"See");
    Goto SeeAngry;
  Death:
	"####" I 0
	{ if(choose == 0)
	  SetStateLabel("DeathV1"); }
    "####" I 7;
    "####" J 7 A_Scream;
    "####" K 5 A_NoBlocking;
    2FOD L 5;
	2FOD L 0 A_StartSound("Corpse/Fall",6);
    2FOD L -1;
    Stop;
  DeathV1:
	ZFOD I 0 A_Jump(120,"DecapDeath");
    ZFOD I 7;
    ZFOD J 7 A_Scream;
    ZFOD K 5 A_NoBlocking;
    ZFOD L 5;
	ZFOD L 0 A_StartSound("Corpse/Fall",6);
    ZFOD M -1;
    Stop;
   DecapDeath:
	"####" I 0 A_SpawnProjectile("HorrorspawnHead",50,0,random(-300,300));
	"####" I 0 A_SpawnItemEx("PM_HorrorspawnDecap",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
	"####" I 1 A_StartSound("MaliceHeadExp");
	Stop;
  XDeath:
    ZFOD N 5 PM_Gib();
    ZFOD O 5 A_XScream;
    ZFOD P 5 A_NoBlocking;
    ZFOD QR 5; 
    ZFOD S -1;
    Stop;
  }
}

Class PM_FreshHorrorspawn : PMFodderMonsterBase
{
	Default
	{
	PMMonsterBase.CodexLore
	"A prior human in the earlier stages of transformation into a Horrorspawn. At this point of their madness, they have started to succumb to vigorous amounts of Hell's Energy, in which their minds are rotted to the max. They seldom have any hope for living or for continuing to survive, for they are have started to become hell's fodder zombies.
	
	Their attacks are a vague mixture of the Afflicted and a Horrorspawn, but their etiquette are still unpredictable.";
    Health 15;
    GibHealth 20;
    Radius 20;
    Height 56;
    Speed 8;
    PainChance 256;
    SeeSound "FreshZFodder/Sight";
    PainSound "FreshZFodder/Pain";
    DeathSound "FreshZFodder/Death";
    ActiveSound "FreshZFodder/Active";
    Obituary "%o was consumed by a still-fresh Horrorspawn.";
	DropItem "Clip", 100;
	Tag "Fresh Horrorspawn";
	Species "Horrorspawn";
    Monster;
	Bloodtype "PM_NormalBloodBase";
	MeleeRange 70;
	XScale 0.84;
	YScale 0.91;
    +FLOORCLIP
	+NOINFIGHTING
	-Countkill
	+THRUSPECIES
	+SLIDESONWALLS
	+DONTHARMCLASS
	+DONTHARMSPECIES
	+NOBLOCKMONST
	-ACTIVATEMCROSS
	-CANUSEWALLS
	-CANPUSHWALLS
	TeleFogSourceType "PM_SmallDemonicTeleportFog";
	TeleFogDestType "PM_SmallDemonicTeleportFog";
	}
  States
  {
  Spawn:
	ZFO1 A 10 A_Look();
    Loop;
  See:
	TNT1 A 0 A_SetSpeed(8);
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
    ZFO1 AABB 3 A_Chase();
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
	ZFO1 CCDD 3 A_Chase();
	TNT1 A 0 A_Jump(12,"Charge");
	TNT1 A 0 A_Jump(6,"Roar");
	TNT1 A 0 A_Jump(3,"Lunge");
    Loop;
  Roar:
	ZFO1 C 15 A_FaceTarget();
	TNT1 A 0 A_StartSound("FreshZFodder/Sight",7);
	ZFO1 B 60 A_FaceTarget();
	ZFO1 C 4 A_FaceTarget();
	TNT1 A 0 A_Jump(25,"See2","See3","See4","See5","Lunge");
	Goto See;
  Lunge:
	ZFO1 C 25;
	TNT1 A 0 A_StartSound("ZombieFodder/Pain",7);
	TNT1 A 0 A_Recoil(-15);
	TNT1 A 0 ThrustThingZ(0,40,0,1);
	ZFO1 B 35;
	ZFO1 D 15;
	Goto See;
  Charge:
	TNT1 A 0 A_SetSpeed(9);
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
    ZFO1 AB 2 A_Chase();
	TNT1 AAA 0 A_Recoil(-0.5);
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
	ZFO1 CD 2 A_Chase();
	TNT1 AAA 0 A_Recoil(-0.5);
	TNT1 A 0 A_Jump(14,"See");
    Loop;
  Melee:
	TNT1 A 0;
	TNT1 A 0 A_JumpIfCloser(44,"MeleeClose");
	TNT1 A 0 A_Jump(140,"Bite");
    ZFO1 EE 5 A_FaceTarget();
	ZFO1 F 2;
	TNT1 A 0 A_StartSound("ZombieFodder/Pain",7);
	TNT1 A 0 A_Recoil(-6);
	TNT1 A 0 ThrustThingZ(0,16,0,1);
	ZFO1 G 2;
    ZFO1 G 8 A_SpawnProjectile("HorrorLunge",18,0,0,CMF_AIMDIRECTION);
	ZFO1 G 5;
	TNT1 A 0 A_Jump(240,"See","See2","See3","See4","See5");
    Goto See;
  MeleeClose:
    ZFO1 EF 10 A_FaceTarget();
    ZFO1 G 10 A_CustomMeleeAttack(random(2,16)*1,"ZombieFodder/Melee");
    Goto See;
  Bite:
	ZFO1 B 3 A_FaceTarget();
	ZFO1 B 3;
	TNT1 A 0 A_Recoil(-10);
	TNT1 A 0 ThrustThingZ(0,6,0,1);
	ZFO1 B 2;
	TNT1 A 0 A_StartSound("ZombieFodder/Bite");
    ZFO1 C 8 A_SpawnProjectile("HorrorLunge",18,0,0,CMF_AIMDIRECTION);
	ZFO1 C 3;
	TNT1 A 0 A_Jump(240,"See","See2","See3","See4","See5");
    Goto See;
  Pain:
    ZFO1 H 4;
    ZFO1 H 4 A_Pain;
    Goto See;
  Death:
	TNT1 A 0 A_Jump(230,"Death2");
    ZFO1 I 7;
    ZFO1 J 7 A_Scream;
    ZFO1 K 5 A_NoBlocking;
    ZFO1 L 5;
	TNT1 A 0 A_StartSound("Corpse/Fall",6);
    ZFO1 M -1;
    Stop;
  Death2:
    ZFO1 I 7;
    ZFO1 J 7 A_Scream;
    ZFO1 K 5 A_NoBlocking;
    ZFO1 L 5;
	TNT1 A 0 A_StartSound("Corpse/Fall",6);
    ZFO1 MMMMMMMMMMMMMMMMMM 5;
	TNT1 A 0 A_StartSound("Afflicted/Puke");
	ZFO1 LLLLL 1 A_SpawnItemEx("MaliceBloodSplash",0,random(-2,2),5,random(-5,5),random(-5,5),random(1,15));
	ZFO1 LLMMMLMLM 3 A_SpawnItemEx("MaliceBloodSplash",0,random(-2,2),5,random(-5,5),random(-5,5),random(1,15));
	ZFO1 L 1 A_SpawnItemEx("MaliceBloodSplash",0,random(-2,2),5,random(-5,5),random(-5,5),random(1,8));
	TNT1 A 0 A_SpawnItemEx("PM_SleepingHorrorspawn1");
    Stop;
  XDeath:
    ZFO1 N 5 PM_Gib();
    ZFO1 O 5 A_XScream;
    ZFO1 P 5 A_NoBlocking;
    ZFO1 QR 5;
    ZFO1 S -1;
    Stop;
  }
}

Class PM_HorrorspawnScreamer : PMFodderMonsterBase
{
    int user_called;
    Default
	{
    Health 15;
    GibHealth 20;
    Radius 18;
    Height 56;
    Speed 5;
    PainChance 256;
    SeeSound "";
    PainSound "ZombieFodder/Pain";
    DeathSound "ZombieFodder/Death";
    ActiveSound "ZombieFodder/Active";
    Obituary "%o was consumed by a Horrorspawn.";
	DropItem "Clip", 100;
	Species "Fodder";
	Tag "Horrorspawn";
    Monster;
	BloodColor "DarkRed";
	Bloodtype "PM_NormalBloodBase";
	MeleeRange 70;
	XScale 0.84;
	YScale 0.91;
    +FLOORCLIP
	+NOINFIGHTING
	-Countkill
	+THRUSPECIES
	+SLIDESONWALLS
	+DONTHARMCLASS
	+DONTHARMSPECIES
	+NOBLOCKMONST
	-ACTIVATEMCROSS
	-CANUSEWALLS
	-CANPUSHWALLS
	TeleFogSourceType "PM_SmallDemonicTeleportFog";
	TeleFogDestType "PM_SmallDemonicTeleportFog";
	}
  States
  {
  Spawn:
	TNT1 A 0 NoDelay
	{
		user_called = 0;
	}
	Spawn2:
	ZFOD A 10 A_Look();
    Loop;
  See:
	TNT1 A 0 A_SetSpeed(5);
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
    ZFOD AABB 4 A_Chase();
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
	ZFOD CCDD 4 A_Chase();
	TNT1 A 0 A_Jump(6,"Roar");
	TNT1 A 0 A_Jump(3,"Lunge");
	TNT1 A 0 A_Jump(10,"See2","See3","See4","See5","Roar");
    Loop;
  See2:
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
	TNT1 A 0 A_SetSpeed(5);
    ZFOD A 20 A_Chase();
	TNT1 A 0 A_Recoil(-3);
	ZFOD B 20 A_Chase();
	TNT1 A 0 A_Recoil(-1);
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
	ZFOD C 20 A_Chase();
	TNT1 A 0 A_Recoil(-3);
	ZFOD D 20 A_Chase();
	TNT1 A 0 A_Recoil(-1);
	TNT1 A 0 A_Jump(4,"Lunge");
	TNT1 A 0 A_Jump(15,"See","Roar");
    Loop;
  See3:
	TNT1 A 0 A_SetSpeed(7);
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
    ZFOD AA 4 A_Chase();
	TNT1 A 0 ThrustThing( int(ceil( angle * 256 / 360 + 64 )) ,3);
	ZFOD BB 4 A_Chase();
	TNT1 AAA 0 A_Recoil(-0.3);
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
	ZFOD CC 4 A_Chase();
	TNT1 A 0 ThrustThing( int(ceil( angle * 256 / 360 + 192 )),3);
	ZFOD DD 4 A_Chase();
	TNT1 AAA 0 A_Recoil(-0.3);
	TNT1 A 0 A_Jump(5,"Lunge");
	TNT1 A 0 A_Jump(15,"See","Roar");
    Loop;
  See4:
	TNT1 A 0 A_SetSpeed(5);
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
    ZTOD AABB 4 A_Chase();
	TNT1 AAA 0 A_Recoil(-0.3);
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
	ZTOD CCDD 4 A_Chase();
	TNT1 AAA 0 A_Recoil(-0.3);
	TNT1 A 0 A_Jump(4,"Lunge");
	TNT1 A 0 A_Jump(10,"See","Roar");
    Loop;
  See5:
	TNT1 A 0 A_SetSpeed(7);
    ZFOD C 70 A_FaceTarget();
	TNT1 A 0 A_SetSpeed(25);
	ZTOD ACACACACACACACACAC 2
	{
	A_Chase(null,null,CHF_NORANDOMTURN);
	A_StartSound("Horrorspawn/Step",6);
	}
	TNT1 A 0 A_SetSpeed(7);
	ZFOD C 70 A_FaceTarget();
	TNT1 A 0 A_SetSpeed(25);
	ZTOD ACACACACACACACACAC 2
	{
	A_Chase(null,null,CHF_NORANDOMTURN);
	A_StartSound("Horrorspawn/Step",6);
	}
	TNT1 A 0 A_Jump(4,"Lunge");
	TNT1 A 0 A_Jump(205,"See","Roar");
    Loop;
  Missile:
	TNT1 A 0
	{
	 if(user_called)
	 SetStateLabel("See");
	}
	ZFOD C 8 A_FaceTarget();
	TNT1 A 0 A_StartSound("ZombieFodder/Howl",7);
	ZFOD B 30 A_FaceTarget();
	ZFOD B 15 A_FaceTarget();
	TNT1 A 0 {
	for(int i=random(13,18);i>0;i--)
	A_SpawnItemEx("PM_HorrorSeekSpawn"); 
	user_called = 1;
	}
	ZFOD C 7 A_FaceTarget();
	Goto See;
  Roar:
	ZFOD C 15 A_FaceTarget();
	TNT1 A 0 A_StartSound("ZombieFodder/Roar",7);
	ZFOD B 40 A_FaceTarget();
    ZFOD C 4 A_FaceTarget();
	TNT1 A 0 A_Jump(25,"See2","See3","See4","See5","Lunge");
	Goto See;
  Lunge:
	ZFOD C 25;
	TNT1 A 0 A_StartSound("ZombieFodder/Pain",7);
	TNT1 A 0 A_Recoil(-15);
	TNT1 A 0 ThrustThingZ(0,40,0,1);
	ZFOD B 35;
	ZFOD D 15;
	Goto See;
  SeeAngry:
	TNT1 A 0 A_SetSpeed(7);
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
    ZTOD AB 2 A_Chase();
	TNT1 AAA 0 A_Recoil(-0.5);
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
	ZTOD CD 2 A_Chase();
	TNT1 AAA 0 A_Recoil(-0.5);
    Loop;
  Melee:
	TNT1 A 0 A_Jump(140,"Bite");
    ZFOD EE 9 A_FaceTarget();
	ZFOD F 2;
	TNT1 A 0 A_StartSound("ZombieFodder/Pain",7);
	TNT1 A 0 A_Recoil(-6);
	TNT1 A 0 ThrustThingZ(0,16,0,1);
	ZFOD G 2;
    ZFOD G 8 A_SpawnProjectile("HorrorLunge",18,0,0,CMF_AIMDIRECTION);
	ZFOD G 5;
	TNT1 A 0 A_Jump(240,"See","See2","See3","See4","See5");
    Goto See;
  MeleeClose:
    ZFOD EF 10 A_FaceTarget();
    ZFOD G 10 A_CustomMeleeAttack(random(2,16)*1,"ZombieFodder/Melee");
    Goto See;
  Bite:
	ZFOD BB 3 A_FaceTarget();
	ZFOD B 3;
	TNT1 A 0 A_Recoil(-10);
	TNT1 A 0 ThrustThingZ(0,6,0,1);
	ZFOD B 2;
	TNT1 A 0 A_StartSound("ZombieFodder/Bite",7);
    ZFOD C 8 A_SpawnProjectile("HorrorLunge",18,0,0,CMF_AIMDIRECTION);
	ZFOD C 3;
	TNT1 A 0 A_Jump(240,"See","See2","See3","See4","See5");
    Goto See;
  Pain:
    ZFOD H 4;
    ZFOD H 4 A_Pain;
	TNT1 A 0 A_Jump(100,"See");
    Goto SeeAngry;
  Death:
	TNT1 A 0 A_StopSound(7);
	TNT1 A 0 A_Jump(25,"DecapDeath");
    ZFOD I 7;
    ZFOD J 7 A_Scream;
    ZFOD K 5 A_NoBlocking;
    ZFOD L 5 A_StartSound("Corpse/Fall",6);
    ZFOD M -1;
    Stop;
   DecapDeath:
	ZFOD I 0 A_SpawnProjectile("HorrorspawnHead",50,0,random(-300,300));
	ZFOD I 0 A_SpawnItemEx("PM_HorrorspawnDecap",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
	ZFOD I 1 A_StartSound("MaliceHeadExp");
	Stop;
  XDeath:
    ZFOD N 5 PM_Gib();
    ZFOD O 5 A_XScream;
    ZFOD P 5 A_NoBlocking;
    ZFOD QR 5;
    ZFOD S -1; 
    Stop;
  }
}

Class PM_HorrorspawnDecap : PMFodderMonsterBase
{
    Default
	{
    Health 20;
    GibHealth 20;
    Radius 20;
    Height 40;
    Speed 4;
    PainChance 256;
    SeeSound "";
    PainSound "";
    DeathSound "";
    ActiveSound "";
    Obituary "%o was scratched by a headless Horrorspawn.";
	DropItem "Clip";
	MaxStepHeight 50;
	MaxDropOffHeight 50;
	Tag "Horrorspawn";
	Species "Fodder";
    Monster;
	BloodColor "DarkRed";
	Bloodtype "PM_NormalBloodBase";
	XScale 0.84;
	YScale 0.91;
    +FLOORCLIP
	+NOINFIGHTING
	+THRUSPECIES
	+NOBLOCKMONST
	-Countkill
	-ACTIVATEMCROSS
	-CANUSEWALLS
	-CANPUSHWALLS
	TeleFogSourceType "PM_SmallDemonicTeleportFog";
	TeleFogDestType "PM_SmallDemonicTeleportFog";
	}
  States
  {
  Spawn:
	ZFOB H 1 A_SpawnProjectile("HorrorspawnHead",50,0,random(-300,300));
  See:
	TNT1 A 0 { bNOPAIN = true; }
	ZFOB HHHHH 0 A_SpawnItemEx("MaliceBloodSplash",0,random(-2,2),40,random(-3,3),random(-3,3),random(1,6));
    ZFOB HHHHHHHHHHHHHHH 1 A_SpawnItemEx("HungerBloodSpray",0,random(-2,2),40,random(-3,3),random(-3,3),random(1,10));
	ZFOB AABBCCDDAABBCCDDAABBCCDDAABBCCDDAABBCCDDAABBCCDDAABBCCDDAABBCCDDAABBCCDDAABBCCDDAABBCCDDAABBCCDD 1
	{
	A_Wander();
	A_SpawnItemEx("MaliceBloodSplash",0,random(-2,2),40,random(-2,2),random(-2,2),random(1,8));
	}
	TNT1 A 0 { bNOPAIN = false; }
  See2:
	TNT1 A 0 A_Jump(100,"Flinch");
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
    ZFOB AABB 4 A_Chase();
	TNT1 AAA 0 A_Recoil(-0.1);
	TNT1 A 0 A_StartSound("Horrorspawn/Step",6);
	ZFOB CCDD 4 A_Chase();
	TNT1 AAA 0 A_Recoil(-0.1);
    Loop;
  Flinch:
	TNT1 A 0 A_StartSound("MaliceBloodSpray",7);
	ZFOB HHHHHHH 2 A_SpawnItemEx("MaliceBloodSplash",0,random(-2,2),40,random(-2,2),random(-2,2),random(1,7));
	Goto See2;
  Melee:
    ZFOB EF 10 A_FaceTarget();
    ZFOB G 8 A_CustomMeleeAttack(random(2,16)*1,"ZombieFodder/Melee");
    Goto See2;
  Pain:
    ZFOB H 4;
    ZFOB H 4;
    Goto See2;
  Death:
	TNT1 A 0;
    ZFOB I 7;
    ZFOB J 7;
    ZFOB K 5 A_NoBlocking;
    ZFOB L 5;
	TNT1 A 0 A_StartSound("Corpse/Fall",6);
    ZFOB M -1;
    Stop;
  XDeath:
    ZFOB N 5 PM_Gib();
    ZFOB O 5 A_XScream;
    ZFOB P 5 A_NoBlocking;
    ZFOB QR 5;
    ZFOB S -1;
    Stop;
  }
}


Class FodderDropper : Actor
{
	States
	{
	Spawn:
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("PM_HorrorPassiveSpawn",0,0,0,0,0,0,random(0,360),0,80);
		Stop;

	}
}

Class PM_FodderSleeperDropper : Actor
{
	States
	{
	Spawn:
		TNT1 AAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnItemEx("PM_HorrorSleeperSpawn",0,0,0,0,0,0,random(0,360),0,80);
		Stop;

	}
}


Class FodderDropperOne : Actor
{
	States
	{
	Spawn:
		TNT1 A 0 A_SpawnItemEx("PM_HorrorPassiveSpawn",0,0,0,0,0,0,random(0,360),SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class FodderDropper2 : Actor
{
	States
	{
	Spawn:
		TNT1 AA 0 A_SpawnItemEx("PM_HorrorPassiveSpawn",0,0,0,0,0,0,random(0,360),SXF_NOCHECKPOSITION);
		Stop;

	}
}

Class FodderDropper3 : Actor
{
	States
	{
	Spawn:
		TNT1 AAA 0 A_SpawnItemEx("PM_HorrorPassiveSpawn",0,0,0,0,0,0,random(0,360),SXF_NOCHECKPOSITION);
		Stop;

	}
}

Class PM_FleshspawnDropper : Actor
{
	States
	{
	Spawn:
	    TNT1 A 1 Nodelay;
		TNT1 AAAAAAAA 0 A_SpawnItemEx("PM_Fleshspawn",0,0,0,frandom(-4,4),frandom(-4,4),frandom(0,5),0,SXF_NOCHECKPOSITION,100);
		Stop;

	}
}

Class HorrorspawnHead : Actor
{
    Default
	{
	Radius 8;
    Height 16;
	Speed 5;
	Gravity 0.5;
	Mass 4;
	BounceFactor 0.5;
	wallbouncefactor 0.5;
	BounceCount 2;
	BounceType "Doom";
	BounceSound "Gore/HeadBounce";
	+MISSILE
    +MOVEWITHSECTOR
    +CLIENTSIDEONLY
    +NOBLOCKMAP
    +NOTELEPORT
	+THRUACTORS
	}
	States
	{
	Spawn:
	  ZFOH ABCD 2 A_SpawnItemEx("MaliceBloodSplash");
	  Loop;
	Bounce:
		//TNT1 A 0 A_StartSound("Gore/HeadBounce",CHAN_7)
		TNT1 A 0 A_SpawnItemEx("MaliceBloodSplash");
		TNT1 A 0 A_SpawnItemEx("MaliceBloodSplash");
		Goto Spawn;
	Death:
		TNT1 A 0 A_StartSound("Gore/HeadBounce",7);
		TNT1 A 0 A_SpawnItemEx("MaliceBloodSplash",0,0,0,0,0,5);
		TNT1 A 0 A_SpawnItemEx("MaliceBloodSplash");
		TNT1 A 0 A_SpawnItemEx("MaliceBloodSplash");
		TNT1 A 0 A_NoBlocking;
		TNT1 A 0 A_QueueCorpse;
        ZFOH E -1;
		Stop;
	}
}

Class HorrorLunge : Actor
{
 Default
 {
 Height 15;
 Radius 15;
 Speed 11;
 DamageFunction 4;
 DamageType "Claw";
 DeathSound "";
 SeeSound "";  
 PROJECTILE;
 }
States
{
Spawn:
	TNT1 A 2;
    Stop;
    }
}

Class SoulLunge : Actor
{
 Default
 {
 Height 15;
 Radius 15;
 Speed 11;
 DamageFunction 1;
 DamageType "Claw";
 DeathSound "";
 SeeSound "";
 Projectile;
 }
States
{
Spawn:
	TNT1 A 2;
    Stop;
    }
}

Class PM_HSpawnChoose1 : Inventory { Default { Inventory.MaxAmount 1; } }
Class PM_HSpawnChoose2 : Inventory { Default { Inventory.MaxAmount 1; } }
Class PM_HSpawnChoose3 : Inventory { Default { Inventory.MaxAmount 1; } }
Class PM_HSpawnChoose4 : Inventory { Default { Inventory.MaxAmount 1; } }

Class PM_HorrorSeekSpawn : PM_AfflictedHordeSpawner
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay { bFRIGHTENED = true; }
		TNT1 AAA 1 A_Chase();
		TNT1 A 0 A_Jump(15,"SpawnLoop");
		Loop;
		SpawnLoop:
		TNT1 A 0 { bFRIGHTENED = false; }
		TNT1 A 5 A_Wander();
		TNT1 A 0 A_CheckSight ("Create");
		TNT1 A 5 A_Wander();
		TNT1 A 0 A_CheckSight ("Create");
		TNT1 A 0 A_Jump(5,"Die");
		Loop;
	Create:
		TNT1 A 0 A_Jump(70,"Spawn");
		TNT1 A 0 A_SpawnItemEx("PM_Horrorspawn");
		TNT1 A 0 A_StartSound("ZombieFodder/Summon");
		Stop;
	Die:
		TNT1 A 0;
		Stop;	
	}
}

Class PM_HorrorPassiveSpawn : Actor
{
    Default
	{
	Speed 100;
	Radius 20;
    Height 56;
	Mass 40;
	+THRUACTORS
    //MaxStepHeight 64
	//MaxDropOffHeight 64
	-COUNTKILL
	+NOTELEPORT
	}
	States
	{
	Spawn:
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_Wander();
		TNT1 A 1
		{
		if (TestMobjLocation())
			return A_Jump(256,"Begin");
		else
			return A_Jump(256,"Die");
		}
	Begin:
		TNT1 A 5 A_Wander();
		TNT1 A 0 A_CheckSight ("Create");
		TNT1 A 5 A_Wander();
		TNT1 A 0 A_CheckSight ("Create");
		TNT1 A 5 A_Wander();
		TNT1 A 0 A_CheckSight ("Create");
		TNT1 A 5 A_Wander();
		TNT1 A 0 A_CheckSight ("Create");
		TNT1 A 5 A_Wander();
		TNT1 A 0 A_CheckSight ("Create");
		TNT1 A 5 A_Wander();
		TNT1 A 0 A_CheckSight ("Create");
		TNT1 A 5 A_Wander();
		TNT1 A 0 A_CheckSight ("Create");
		TNT1 A 5 A_Wander();
		TNT1 A 0 A_CheckSight ("Create");
		TNT1 A 0 A_Jump(50,"Die");
		Goto Spawn;
	Create:
		TNT1 A 0;
		TNT1 A 0 A_CheckProximity("Reconsider","PMMonsterBase",150,1,CPXF_ANCESTOR);
		TNT1 A 0 A_SpawnItemEx("Horrorspawnmap");
		Stop;
	Reconsider:
		TNT1 A 0 A_Jump(128,"Spawn");
		Goto Die;
	Die:
		TNT1 A 0;
		Stop;
	}
}

Class PM_HorrorSleeperSpawn : PM_HorrorPassiveSpawn
{
	States
	{
	Create:
		TNT1 A 0 A_SpawnItemEx("PM_SleepingHorrorspawn");
		Stop;
	Die:
		TNT1 A 0;
		Stop;
	}
}

Class PM_SleepingHorrorspawn : RandomSpawner
{
	Default
	{
	DropItem "PM_SleepingHorrorspawn1", 255, 2;
	DropItem "PM_SleepingHorrorspawn2", 255, 1;
	DropItem "PM_SleepingHorrorspawn3", 255, 1;
	DropItem "PM_SleepingHorrorspawn4", 255, 1;
	DropItem "PM_SleepingHorrorspawn22", 255, 1;
	DropItem "PM_SleepingHorrorspawn33", 255, 1;
	DropItem "PM_SleepingHorrorspawn44", 255, 1;
	}
}

Class PM_HorrorPassiveSpawn2 : PM_HorrorPassiveSpawn
{
	States
	{
	Create:
		TNT1 A 0 A_SpawnItemEx("PM_NormalHorrorspawn");
		Stop;
	Die:
		TNT1 A 0;
		Stop;
	}
}