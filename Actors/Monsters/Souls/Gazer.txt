Class PM_Gazer : PMPrideMonsterBase
{
  bool gazer;
  
  Default
  {
	PMMonsterBase.CodexLore 
	"Within its circle, Gazers act as surveillance for the demons, alerting those nearby of any intruder's presence while acting as a nuisance. 
	Aside from serving their role within the circle, these living sigils are barely sentient, and are artificially made by demons that have a much stronger hold over the arcane.
	 
	 Charges at you like any other soul, but can also fire bursts or barrages of slow-moving shots.";
	Health 150;
	Radius 16;
	Height 56;
	Mass 300;
	Speed 4;
	Scale 1.0;
	DamageFunction 20;
	DamageType "Soul";
	PainChance 230;
	Tag "Gazer";
	Species "Soul";
	BloodColor "660000";
    Obituary "%o faced a sigil of pure vanity." ;
    HitObituary "%o was struck by a sigil of pure vanity.";
    AttackSound "";
    SeeSound "PMGazer/Sight";
    PainSound "PMGazer/Sight";
    DeathSound "PMGazer/Death";
    ActiveSound "PMGazer/Active";
    Monster;
    +FLOAT
    +NOGRAVITY
    +DONTHARMCLASS
	+DONTFALL
	+DONTHARMSPECIES
    +NOINFIGHTING
    +NOTARGET
	+NOBLOOD
	+FLOATBOB
	+FORCEXYBILLBOARD
	+Thruspecies
	+MissileMore
	FloatBobStrength 0.1;
	TeleFogSourceType "PM_SmallDemonicTeleportFog";
	TeleFogDestType "PM_SmallDemonicTeleportFog";
  }
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	A_AttachLightDef("pride", "Shadowball2");
	A_StartSound("PMGazer/Hover", 140, CHANF_LOOPING);
	A_SpawnItemEx("PM_GazerPentagram", flags: SXF_SETMASTER|SXF_NOCHECKPOSITION);
	gazer = true;
  }
  
  override void Tick()
  {
	super.Tick();
	
	A_SoundVolume(140, (alpha / 4));
	
	if (gazer)
	{
		vel.x *= 0.48;
		vel.y *= 0.48;
		vel.z *= 0.48;
	}
  }
  
  void PM_GazerGlow()
	{
		A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("DTPRR0"),
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: 6,
		size: random(100,180),
		angle: 0,
		xoff: 10,
		yoff: 0,
		zoff: 30,
		startalphaf: 0.85,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
	}
  
  void A_GazerStop()
  {
	vel.x *= 0.18;
	vel.y *= 0.18;
	vel.z *= 0.18;
  }
  
  bool sigil;
  
  States
  {
  Spawn:
	PRID A 1 PM_Look();
  Look:
	PRID A 2
	{
		vel.x += frandom(-1, 1);
		vel.y += frandom(-1, 1);
		vel.z += frandom(-1, 1);
		alpha = 1;
		PM_LookingForPlayer();
	}
	TNT1 A 0 A_JumpifTargetInLOS("Spotted",180,JLOSF_DEADNOJUMP);
	Loop;
  Spotted:
	TNT1 A 0 PM_AlertSound();
  See:
	PRID A 2
	{
		vel.x += frandom(-1, 1);
		vel.y += frandom(-1, 1);
		vel.z += frandom(-1, 1);
		alpha = 1;
		A_Chase();
		A_Recoil(-0.1);
	}
	Loop;
  Missile:
	PRID A 0 A_CheckLOF("MissileProceed");
  Goto Dodge;
  MissileProceed:
	PRID A 0 A_FaceTarget();
	PRID A 0 A_Jump(70, "Dodge", "PhaseOut");
	PRID A 0 A_JumpIfCloser(400,"MissileReady");
    PRID A 0 A_Jump(100,"BulletHell2");
  BulletHell1:
	PRID A 0 A_StartSound("GenericChargeSmall",50);
	PRID AAAAAAAAAAAAAAAAAAAAAAAA 1
	{
		A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("DTPRR0"),
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: 2,
		size: random(50,150),
		angle: 0,
		xoff: 5,
		yoff: 0,
		zoff: 30,
		startalphaf: 0.85,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
	}
	PRID AAA 7
	{
	A_SpawnProjectile("CFodFlare",30);
	A_SpawnProjectile("PM_GazerBall",30);
	}
	Goto See;
  BulletHell2:
	PRID A 0
	        {
	         let envysigil = Spawn("PM_GazerSigil",pos);
	         envysigil.master = self;
			 sigil = true;
	        }
	PRID AAAAAAAAAAAAAAAAAAAAAAA 1
	{
		A_FaceTarget();
		A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("DTPRR0"),
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: 2,
		size: random(100,180),
		angle: 0,
		xoff: 5,
		yoff: 0,
		zoff: 30,
		startalphaf: 0.85,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
	}
	PRID A 0
	{
	A_FaceTarget();
	A_StartSound("PM/RuneFill",21);
	A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("DTPRR0"),
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: 10,
		size: 170,
		angle: 0,
		xoff: 40,
		yoff: random(-30,30),
		zoff: random(0,60),
		startalphaf: 1,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
	}
	PRID AAAAAAAAAAA 1
	{
		A_FaceTarget();
		PM_GazerGlow();
	}
	PRID A 0
	{
	A_FaceTarget();
	A_StartSound("PM/RuneFill",21);
	A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("DTPRR0"),
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: 10,
		size: 170,
		angle: 0,
		xoff: 40,
		yoff: random(-30,30),
		zoff: random(0,60),
		startalphaf: 1,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
	}
	PRID AAAAAAAAAAA 1
	{
		A_FaceTarget();
		PM_GazerGlow();
	}
	PRID A 0
	{
	A_FaceTarget();
	A_StartSound("PM/RuneFill",21);
	A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("DTPRR0"),
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: 10,
		size: 170,
		angle: 0,
		xoff: 40,
		yoff: random(-30,30),
		zoff: random(0,60),
		startalphaf: 1,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
	}
	PRID AAAAAAAAAAA 1
	{
		A_FaceTarget();
		PM_GazerGlow();
	}
  BulletHell2Loop:
	PRID A 7
	{
	PM_GazerGlow();
	A_FaceTarget();
	A_SpawnProjectile("PM_GazerBall",60,0,0,CMF_OFFSETPITCH,5);
	}
	PRID A 7
	{
	PM_GazerGlow();
	A_FaceTarget();
	A_SpawnProjectile("PM_GazerBall",30,30,5,CMF_OFFSETPITCH,0);
	}
	PRID A 7
	{
	PM_GazerGlow();
	A_FaceTarget();
	A_SpawnProjectile("PM_GazerBall",2,0,0,CMF_OFFSETPITCH,-5);
	}
	PRID A 7
	{
	PM_GazerGlow();
	A_FaceTarget();
	A_SpawnProjectile("PM_GazerBall",30,-30,-5,CMF_OFFSETPITCH,0);
	}
	TNT1 A 0 A_Jump(80,"BulletHell2End");
	PRID A 0 A_CheckLOF("BulletHell2Loop");
  BulletHell2End:
	TNT1 A 0
		{
		A_GiveInventory("PM_GazerSigilGoAway");
		sigil = false;
		}
	Goto See;
  MissileReady:
	TNT1 A 0 A_Jump(130,"Dodge","PhaseOut","MissileProceed");
	PRID A 0 { gazer = false; alpha = 1; }
	PRID AAAAAAAA 1 A_GazerStop();
	PRID A 10 A_FaceTarget();
	PRID A 0 A_Recoil(random(20,50));
	PRID AAAAAAAAAAAAAAAAAAAAAAAA 1
	{
		A_SpawnParticleEx
	    (   
		 "aa0000",
		 TexMan.CheckForTexture("GNSMK0"),
		 style: STYLE_Add,
		 flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
		 lifetime: random(45,67),
		 size: 50.0,
		 xoff: frandom(-3.5,3.5),
		 yoff: frandom(-3.5,3.5),
		 zoff: frandom(-3.5,3.5) + 30,
		 velx: frandom(-1,1),
		 vely: frandom(-1,1),
		 velz: frandom(-1,1),
		 startalphaf: 0.5,
		 fadestepf: -1,
		 sizestep: 2,
		 startroll: random(-180,180)
	    );
		A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("DTPRR0"),
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: 2,
		size: 80.0,
		angle: 0,
		xoff: -2,
		yoff: 0,
		zoff: 30,
		startalphaf: 0.85,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
	}
	PRID AAAAAAAAAAAAA 1 A_GazerStop();
	PRID A 0 { gazer = true; }
	Goto See;
  Dodge:
	PRID A 0
	{
		gazer = false;
		//A_StartSound("PMGazer/Attack");
		Vel3DFromAngle(random(10, 15), angle + (random(1, -1) * 90), pitch);
	}
	PRID AAAAAAAAAAAAAAAAAAAAAA 1
	{
		A_SpawnParticleEx
	    (   
		 "aa0000",
		 TexMan.CheckForTexture("GNSMK0"),
		 style: STYLE_Add,
		 flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
		 lifetime: random(45,67),
		 size: 50.0,
		 xoff: frandom(-3.5,3.5),
		 yoff: frandom(-3.5,3.5),
		 zoff: frandom(-3.5,3.5) + 30,
		 velx: frandom(-1,1),
		 vely: frandom(-1,1),
		 velz: frandom(-1,1),
		 startalphaf: 0.25,
		 fadestepf: -1,
		 sizestep: 2,
		 startroll: random(-180,180)
	    );
	}
	PRID AAAAAAAAAAAA 1 A_GazerStop();
	PRID A 0 { gazer = true; }
	Goto See;
  PhaseOut:
	PRID AAAAAAAAAA 1 { alpha -= 0.1; }
	TNT1 A 10;
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander();
	TNT1 A 10;
	PRID AAAAAAAAAA 1 { alpha += 0.1; }
	Goto See;
  Pain:
	TNT1 A 0 
			{ 
			 if(sigil)
			 A_GiveInventory("PM_GazerSigilGoAway");
			 sigil = false;
			}
	PRID A 0 A_Jump(30, "PhaseOut");
	PRID A 4 A_Jump(200, "Dodge");
	PRID A 4 { alpha = 1; A_Pain(); }
	Goto See;
  Death:
	 TNT1 A 0 
			{ 
			 if(sigil)
			 A_GiveInventory("PM_GazerSigilGoAway");
			 sigil = false;
			}
	PRID A 0 { gazer = false; PM_Scream(); alpha = 1; }
	PRID AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1
	{
		vel.z += frandom(-3, 3);
		vel.y += frandom(-3, 3);
		vel.x += frandom(-3, 3);
		
		angle = frandom(0, 360);
		
		A_SpawnParticleEx
	    (   
		 "aa0000",
		 TexMan.CheckForTexture("GNSMK0"),
		 style: STYLE_Add,
		 flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,
		 lifetime: random(45,67),
		 size: 50.0,
		 xoff: frandom(-3.5,3.5),
		 yoff: frandom(-3.5,3.5),
		 zoff: frandom(-3.5,3.5) + 30,
		 velx: frandom(-1,1),
		 vely: frandom(-1,1),
		 velz: frandom(-1,1),
		 startalphaf: (alpha / 2),
		 fadestepf: -1,
		 sizestep: 2,
		 startroll: random(-180,180)
	    );
		
		A_FadeOut(0.01);
	}
	Stop;
  }
}

Class PM_GazerPentagram : Actor
{
  Default
  {
	+NOINTERACTION;
	RenderStyle "Add";
	+BRIGHT;
	+FORCEXYBILLBOARD
	+ROLLSPRITE
	Scale 1.15;
  }
  
  double rollsp;
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	rollsp = frandom(1, 6) * randompick(1, -1);
  }
  
  override void Tick()
  {
	super.Tick();
	roll += rollsp;
	
	if (master)
	{
		alpha = master.alpha;
		Warp(master, 0, 0, 30, master.angle, WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
	}
	else Destroy();
  }
  
  States
  {
  Spawn:
	PRID XYZ 5;
	Loop;
  }
}

Class PM_GazerBall : Actor
{
   Default
   {
   Height 3;
   Radius 3;
   Speed 12;
   Damagefunction 10;
   Scale 1;
   Alpha 0.9;
   PROJECTILE;
   RenderStyle "Add";
   +BRIGHT
   DamageType "PM_BulletHellDamage";
   SeeSound "PM/BulletHellSpawn";
   DeathSound "GenericPlasmaExp";
   +FORCEXYBILLBOARD 
   +ROLLSPRITE
   +ROLLCENTER
   }
   States
   {
   Spawn:
	  TNT1 A 0;
	  TNT1 AA 0
	  {
	  A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("DTPRR0"),
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: random(3,8),
		size: random(80,130),
		angle: 0,
		xoff: 0,
		yoff: 0,
		zoff: 0,
		startalphaf: 1,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
	}
   Go:
      BH_B A 1 Bright A_SetRoll(roll+25);
    Loop;
   Death:
		TNT1 AA 0
		{
		A_SpawnParticleEx
		(
		"",
		TexMan.CheckForTexture("DTPRR0"),
		style: STYLE_Add,
		flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,
		lifetime: random(2,8),
		size: random(100,170),
		angle: 0,
		xoff: 0,
		yoff: 0,
		zoff: 0,
		startalphaf: 0.95,
		fadestepf: -1,
		sizestep: -15,
		startroll: random(-180,180)
		);
		}
		TNT1 AAAAA 0
		{
		A_SpawnParticleEx
	    (
		"",
		TexMan.CheckForTexture("RLSSA0"),
		style: STYLE_Add,
		flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,
		lifetime: random(6,15),
		size: random(10,20),
		angle: 0,
		xoff: 0,
		yoff: 0,
		velx: random(-4,4),
		vely: random(-4,4),
		velz: random(-4,4),
		accelx: 0,
		accely: 0,
		accelz: 0,
		startalphaf: 0.7,
		fadestepf: -1,
		sizestep: 0,
		startroll: random(-180,180),
		rollvel: 0,
		rollacc: 0
	    );
		}
	  TNT1 A 5 Light("Shadowball2");
      Stop;
	  }
}

Class PM_GazerSigil : Actor
{
  Default
  {
  StencilColor "Red";
  Scale 0.85;
  Alpha 0.9;
  +ROLLSPRITE
  +FORCEXYBILLBOARD
  +ROLLCENTER
  +NOINTERACTION
  +BRIGHT;
  Translation "0:255=%[0,0,0]:[1.0,0.1,0.1]";
  }

  override void PostBeginPlay()
	{
	if(master)
		{
		master.A_StartSound("PM/SigilSpawn",20);
		}
	Super.PostBeginPlay();
	pitch = 270;
	}
	
  override void Tick()
  {
	Super.Tick();
	A_Warp(AAPTR_MASTER, 20, 0, 30, 0, WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION);
	if(master && master.CountInv("PM_GazerSigilGoAway") == 1)
	 SetStateLabel("Death");
	else if(!master)
	 SetStateLabel("Death");
  }
	
  States
  {
  Spawn:
   C1TE AAA 5 A_FadeIn(0.55,0);
   C1TE A 1 A_SetRoll(roll+20);
   Wait;
  Death:
   TNT1 A 0 
   {
   if(master)
    master.A_TakeInventory("PM_GazerSigilGoAway");
   }
   C1TE A 2 A_FadeOut(0.35);
   Wait;
  }
}

Class PM_GazerSigilGoAway : Inventory
{
 Default { Inventory.MaxAmount 1; }
}