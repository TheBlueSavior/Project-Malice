Class PM_CivilianZombie : PMLustMonsterBase
{ 
    int shotcount;
	int grenadecount;
	int throwrange;
	Default
	{
	PMMonsterBase.CodexLore
	"Hedonists are aggressive zombies possessed by sprites belonging to the circle of Lust. 
	With their brains hot-wired to seek pleasure by any means necessary, they are especially ruthless in their endless thirst for blood, usually fatally injuring survivors with the first firearm they'd see and watching them limp for the sake of it, or setting entire triage stations on fire with molotov cocktails.
	Getting too close to a Hedonist isn't recommended, for the sprite also happened to create some.. turbulent changes to their torso's anatomy.
	
	Uses a revolver to nail shots at you with. Can sometimes throw molotovs, if they happen to have one or several.";
    Health 20;
    Radius 20;
    Height 56;
    Speed 10;
    PainChance 200;
	MeleeRange 75;
	MeleeThreshold 120;
    Mass 100;
    Damage 1;
    MONSTER;
    +FloorClip
	+SLIDESONWALLS
	+HARMFRIENDS
	+DOHARMSPECIES
	Species "Zombie";
	Tag "Hedonist";
    Obituary "A Hedonist shown %o their final sunset.";
    SeeSound "CivZombie/Sight";
    PainSound "CivZombie/Pain";
    DeathSound "CivZombie/Death";
    ActiveSound "CivZombie/Active";
	Bloodtype "PM_NormalBloodBase";
    DropItem "Clip";
    Decal "Bulletchip";
	TeleFogSourceType "PM_PossessedTeleportFog";
	TeleFogDestType "PM_PossessedTeleportFog";
	}
	
    States
    {
    Spawn:
        TIPZ A 0 NoDelay
        {
		 grenadecount = random(-1,4);
         user_numbullets = random(0,5);
        }
     Idle:
        TIPZ AAAAAAAAAA 10 PM_Look();
		TIPZ A 0
		{
		if (!random(0, 30))
			{
				A_StartSound(activesound,554,volume:frandom(0.05,0.2),pitch:frandom(0.75,0.88));
			}
		}
		TIPZ A 0 A_Jump(45,"Explore");
		Loop;
	Explore:
		TNT1 A 0 A_SetSpeed(6);
		TNT1 A 0
		{
		if (!random(0, 12))
			{
				A_StartSound(activesound,554,volume:frandom(0.05,0.2),pitch:frandom(0.75,0.88));
			}
		}
		TNT1 A 0 A_StartSound("ZombieSoldier/Step",4,volume:0.5);
		THPZ AAABBB 4
		{
		PM_Look();
		A_Wander();
		}
		TNT1 A 0 A_StartSound("ZombieSoldier/Step",4,volume:0.5);
		THPZ CCCDDD 4
		{
		A_Wander();
		PM_Look();
		}
		THPZ A 0 A_Jump(40,"Idle");
		Loop;
    Look:
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
        THPZ AABB 3 PM_LookingForPlayer();
		TNT1 A 0 A_JumpIfTargetinLOS("Spotted",150,JLOSF_DEADNOJUMP);
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ CCDD 3 PM_LookingForPlayer();
        Loop;
	Spotted:
	    TNT1 A 0 A_Jump(256,"Roar","SpotMissile","See");
		Goto See;
	Roar:
        TNT1 A 0 PM_AlertSound();    
	See:
		TNT1 A 0 { bFRIGHTENED = false; }
		TNT1 A 0 { bMISSILEEVENMORE = false; }
		TNT1 A 0 A_SetSpeed(12);
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		TNT1 A 0 A_Recoil(-1.6);
        THPZ AA random(2,3) A_Chase();
		THPZ BB random(2,3) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		TNT1 A 0 A_Recoil(-1.6);
		THPZ CC random(2,3) A_Chase();
		THPZ DD random(2,3) A_Chase();
        Loop;
    SpotMissile:
        TNT1 A 0 PM_AlertSound();
	    THPZ EE 3 A_FaceTarget();
		Goto RealMissile;
	Melee:
		WTFF A 3 A_FaceTarget();
		WTFF A 4 A_StartSound("CivZombie/MutationRip",15);
		WTFF BBBCCC 1
		{
			A_Recoil(-0.3);
			A_FaceTarget();
			A_SpawnItemEx("PM_TumorBurstBlood",random(-5,5) + 8,random(-5,5),30,random(0,2),random(-2,2),random(0,2),0,SXF_NOCHECKPOSITION);
		}
		WTFF DDDDDD 2
		{
			A_Recoil(-2);
			A_FaceTarget();
			A_SpawnItemEx("PM_TumorBurstBlood",random(-5,5) + 8,random(-5,5),30,random(0,2),random(-2,2),random(0,2),0,SXF_NOCHECKPOSITION);
		}
		WTFF E 40
		{
			A_Recoil(-6);
			A_FaceTarget();
			A_StartSound("GBloodSplashBig",16);
			A_StartSound("ArachExpGore",17,CHANF_DEFAULT,0.65);
			
			if (target && checksight(target) && distance3D(target) < 75)
			{
				int damage = 30;
				int newdam = target.DamageMobj(self, self, damage, "Lust");
				target.TraceBleed(newdam > 0 ? newdam : damage, self);
				target.Vel3DFromAngle(8, self.angle, self.pitch);
			}
		
			for (int i = random(5, 15); i > 0; i--) A_SpawnItemEx("PM_TumorBurstBlood",random(-5,5) + 8,random(-5,5),30,random(0,4),random(-4,4),random(0,5),0,SXF_NOCHECKPOSITION);
			for (int i = random(3, 2); i > 0; i--) A_SpawnItemEx("PM_NormalMeatChunkLauncher",random(-5,5) + 8,random(-5,5),30,random(0,4),random(-4,4),random(0,5),0,SXF_NOCHECKPOSITION);
		}
		WTFF E 3 A_StartSound("CivZombie/MutationExit",15);
		WTFF DCBAA 4 A_FaceTarget();
		Goto See;
    Missile:
		TNT1 A 0;
		TNT1 A 0 { if(target && CheckSight(target) && random(1,2) == 1 && grenadecount > 0 )
		SetStateLabel("MolotovCheck"); }
		//TNT1 A 0 A_Jump(100,"StandoffCheck");
		TNT1 A 0 A_JumpIfCloser(300,"RealMissile");
		TNT1 A 0 A_Jump(195,"RealMissile");
		Goto RealMissile;
		
   Retreat:
		TNT1 A 0 A_SetSpeed(12);
		TNT1 A 0 { bFRIGHTENED = true; }
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ AABB random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ CCDD random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ AABB random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ CCDD random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ AABB random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ CCDD random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ AABB random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ CCDD random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ AABB random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ CCDD random(1,2) A_Chase();
		Goto See;
		
		CloseMissile:
		TNT1 A 0 A_Jump(256,"Missile","Retreat");
		Goto See;
		
	StandoffCheck:
		TNT1 A 0 A_JumpIfCloser(500,"CloseMissile");
		TNT1 A 0 A_SetSpeed(12);
		TNT1 A 0 { bFRIGHTENED = true; }
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ AABB random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ CCDD random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ AABB random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ CCDD random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ AABB random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ CCDD random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ AABB random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ CCDD random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ AABB random(1,2) A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ CCDD random(1,2) A_Chase();
	Standoff:
		TNT1 A 0 { bFRIGHTENED = false; }
		TNT1 A 0 { bMISSILEEVENMORE = true; }
		TNT1 A 0 A_Jump(10,"See");
		TNT1 A 0 A_JumpIfCloser(500,"Retreat");
		TNT1 A 0 A_SetSpeed(0);
		TIPZ AAAAAAAAAAA 3 
		{
		A_Chase("StandoffMissile","StandoffMissile");
		A_FaceTarget();
		}
		TNT1 A 0 A_CheckSight("See");
		TNT1 A 0 A_Jump(120,"StandoffRepos");
		Loop;
	StandoffRepos:
		TNT1 A 0 { bFRIGHTENED = true; }
		THPZ A 1 A_Chase();
	StandoffReposLoop:
		TNT1 A 0 A_SetSpeed(10);
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",4);
		THPZ AABB 2 A_Wander();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",4);
		THPZ CCDD 2 A_Wander();
		TNT1 A 0 { bFRIGHTENED = false; }
		TNT1 A 0 A_Jump(80,"Standoff");
		Loop;
	StandoffMissile:
        TNT1 A 0 { if(random(1,2) == 1)
		A_StartSound("CivZombie/Attack",10);
		pm_attackloop = random(1,2); }
        THPZ EEE 5
	    {
	    A_FaceTarget(360,180,0,0);
	    A_SetAngle(angle+random(-2,2));
	    A_SetPitch(pitch+random(10,-2));
	    }
	StandoffMissile2:
	    THPZ E 10 A_StartSound("PM/RevolverHammer");
        THPZ F 2 BRIGHT Light("YellowMediumFlicker2")
		{
		if(user_numbullets < 0) { SetStateLabel("NoAmmo"); }
		A_StartSound("PistolZombie/FireDistant",CHAN_7,CHANF_OVERLAP);
		A_StartSound("CivZombie/Shot",9,CHANF_OVERLAP);
		A_SpawnProjectile("PM_RevolverTracer",43,5,frandom(-1, 1),CMF_AIMDIRECTION,pitch+frandom(-0.5, 0.5));
        A_SpawnItemEx("PM_SmallBulletCasing",-10,0,45,0,frandom(5,15),frandom(5,8),0,SXF_NOCHECKPOSITION);
		user_numbullets--;
		pm_attackloop--;
		shotcount++;
		}
		THPZ EE random(5,8) A_FaceTarget(15,20,0,0);
		TNT1 A 0 { if(pm_attackloop <= 0) { SetStateLabel("Standoff"); } }
		Loop;
	NoAmmo:
        THPZ E 7 A_FaceTarget();
        TNT1 A 0 A_StartSound("PM/GunClick",CHAN_5);
        THPZ E 15 A_FaceTarget();
		TNT1 A 0 A_Jump(138,"ZReload");
        TNT1 A 0 A_StartSound("PM/GunClick",CHAN_5);
        THPZ E 10 A_FaceTarget();
        TNT1 A 0 A_StartSound("PM/GunClick",CHAN_5);
        THPZ AAAA 8 A_FaceTarget();
		Goto ReloadRetreat;
	ReloadRetreat:
		TNT1 A 0 A_SetSpeed(12);
		TNT1 A 0 { bFRIGHTENED = true; }
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ AABB 2 A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		THPZ CCDD 2 A_Chase();
		TNT1 A 0 A_StartSound("Afflicted/WalkStep",CHAN_6);
		TNT1 A 0 A_Jump(55,"ZReload");
		TNT1 A 0 A_CheckSight("ZReload");
		Loop;
    RealMissile:
        TNT1 A 0 { pm_attackloop = random(1,2); }
        THPZ EEE 5
	    {
	    A_FaceTarget(360,180,0,0);
	    A_SetAngle(angle+random(-2,2));
	    A_SetPitch(pitch+random(-2,2));
	    }
	MissileLoop:
	    THPZ E 12 A_StartSound("PM/RevolverHammer");
        THPZ F 2 BRIGHT Light("YellowMediumFlicker2")
		{
		if(user_numbullets < 0) { SetStateLabel("NoAmmo"); }
		A_StartSound("PistolZombie/FireDistant",CHAN_7,CHANF_OVERLAP);
		A_StartSound("CivZombie/Shot",9,CHANF_OVERLAP);
		A_SpawnProjectile("PM_RevolverTracer",43,5,frandom(-1, 1),CMF_AIMDIRECTION,pitch+frandom(-0.5, 0.5));
		user_numbullets--;
		pm_attackloop--;
		shotcount++;
		}
		THPZ EE random(5,8) A_FaceTarget(15,20,0,0);
		TNT1 A 0 { if(pm_attackloop <= 0) { SetStateLabel("See"); } }
		Loop;
    MolotovCheck:
	  TNT1 A 0;
	  TNT1 A 0 A_JumpIfHigherOrLower("RealMissile","RealMissile");
	  TNT1 A 0 A_JumpIfCloser(150,"MolotovRetreatCheck");
	  TNT1 A 0 A_CheckLOF("MolotovCheck2");
      Goto Retreat;
	MolotovRetreatCheck:
	  TNT1 A 0 A_Jump(56,"Retreat");
	  Goto RealMissile;
	  MolotovCheck2:
      TNT1 A 0 
	  {
	   if(target && CheckSight(target) && CheckLOF())
	   {
	   if(Distance3D(target) < 600)
	   throwrange = -18;
	   if(Distance3D(target) < 450)
	   throwrange = -5;
	   SetStateLabel("RealMolotov");
	   }
	  }
      Goto Missile;
    RealMolotov:
      THPZ AA 3 A_FaceTarget();
      TNT1 A 0 A_StartSound("CivZombie/IEDTakeOut",8);
      THPZ AAAAAAA 5 {  A_FaceTarget();
	  if(target && CheckSight(target) && random(1,5) == 1 && Distance3D(target) < 200)
	  SetStateLabel("Retreat"); }
	  TNT1 A 0 A_StartSound("PM/FlamerReady");
	  THPZ AAAA 5 Light("AvatarFireball3") A_FaceTarget();
	  TNT1 A 0 A_StartSound("CivZombie/Attack",10);
	  THPZ AA 5 Light("AvatarFireball3");
      THPZ A 5 
      {
		let p = A_SpawnProjectile("PM_CivZombieMolotov",33,0,random(-1,1),CMF_AIMDIRECTION|CMF_OFFSETPITCH);
		let tgt = target;
		if (p && tgt) { p.vel = CalcThrowVector(pos, tgt.pos, 1.25, 125.0); }
		grenadecount--;
      }
      Goto Retreat;
    ZReload:
	    TNT1 A 0 { bNOPAIN = true; }
        THPZ EEEEEEEE 3 A_FaceTarget(10,20,0,0);
        TNT1 A 0 A_StartSound("PM/RevolverOpen",CHAN_5);
        THPZ AAAA 8 A_FaceTarget(10,20,0,0);
		TNT1 A 0 A_StartSound("PM_RevolverBulletOut",5,CHANF_OVERLAP);
		TNT1 A 0 { for(int i=shotcount;i>0;i--)
		A_SpawnItemEx("PM_SmallBulletCasing",-10,0,45,0,frandom(1,2),frandom(-1,1),0,SXF_NOCHECKPOSITION); 
		shotcount = 0;
		}
        THPZ AAA 8 A_FaceTarget(10,20,0,0);
	ZReload2:
	    THPZ AAAAA random(1,5) A_FaceTarget(10,20,0,0);
        TNT1 A 0 A_StartSound("PM/RevolverBulletIn",CHAN_5);
		TNT1 A 0 { user_numbullets += 1; }
        THPZ BBBBB random(1,5) A_FaceTarget(10,20,0,0);
		TNT1 A 0 { 
		if(user_numbullets >= 5) 
		SetStateLabel("ZReload3"); 
	    if(target && CheckSight(target) && Distance3D(target) < 250)
	    SetStateLabel("ZReload3");
		}
		Loop;
	ZReload3:
	    TNT1 A 0 { bNOPAIN = false; }
	    THPZ AAAA 3 A_FaceTarget(10,20,0,0);
		TNT1 A 0 A_StartSound("PM/RevolverClose");
		TNT1 A 0 {
	    if(target && CheckSight(target) && Distance3D(target) < 250)
	    SetStateLabel("RealMissile"); }
        Goto See;
    Pain:
        THPZ H 5;
        THPZ H 3 A_Pain;
        Goto See;
    Death:
        THPZ H 5 PM_Scream();
        THPZ I 5 A_NoBlocking;
        THPZ J 5;
        THPZ K 5;
		THPZ A 0 A_StartSound("Corpse/Fall",CHAN_6);
		THPZ L 90;
		TNT1 A 0 { if(random(1,3) == 1) A_SpawnItemEx("PM_PossessingDemon",0,0,5,0,0,0,random(0,360),SXF_NOCHECKPOSITION); }
        THPZ L -1;
        Stop;
    XDeath:
        TNT1 A 0 A_StopSound(555);
		THPZ M 5 PM_Gib();
		THPZ N 5 A_XScream;
        THPZ O 5 A_NoBlocking;
        THPZ P 5;
        THPZ Q 5;
        THPZ RST 5;
        THPZ U -1;
        Stop;
    Raise:
        THPZ LKJIH 5;
        Goto Look;
    }
}

Class PM_CivZombieMolotov : PM_ZTrooperFragGrenade 
{
 Default
 {
  Speed 18;
  Gravity 1.25;
  BounceCount 4;
  BounceSound "CivZombie/IEDBounce";
  -BOUNCEONACTORS
  -BOUNCEONWALLS
 }
 
 States
 {
  Spawn:
	TNT1 A 0;
	TNT1 A 0 A_StartSound("CivZombie/MolotovFuse",10,CHANF_LOOPING);
  Spawn2:
	PI_B A 2 Light("AvatarFireball2")
    {
	A_SpawnParticleEx
	(
	"",
	TexMan.CheckForTexture("F1R1A0"),
	style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_ROLL|SPF_RELATIVE,
	lifetime: random(5,20), size: 30.0, xoff: -10, vely:frandom(-0.5,0.5), velz:frandom(0.5,1.5), startalphaf: 0.8, fadestepf: -1,
	sizestep: -0.28, startroll: random(-180,180), rollvel: random(-10,10) );
    A_SetRoll(roll+15);
	A_SpawnParticleEx
	(
	"",
	TexMan.CheckForTexture("SPKOA0"),
	style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_ROLL|SPF_RELATIVE,
	lifetime: random(1,60), size: random(1,8), xoff: -10, velx:frandom(-1.5,1.5), vely:frandom(-1.5,1.5), velz:frandom(-1.5,1.5), startalphaf: 0.8, fadestepf: -1,
	sizestep: 0.25, startroll: random(-180,180), rollvel: random(-10,10) );
    A_SetRoll(roll+15);
    }
	Loop;
  Bounce:
	Goto Spawn2;
  Crash:
  XDeath:
  Death:
	TNT1 A 0 A_SetRoll(0);
	TNT1 A 0 A_StopSound(10);
	PI_B AA 1;
	TNT1 A 0 
	{
	A_StartSound("CivZombie/MolotovDetonate",6);
	A_StartSound("Noble/BombExpFar",7);
	}
	TNT1 A 0 {bNoGravity = true;}
	TNT1 A 0 {
	for(int i=4;i>0;i--) A_SpawnItemEx("PM_GrenadeGenericExplosionFlames",0,0,0,random(-2,2),random(-2,2),random(-1,2),0,SXF_NOCHECKPOSITION);
	for(int i=3;i>0;i--) A_SpawnItemEx("PM_BigFireGlobs",0,0,0,random(-6,6),random(-6,6),random(-1,4),0,SXF_NOCHECKPOSITION);
	for(int i=5;i>0;i--) A_SpawnProjectile("PM_DarkExpSmoke",7,0,random(0,360),2,random(0,360));
	for(int i=random(5,10);i>0;i--) A_SpawnItemEx("PM_ExileFireShrapnel",0,0,0,frandom(-4,4),frandom(-3,3),frandom(5,16),0,SXF_NOCHECKPOSITION);
	}
	TNT1 A 0 Radius_Quake (3, 24, 0, 15, 0);
	TNT1 A 0 A_Explode(30,200);
	TNT1 AA 0 A_SpawnItemEx("PM_ExplosionLongerSmoke",0,0,1,random(-3,3),random(-3,3),random(0,2));
	Stop;
 }
}