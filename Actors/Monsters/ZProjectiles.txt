//Zombies

Class PMProjectileBase : Actor abstract
{
 sound whiz;
 double whizrange;
 int whizcooldown;
 
 property WhizSound : whiz;
 property WhizRangeCheck : whizrange;
 
 Default
 {
  Projectile;
  PMProjectileBase.WhizRangeCheck 150;
  RenderStyle "Add";
  Alpha 1.0;
 }
 
  override void PostBeginPlay()
  {
   Super.PostBeginPlay();
   vel*=pm_bulletspeedfactor;
  }
  override void Tick()
  {
   Super.Tick();
   if(whizcooldown > 0) whizcooldown--;
  }
 
  void PM_CheckWhiz()
  {
	if (!CheckRange(whizrange))
	{
		let curCamera = players [consolePlayer].camera;
		if(!whizcooldown)
		 { 
		  if(CheckSight(curCamera) && CheckIfCloser(curCamera,whizrange)) 
		  { 
		    A_StartSound(whiz, 20, CHANF_DEFAULT|CHANF_OVERLAP, attenuation: 0.65); 
			whizcooldown += 30; 
		  }
		 }
	}
  }
  
}

Class PM_BulletTracer : PMProjectileBase
{
 Default
 {
  Projectile;
  PMProjectileBase.WhizSound "PM/BulletWhiz";
  Decal "PM_BulletHoleMedium";
  Height 2;
  Radius 2;
  Speed 36;
  FastSpeed 72;
  DamageFunction (10*pm_bulletdamagefactor);
  DamageType "Bullet";
  Scale 0.85;
  +BLOODSPLATTER 
  +THRUGHOST
 }

 override void PostBeginPlay()
 {
  Super.PostBeginPlay();
  tex[0] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
  tex[1] = TexMan.CheckForTexture("LEYSO0",TexMan.Type_Sprite);
  tex[2] = TexMan.CheckForTexture("SPKOB0",TexMan.Type_Sprite);
  tex[3] = TexMan.CheckForTexture("SPKOC0",TexMan.Type_Sprite);
  tex[4] = TexMan.CheckForTexture("SPKOA0",TexMan.Type_Sprite);
 }
 
 TextureID tex[5];

States
{
	Spawn:
        TNT1 A 0;
		TNT1 A 0
		{
		  A_SpawnParticleEx( "#d2d2d2", tex[0], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(10,250)
		  ,size: frandom(10,50), xoff: -25, velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7)
		  ,startalphaf: frandom(0.3,0.5), fadestepf: -1, sizestep: frandom(0.0,1.4), startroll: random(-180,180), rollvel: frandom(-1,1));
		
		  A_SpawnParticleEx( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(1,4)
		  , size: frandom(40,100), xoff: -22, startalphaf: frandom(0.75,1), sizestep: frandom(0.0,3),startroll: random(-180,180) );
		  
		  A_SpawnParticleEx( "", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(1,4)
		  , size: frandom(40,190), xoff: -22, startalphaf: 1.0, sizestep: frandom(0.0,3),startroll: random(-180,180) );
		}
	Go:
		TRCR A 1 Bright { PM_CheckWhiz(); A_Quake(1,4,0,100,0); }
        Loop;
	Death:
		TNT1 A 0 A_Jump(256,"Death1","Death2");
  Death1:
	TNT1 A 0 A_SpawnItemEx("PM_HitPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
	TRCR A 0 A_StartSound("PM/BulletHit");
	TNT1 A 0 A_SpawnItemEx("PM_BulletHitDust",random(-10,10),random(-10,10),random(-10,10),0,0,0,0,SXF_NOCHECKPOSITION,170);
    Stop;
  Death2:
	TNT1 A 0 A_SpawnItemEx("PM_HitPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
	TRCR A 0 A_StartSound("PM/BulletHit");
    TNT1 AAAAAA 0 A_SpawnItemEx("PM_BulletShrapnel",0,0,0,random(-10,10),random(-10,10),random(-10,10),random(-180,180),SXF_NOCHECKPOSITION,170);
	TNT1 A 0 A_SpawnItemEx("PM_BulletHitFog",random(-10,10),random(-10,10),random(-10,10),0,0,0,0,SXF_NOCHECKPOSITION,150);
    stop;
  XDeath:
     TNT1 A 0;
     TRCR A 0 A_StartSound("PM/BulletHitFlesh");
     stop;
  Crash:
    TNT1 A 0 A_SpawnItemEx("PM_HitPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
    TRCR A 0 A_StartSound("PM_BulletHit");
    Stop;
	}
}

Class PM_RevolverTracer : PM_BulletTracer
{
Default
 {
  DamageFunction (18*pm_bulletdamagefactor);
  DamageType "Revolver";
  Scale 0.75;
 }
}

Class PM_DirectorTracer : PM_BulletTracer
{
Default
 {
  Speed 70;
  DamageFunction (50*pm_bulletdamagefactor);
  DamageType "Autocannon";
  Scale 1;
  PMProjectileBase.WhizSound "PM/HeavyBulletWhiz";
 }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 0
		{
			A_SpawnParticleEx( "#d2d2d2", tex[0], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(10,300),size: frandom(10,150), xoff: -10, velx: frandom(0,8), vely: frandom(-2,2), velz: frandom(-1,1), startalphaf: frandom(0.0,0.8)
			,fadestepf: -1, sizestep: frandom(0.0,1.4), startroll: random(-180,180), rollvel: frandom(-1,1));
			A_SpawnParticleEx( "", tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(2,5), size: frandom(80,250), startalphaf: 1.0, sizestep: frandom(0.0,3),startroll: random(-180,180));
			A_SpawnParticleEx( "", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,4),size: frandom(40,190), xoff: -22, startalphaf: 1.0, sizestep: frandom(0.0,3), startroll: random(-180,180) );
		}
		Goto Go;
	Death:
	    TNT1 AA 0 A_SpawnItemEx("PM_HitPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
	    TRCR A 0 A_StartSound("PM/BulletHit");
	    TNT1 A 0
	    {
		 for(int i=3;i>0;i--)
		  { A_SpawnParticleEx( "#d2d2d2", tex[0], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(50,120),size: frandom(65,150), velx: frandom(-2,2), vely: frandom(-2,2), velz: frandom(-1,1), startalphaf: frandom(0.4,0.9)
		  ,fadestepf: -1, sizestep: frandom(0.0,1.4), startroll: random(-180,180), rollvel: frandom(-1,1)); }
		 for(int i=random(2,6);i>0;i--)
		  { A_SpawnParticleEx( "", tex[4], style: STYLE_Add, flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, lifetime: random(20,85),size: frandom(3,15), velx: frandom(-5,5), vely: frandom(-5,5), velz: frandom(-1,5), accelz: -0.3, startalphaf: frandom(0.4,1.0)
		  ,fadestepf: -1, sizestep: -0.2, startroll: random(-180,180), rollvel: frandom(-1,1)); }
	    }
        Stop;
  XDeath:
        TNT1 A 0;
		TNT1 A 0 A_RadiusThrust(150,200,RTF_NOIMPACTDAMAGE);
        TRCR A 0 A_StartSound("PM/BulletHitFlesh");
        Stop;
  Crash:
        TNT1 AA 0 A_SpawnItemEx("PM_HitPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
        TRCR A 0 A_StartSound("PM_BulletHit");
        Stop;
	}
}

Class PM_PelletTracer : PM_BulletTracer
{
Default
{
 Decal "PM_BulletHoleSmall";
 Height 2;
 Radius 2;
 Speed 36;
 FastSpeed 72;
 DamageFunction (8*pm_bulletdamagefactor);
 DamageType "Shotgun";
 Scale 0.85;
}
States
{
	Spawn:
        TNT1 A 0;
		TNT1 A 0
		{
		  A_SpawnParticleEx( "#d2d2d2", tex[0], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL, lifetime: random(10,250),size: frandom(10,50), xoff: -25, velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7),startalphaf: frandom(0.1,0.5)
		  , fadestepf: -1, sizestep: frandom(0.0,1.4), startroll: random(-180,180), rollvel: frandom(-1,1));
		  A_SpawnParticleEx( "", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(1,4), size: frandom(6,180),xoff: -22, startalphaf: 0.9, sizestep: frandom(0.0,3), startroll: random(-180,180));
		for(int i=random(1,2);i>0;i--)
		  { A_SpawnParticleEx( "", tex[4], style: STYLE_Add, flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL, lifetime: random(1,40),size: frandom(0.1,7), xoff: -22, velx: frandom(1,5), vely: frandom(-0.5,0.5), velz: frandom(-0.5,0.5),accelz: frandom(-0.0,-0.3), startalphaf: 1.0
		  , fadestepf: -1, sizestep: -0.2, startroll: random(-180,180) ); }
		}
        Goto Go;
	}
}

Class PM_ShaverTracer : PMProjectileBase
{
 Default
 {
  Projectile;
  PMProjectileBase.WhizSound "PM/ShaverWhiz";
  Decal "PM_BulletHoleMedium";
  Height 2;
  Radius 2;
  Speed 50;
  FastSpeed 75;
  DamageFunction (8*pm_bulletdamagefactor);
  DamageType "Bullet";
  Scale 0.85;
  +BLOODSPLATTER 
  +THRUGHOST
 }

 override void PostBeginPlay()
 {
  Super.PostBeginPlay();
  tex[0] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
  tex[1] = TexMan.CheckForTexture("SH_FA0",TexMan.Type_Sprite);
  tex[2] = TexMan.CheckForTexture("SH_FB0",TexMan.Type_Sprite);
  tex[3] = TexMan.CheckForTexture("DTPRB0",TexMan.Type_Sprite);
  tex[4] = TexMan.CheckForTexture("LEYSO0",TexMan.Type_Sprite);
 }
 
 TextureID tex[5];

States
{
	Spawn:
        TNT1 A 0;
		TNT1 A 0
		{
		  A_SpawnParticleEx( "#2A4382", tex[0], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(10,250)
		  ,size: frandom(10,50), xoff: -35, velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7)
		  ,startalphaf: frandom(0.1,0.5), fadestepf: -1, sizestep: frandom(0.0,1.4), startroll: random(-180,180), rollvel: frandom(-1,1));
		
		  A_SpawnParticleEx( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(2,5)
		  , size: frandom(50,150), xoff: -30, startalphaf: frandom(0.5,1), sizestep: frandom(-8,8),startroll: random(-180,180) );
		  
		  A_SpawnParticleEx( "", tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(2,5)
		  , size: frandom(80,200), xoff: -28, startalphaf: frandom(0.3,1), sizestep: frandom(-8,8),startroll: random(-180,180) );
		  
		  A_SpawnParticleEx( "", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(3,6)
		  , size: frandom(15,25), xoff: -32, startalphaf: 1.0, sizestep: frandom(0.0,20),startroll: random(170,190) );
		  
		  A_SpawnParticleEx( "", tex[4], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(2,5)
		  , size: frandom(40,250), xoff: -30, startalphaf: frandom(0,1), sizestep: frandom(-8,8),startroll: random(-180,180) );
		}
	Go:
		TRCR A 1 Bright { PM_CheckWhiz(); A_Quake(1,4,0,100,0); }
        Loop;
	Death:
		TNT1 A 0 A_Jump(256,"Death1","Death2");
  Death1:
	TNT1 A 0 A_SpawnItemEx("PM_HitPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
	TRCR A 0 A_StartSound("DEmi/TracerHit");
	TNT1 A 0
	{
	 A_SpawnParticleEx( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(4,7)
		  , size: frandom(20,60), xoff: 0, startalphaf: frandom(0.5,1), sizestep: frandom(-4,1),startroll: random(-180,180) );
	}
	TNT1 A 0 A_SpawnItemEx("PM_BulletHitDust",random(-10,10),random(-10,10),random(-10,10),0,0,0,0,SXF_NOCHECKPOSITION,170);
    Stop;
  Death2:
	TNT1 A 0 A_SpawnItemEx("PM_HitPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
	TRCR A 0 A_StartSound("DEmi/TracerHit");
	TNT1 A 0
	{
	 A_SpawnParticleEx( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(4,7)
		  , size: frandom(20,60), xoff: 0, startalphaf: frandom(0.5,1), sizestep: frandom(-4,1),startroll: random(-180,180) );
	}
    TNT1 AAAAAA 0 A_SpawnItemEx("PM_BulletShrapnel",0,0,0,random(-10,10),random(-10,10),random(-10,10),random(-180,180),SXF_NOCHECKPOSITION,170);
	TNT1 A 0 A_SpawnItemEx("PM_BulletHitFog",random(-10,10),random(-10,10),random(-10,10),0,0,0,0,SXF_NOCHECKPOSITION,150);
    stop;
  XDeath:
     TNT1 A 0;
	 TNT1 A 0
		{
		A_SpawnParticleEx( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(4,7)
		  , size: frandom(20,60), xoff: 0, startalphaf: frandom(0.5,1), sizestep: frandom(-4,1),startroll: random(-180,180) );
		}
     TRCR A 0 A_StartSound("PM/BulletHitFlesh");
     stop;
  Crash:
    TNT1 A 0 A_SpawnItemEx("PM_HitPuff",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
    TRCR A 0 A_StartSound("DEmi/TracerHit");
    Stop;
	}
}

Class PM_ShaverSMGTracer : PM_ShaverTracer
{
Default
 {
  DamageFunction (6*pm_bulletdamagefactor);
  Scale 0.75;
 }
 States
 {
	Spawn:
        TNT1 A 0;
		TNT1 A 0
		{
		  A_SpawnParticleEx( "#2A4382", tex[0], style: STYLE_Normal, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT, lifetime: random(10,250)
		  ,size: frandom(10,20), xoff: -35, velx: frandom(0,2), vely: frandom(-0.4,0.4), velz: frandom(-0.4,0.7)
		  ,startalphaf: frandom(0.1,0.5), fadestepf: -1, sizestep: frandom(0.0,1.4), startroll: random(-180,180), rollvel: frandom(-1,1));
		
		  A_SpawnParticleEx( "", tex[2], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(2,5)
		  , size: frandom(30,100), xoff: -30, startalphaf: frandom(0.5,1), sizestep: frandom(-8,8),startroll: random(-180,180) );
		  
		  A_SpawnParticleEx( "", tex[3], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(2,5)
		  , size: frandom(60,140), xoff: -28, startalphaf: frandom(0.3,1), sizestep: frandom(-8,8),startroll: random(-180,180) );
		  
		  A_SpawnParticleEx( "", tex[1], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(3,6)
		  , size: frandom(6,15), xoff: -32, startalphaf: 1.0, sizestep: frandom(0.0,20),startroll: random(170,190) );
		  
		  A_SpawnParticleEx( "", tex[4], style: STYLE_Add, flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(2,5)
		  , size: frandom(20,170), xoff: -30, startalphaf: frandom(0,1), sizestep: frandom(-8,8),startroll: random(-180,180) );
		}
	Go:
		TRCR A 1 Bright { PM_CheckWhiz(); A_Quake(1,4,0,100,0); }
        Loop;
	}
}

//Melee Attacks

Class PM_FastMeleeHitbox : Actor //[NERU] primarily used for lunging monsters
{
  Default
  {
    Height 15;
    Radius 15;
    Speed 22;
    DamageFunction 4;
    +RIPPER
    +THRUGHOST
    +NODAMAGETHRUST
    DeathSound "";
    SeeSound "";
    DamageType "Melee";
    Projectile;
  }
  States
  {
  Spawn:
	TNT1 A 2;
    Stop;
    }
}

Class PM_MeleeHitbox : PM_FastMeleeHitbox //[NERU] used for pinkies
{
  Default
  {
   Speed 12;
   FastSpeed 12;
   -RIPPER
  }
  States
  {
  Spawn:
    TNT1 A 6;
	Stop;
  }
}

Class PM_WeakMeleeHitbox : PM_FastMeleeHitbox
{
  Default
  {
   DamageFunction 2;
   Speed 12;
   FastSpeed 12;
  }
  States
  {
  Spawn:
    TNT1 A 6;
	Stop;
  }
}

class PM_ImpBallBase : PMProjectileBase
{
 Default
 {
   Radius 6;
   Height 8;
   Speed 10;
   FastSpeed 20;
   Damage 3;
   Projectile;
   +RANDOMIZE
   +ZDOOMTRANS
   RenderStyle "Add";
   Alpha 1;
   SeeSound "imp/attack";
   DeathSound "imp/shotx";
 }
 States
 {
 Spawn:
   BAL1 AB 4 BRIGHT;
   Loop;
 Death:
   BAL1 CDE 6 BRIGHT;
   Stop;
 }
}

class PM_CacodemonBallBase : PMProjectileBase
{
	Default
	{
 		Radius 6;
		Height 8;
		Speed 10;
 		FastSpeed 20;
		Damage 5;
		Projectile;
		+RANDOMIZE
 		+ZDOOMTRANS
		RenderStyle "Add";
		Alpha 1;
		SeeSound "caco/attack";
 		DeathSound "caco/shotx";
	}
	States
	{
	Spawn:
 		BAL2 AB 4 BRIGHT;
		Loop;
	Death:
		BAL2 CDE 6 BRIGHT;
		Stop;
	}
}

class PM_FatShotBase : PMProjectileBase
{
	Default
	{
		Radius 6;
		Height 8;
		Speed 20;
		Damage 8;
		Projectile;
		+RANDOMIZE
		+ZDOOMTRANS
		RenderStyle "Add";
		Alpha 1;
		SeeSound "fatso/attack";
		DeathSound "fatso/shotx";
	}
	States
	{
	Spawn:
		MANF AB 4 BRIGHT;
		Loop;
	Death:
		MISL B 8 BRIGHT;
		MISL C 6 BRIGHT;
		MISL D 4 BRIGHT;
		Stop;
	}
}